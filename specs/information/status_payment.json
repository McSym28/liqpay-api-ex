{
  "openapi": "3.1.0",
  "info": {
    "version": "3",
    "title": "External API"
  },
  "servers": [
    {
      "url": "https://liqpay.ua"
    }
  ],
  "paths": {
    "/information/status_payment": {
      "post": {
        "summary": "Checkout",
        "operationId": "checkout",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "version",
                  "public_key",
                  "action",
                  "order_id"
                ],
                "properties": {
                  "version": {
                    "default": 3,
                    "type": "integer",
                    "enum": [
                      3
                    ],
                    "description": "Version API",
                    "examples": [
                      3
                    ]
                  },
                  "public_key": {
                    "type": "string",
                    "description": "Public key - the store identifier. You can get the key in the [store settings](https://www.liqpay.ua/en/adminbusiness)"
                  },
                  "action": {
                    "type": "string",
                    "enum": [
                      "status"
                    ],
                    "examples": [
                      "status"
                    ]
                  },
                  "order_id": {
                    "type": "string",
                    "description": "Unique purchase ID in your shop",
                    "maxLength": 255,
                    "examples": [
                      "order_id_1"
                    ]
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "acq_id": {
                      "type": "number",
                      "description": "Acquirer ID",
                      "examples": [
                        414963
                      ]
                    },
                    "action": {
                      "type": "string",
                      "enum": [
                        "pay",
                        "hold",
                        "paysplit",
                        "subscribe",
                        "paydonate",
                        "auth",
                        "regular"
                      ],
                      "description": "Transaction type. Possible values:\n* `pay` - payment\n* `hold` - amount of hold on sender's account\n* `paysplit` - splitting payments\n* `subscribe` - creation of a regular payment\n* `paydonate` - donation\n* `auth` - card preauth\n* `regular` - regular payment",
                      "examples": [
                        "pay"
                      ]
                    },
                    "agent_commission": {
                      "type": "number",
                      "description": "Agent comission in payment currency",
                      "examples": [
                        0.0
                      ]
                    },
                    "amount": {
                      "type": "number",
                      "description": "Payment amount",
                      "examples": [
                        0.02
                      ]
                    },
                    "amount_bonus": {
                      "type": "number",
                      "description": "Payer bonus amount in payment currency debit",
                      "examples": [
                        0.0
                      ]
                    },
                    "amount_credit": {
                      "type": "number",
                      "description": "Payment amount for credit in currency of `currency_credit`",
                      "examples": [
                        0.02
                      ]
                    },
                    "amount_debit": {
                      "type": "number",
                      "description": "Payment amount for debit in currency of `currency_debit`",
                      "examples": [
                        0.02
                      ]
                    },
                    "authcode_credit": {
                      "type": "string",
                      "description": "Authorization code for transaction of credit",
                      "examples": [
                        "703006"
                      ]
                    },
                    "authcode_debit": {
                      "type": "string",
                      "description": "Authorization code for transaction of debit",
                      "examples": [
                        "108527"
                      ]
                    },
                    "bonus_procent": {
                      "type": "number",
                      "description": "Discount rate in percent",
                      "examples": [
                        7.0
                      ]
                    },
                    "bonus_type": {
                      "type": "string",
                      "enum": [
                        "bonusplus",
                        "discount_club",
                        "personal",
                        "promo"
                      ],
                      "description": "Bonus type, ",
                      "examples": [
                        "bonusplus"
                      ]
                    },
                    "card_token": {
                      "type": "string",
                      "description": "Sender's card token",
                      "examples": [
                        "2DFBFE626B7341611450DE81E971E948D6F260"
                      ]
                    },
                    "commission_credit": {
                      "type": "number",
                      "description": "Commission from the receiver in `currency_credit`",
                      "examples": [
                        0.0
                      ]
                    },
                    "commission_debit": {
                      "type": "number",
                      "description": "Commission from the sender in `currency_debit`",
                      "examples": [
                        0.0
                      ]
                    },
                    "create_date": {
                      "type": "integer",
                      "format": "timestamp-ms",
                      "description": "Date of payment creation",
                      "examples": [
                        1501757716373
                      ]
                    },
                    "currency": {
                      "type": "string",
                      "description": "Payment currency",
                      "examples": [
                        "UAH"
                      ]
                    },
                    "currency_credit": {
                      "type": "string",
                      "description": "Transaction currency of credit",
                      "examples": [
                        "UAH"
                      ]
                    },
                    "currency_debit": {
                      "type": "string",
                      "description": "Transaction currency of debit",
                      "examples": [
                        "UAH"
                      ]
                    },
                    "description": {
                      "type": "string",
                      "description": "Payment description",
                      "examples": [
                        "test"
                      ]
                    },
                    "end_date": {
                      "type": "integer",
                      "format": "timestamp-ms",
                      "description": "Date of payment edition/end",
                      "examples": [
                        1501757729972
                      ]
                    },
                    "info": {
                      "type": "string",
                      "description": "Additional payment information",
                      "examples": [
                        "My information"
                      ]
                    },
                    "ip": {
                      "type": "string",
                      "description": "Sender's IP address",
                      "examples": [
                        "8.8.8.8"
                      ]
                    },
                    "is_3ds": {
                      "type": "boolean",
                      "description": "Possible values:\n* `true` - transaction passed with 3DS\n* `false` - transaction passed without 3DS"
                    },
                    "liqpay_order_id": {
                      "type": "string",
                      "description": "Payment order_id in LiqPay system",
                      "examples": [
                        "NYMK3AE61501685438251925"
                      ]
                    },
                    "moment_part": {
                      "type": "string",
                      "description": "Payment indication in parts",
                      "examples": [
                        true
                      ]
                    },
                    "mpi_eci": {
                      "type": "integer",
                      "enum": [
                        5,
                        6,
                        7
                      ],
                      "description": "Possible values:\n* `5` - the transaction passed with 3DS (issuer and acquirer support 3d Secure technology)\n* `6` - the issuer of the payer card does not support 3d Secure technology\n* `7` - the operation passed without 3d Secure",
                      "examples": [
                        7
                      ]
                    },
                    "order_id": {
                      "type": "string",
                      "description": "Order_id payment",
                      "examples": [
                        "98R1U1OV1485849059893399"
                      ]
                    },
                    "payment_id": {
                      "type": "number",
                      "description": "Payment id in LiqPay system",
                      "examples": [
                        165629
                      ]
                    },
                    "paytype": {
                      "type": "string",
                      "enum": [
                        "card",
                        "privat24",
                        "moment_part",
                        "cash",
                        "invoice",
                        "qr"
                      ],
                      "description": "Methods of payment. Possible values:\n* `card` - card payment\n* `privat24` - with privat24 account\n* `moment_part` - installments\n* `cash` - cash\n* `invoice` - to email\n* `qr` - qr code scanning",
                      "examples": [
                        "card"
                      ]
                    },
                    "public_key": {
                      "type": "string",
                      "description": "Shop public key",
                      "examples": [
                        "i000000000"
                      ]
                    },
                    "receiver_commission": {
                      "type": "number",
                      "description": "Receiver comission in payment currency",
                      "examples": [
                        0.0
                      ]
                    },
                    "rrn_credit": {
                      "type": "string",
                      "description": "Unique transaction ID in authorization and settlement system of issuer bank `Retrieval Reference number`",
                      "examples": [
                        "000664267607"
                      ]
                    },
                    "rrn_debit": {
                      "type": "string",
                      "description": "Unique transaction ID in authorization and settlement system of issuer bank `Retrieval Reference number`",
                      "examples": [
                        "000664267598"
                      ]
                    },
                    "sender_bonus": {
                      "type": "number",
                      "description": "Sender's bonus in the payment currency",
                      "examples": [
                        0.0
                      ]
                    },
                    "sender_card_bank": {
                      "type": "string",
                      "description": "Sender's card bank",
                      "examples": [
                        "pb"
                      ]
                    },
                    "sender_card_country": {
                      "type": "string",
                      "description": "Sender's card country. Digital [ISO 3166-1 code](https://en.wikipedia.org/wiki/ISO_3166-1)",
                      "examples": [
                        804
                      ]
                    },
                    "sender_card_mask2": {
                      "type": "string",
                      "description": "Sender's card",
                      "examples": [
                        "473118*97"
                      ]
                    },
                    "sender_card_type": {
                      "type": "string",
                      "description": "Sender's card type MC/Visa",
                      "examples": [
                        "visa"
                      ]
                    },
                    "sender_commission": {
                      "type": "number",
                      "description": "Commission from the sender in the payment currency",
                      "examples": [
                        0.0
                      ]
                    },
                    "sender_phone": {
                      "type": "string",
                      "description": "Sender's phone number",
                      "examples": [
                        "380950000001"
                      ]
                    },
                    "status": {
                      "type": "string",
                      "enum": [
                        "error",
                        "failure",
                        "reversed",
                        "subscribed",
                        "success",
                        "unsubscribed",
                        "3ds_verify",
                        "captcha_verify",
                        "cvv_verify",
                        "ivr_verify",
                        "password_verify",
                        "phone_verify",
                        "pin_verify",
                        "receiver_verify",
                        "sender_verify",
                        "senderapp_verify",
                        "wait_qr",
                        "p24_verify",
                        "mp_verify",
                        "cash_wait",
                        "hold_wait",
                        "invoice_wait",
                        "prepared",
                        "processing",
                        "wait_accept",
                        "wait_card",
                        "wait_compensation",
                        "wait_lc",
                        "wait_reserve",
                        "wait_secure",
                        "try_again"
                      ],
                      "description": "Payment status.\nAvailable values:\nFinal payment statuses\n* `error` - Failed payment. Data is incorrect\n* `failure` - Failed payment\n* `reversed` - Payment refunded\n* `subscribed` - Subscribed successfully framed\n* `success` - Successful payment\n* `unsubscribed` - Subscribed successfully deactivated\nStatuses that required payment confirmation\n* `3ds_verify` - 3DS verification is required.\n To finish the payment you will require a [3ds_verify](https://www.liqpay.ua/en/doc/api/confirmation/3ds)\n* `captcha_verify` - Waiting for customer to confirm with captcha\n* `cvv_verify` - Sender's card CVV is required. To finish the payment you will require a [cvv_verify](https://www.liqpay.ua/en/doc/api/confirmation/CVV)\n* `ivr_verify` - Waiting for customer to confirm with IVR\n`otp_verify` OTP confirmation is required. OTP is sent to a customer phone number.\n To finish the payment you will require a [otp_verify](https://www.liqpay.ua/en/doc/api/confirmation/OTP)\n* `password_verify` - Waiting for customer to confirm with [Privat24](http://privat24.ua/)\n* `phone_verify` - Waiting for customer to enter a phone number.\n To finish the payment you will require a `phone_verify`\n* `pin_verify` - Waiting for customer to confirm with PIN-code\n* `receiver_verify` - Receiver additional data is required. To finish the payment you will require a [receiver_verify](https://www.liqpay.ua/en/doc/api/confirmation/receiver_verify)\n* `sender_verify` - Sender's additional data is required.\n To finish the payment you will require a [sender_verify](https://www.liqpay.ua/en/doc/api/confirmation/sender_verify)\n* `senderapp_verify` - Waiting for customer to confirm with Privat24\n* `wait_qr` - Waiting for customer to scan QR-code\n* `p24_verify` - Waiting for payment finish in [Privat24](http://privat24.ua/)\n* `mp_verify` - Waiting for payment finish in MasterPass wallet\nOther payment statuses\n* `cash_wait` - Waiting for payment in self-service terminal\n* `hold_wait` - Amount was successfully blocked on the sender's account\n* `invoice_wait` - Invoice is created successfully, waiting for a payment\n* `prepared` - Payment is created, waiting for customer to finish it\n* `processing` - Payment is processing\n* `wait_accept` - Money are withdrawn from client but the store is still not verified. If the store is not activated for 60 days, payment will be automatically cancelled\n* `wait_card` - Recipient didn't set the compensation method\n* `wait_compensation` - Payment is successful, it will be transferred in daily settlement\n* `wait_lc` - Protected payment. Charging is successful, waiting for receipt of goods confirmation\n* `wait_reserve` - Funds are reserved to make a refund according to a refund request\n* `wait_secure` - Payment is verified\n* `try_again` - Payment unsuccessful. Client can try again",
                      "examples": [
                        "success"
                      ]
                    },
                    "wait_reserve_status": {
                      "type": "string",
                      "enum": [
                        "true"
                      ],
                      "description": "An additional payment status that indicates that the current payment is reserved for processing a return at your store. Possible values:\n* `true` - the payment is reserved for refund"
                    },
                    "transaction_id": {
                      "type": "number",
                      "description": "Id transactions in the LiqPay system",
                      "examples": [
                        165629
                      ]
                    },
                    "type": {
                      "type": "string",
                      "description": "Payment type",
                      "examples": [
                        "buy"
                      ]
                    },
                    "version": {
                      "default": 3,
                      "type": "integer",
                      "enum": [
                        3
                      ],
                      "description": "Version API",
                      "examples": [
                        3
                      ]
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}