{
  "openapi": "3.1.0",
  "info": {
    "version": "3",
    "title": "External API"
  },
  "servers": [
    {
      "url": "https://liqpay.ua"
    }
  ],
  "paths": {
    "/api/request": {
      "post": {
        "summary": "Internet acquiring. Payment widget",
        "operationId": "internet_acquiring.widget",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "version",
                  "public_key",
                  "action",
                  "amount",
                  "currency",
                  "description",
                  "order_id"
                ],
                "properties": {
                  "version": {
                    "default": 3,
                    "type": "integer",
                    "enum": [
                      3
                    ],
                    "description": "Version API",
                    "examples": [
                      3
                    ]
                  },
                  "public_key": {
                    "type": "string",
                    "description": "Public key - the store identifier. You can get the key in the [store settings](https://www.liqpay.ua/en/adminbusiness)"
                  },
                  "action": {
                    "type": "string",
                    "enum": [
                      "pay",
                      "hold",
                      "subscribe",
                      "paydonate"
                    ],
                    "description": "Transaction type. Possible values:\n* `pay` - payment\n* `hold` - amount of hold on sender's account\n* `subscribe` - regular payment\n* `paydonate` - donation",
                    "examples": [
                      "pay"
                    ]
                  },
                  "amount": {
                    "type": "number",
                    "description": "Payment amount",
                    "examples": [
                      5.0,
                      7.34,
                      1.0
                    ]
                  },
                  "currency": {
                    "type": "string",
                    "enum": [
                      "USD",
                      "EUR",
                      "UAH"
                    ],
                    "description": "Payment currency",
                    "examples": [
                      "USD"
                    ]
                  },
                  "description": {
                    "type": "string",
                    "description": "Payment description",
                    "examples": [
                      "description text"
                    ]
                  },
                  "order_id": {
                    "type": "string",
                    "description": "Unique purchase ID in your shop",
                    "maxLength": 255,
                    "examples": [
                      "order_id_1"
                    ]
                  },
                  "expired_date": {
                    "type": "string",
                    "format": "date-time-liqpay",
                    "description": "Date and time until which customer is able to pay invoice by `UTC`. Should be sent in the following format `2016-04-24 00:00:00`"
                  },
                  "language": {
                    "default": "uk",
                    "type": "string",
                    "enum": [
                      "uk",
                      "en"
                    ],
                    "description": "Customer's language"
                  },
                  "paytypes": {
                    "type": "string",
                    "enum": [
                      "apay",
                      "gpay",
                      "card",
                      "privat24",
                      "moment_part",
                      "paypart",
                      "cash",
                      "invoice",
                      "qr"
                    ],
                    "description": "Parameter that gets the methods of payments that displayed on checkout. Possible values:\n* `apay` - pay with Apple Pay\n* `gpay` - pay with Google Pay\n* `card` - card payment\n* `privat24` - with privat24 account\n* `moment_part` - installments\n* `paypart` - payment by parts\n* `cash` - cash\n* `invoice` - to email\n* `qr` - qr code scanning. If the parameter is not passed, shop settings will be applied, Checkout tab"
                  },
                  "result_url": {
                    "type": "string",
                    "format": "uri",
                    "description": "URL of your shop where the buyer would be redirected after completion of the purchase",
                    "maxLength": 510
                  },
                  "server_url": {
                    "type": "string",
                    "format": "uri",
                    "description": "URL API in your store for notifications of payment status change (`server` -> `server`). [Learn more](https://www.liqpay.ua/en/doc/api/callback)",
                    "maxLength": 510
                  },
                  "verifycode": {
                    "type": "string",
                    "format": "boolean-yesno",
                    "enum": [
                      "Y"
                    ],
                    "description": "Dynamic verification code is generated and going back to `Callback`. Also generated code will be transferred to verification transactions for displaying in statement by client's card. Works for `action` = `auth`"
                  },
                  "split_rules": {
                    "type": "array",
                    "description": "Payment with split amount for a few receivers. This parameter is a `JSON` array containing split rules. While using `split_rules` parameter, card is being charged and amount is split and credited to a few receivers. If you need to convey your purpose for each amount use the parameter `description`. Acquiring fee is being charged from each shop in the `split_rules`",
                    "items": {
                      "type": "object",
                      "required": [
                        "amount"
                      ],
                      "properties": {
                        "public_key": {
                          "type": "string",
                          "description": "Public key - the store identifier",
                          "examples": [
                            "i000000001",
                            "i000000002"
                          ]
                        },
                        "amount": {
                          "type": "number",
                          "description": "Payment amount",
                          "examples": [
                            1,
                            2
                          ]
                        },
                        "commission_payer": {
                          "default": "sender",
                          "type": "string",
                          "enum": [
                            "sender",
                            "receiver"
                          ],
                          "description": "Commission payer",
                          "examples": [
                            "sender",
                            "receiver"
                          ]
                        },
                        "server_url": {
                          "type": "string",
                          "format": "uri",
                          "description": "URL API in your store for notifications of payment status change (`server` -> `server`)",
                          "maxLength": 510,
                          "examples": [
                            "https://server1/callback",
                            "https://server2/callback"
                          ]
                        },
                        "description": {
                          "type": "string",
                          "description": "Payment description"
                        }
                      }
                    }
                  },
                  "sender": {
                    "type": "object",
                    "description": "Sender parameters",
                    "properties": {
                      "sender_address": {
                        "type": "string",
                        "description": "Sender's address"
                      },
                      "sender_city": {
                        "type": "string",
                        "description": "Sender's city"
                      },
                      "sender_country_code": {
                        "type": "string",
                        "description": "Country code of the sender. Digital [ISO 3166-1 code](https://uk.wikipedia.org/wiki/ISO_3166-1)"
                      },
                      "sender_first_name": {
                        "type": "string",
                        "description": "Sender's first name"
                      },
                      "sender_last_name": {
                        "type": "string",
                        "description": "Sender's last name"
                      },
                      "sender_postal_code": {
                        "type": "string",
                        "description": "Sender's zip code"
                      }
                    }
                  },
                  "regular_payment": {
                    "type": "object",
                    "description": "Regular payment parameters",
                    "required": [
                      "subscribe_date_start"
                    ],
                    "properties": {
                      "subscribe": {
                        "type": "string",
                        "enum": [
                          "1"
                        ],
                        "description": "Regular payment"
                      },
                      "subscribe_date_start": {
                        "type": "string",
                        "format": "date-time-liqpay",
                        "description": "Date of the first payment. Time must be specified in the following format `2015-03-31 00:00:00` by `UTC`. If past date is indicated - subscription will be activated with the date and time of request"
                      },
                      "subscribe_periodicity": {
                        "type": "string",
                        "enum": [
                          "day",
                          "week",
                          "month",
                          "year"
                        ],
                        "description": "Period of payments. Possible values:\n* `day` - daily\n* `week` - weekly\n* `month` - once in a month\n* `year` - once in a year"
                      }
                    }
                  },
                  "one_click_payment": {
                    "type": "object",
                    "description": "Parameters for 1-click payment",
                    "properties": {
                      "customer": {
                        "type": "string",
                        "description": "Unique customer ID in your shop. When you transfer the parameter LiqPay stores the payment details of the customer and his ID - the next payment can be made in 1-click. (When using the parameter for **Masterpass 1-click**, the valid payer's phone number is transmitted in this field)",
                        "maxLength": 100
                      },
                      "recurringbytoken": {
                        "type": "string",
                        "format": "boolean-integer",
                        "enum": [
                          "1"
                        ],
                        "description": "Allows to generate payer `card_token` which you receive in callback request to `server_url`. `card_token` allows to make recurring payments without payer card details via API payment by token - it means 1-click. For getting `card_token` please send in request value: `1`"
                      },
                      "customer_user_id": {
                        "type": "string",
                        "description": "The user ID in the system of the merchant is transferred with each user’s payment (doesn’t have to match `customer` it is used for payment with the help of **Masterpass 1-click** wallet)"
                      }
                    }
                  },
                  "dae": {
                    "type": "string",
                    "description": "Detail Addenda.\n\nPossible `JSON` object:\n```\n{\n  \"airLine\": \"Avia\", // airline abbreviation, max 4 symbols.\n  \"ticketNumber\": \"ACSFD12354SA\", // ticket number, max 15 symbols. \n  \"passengerName\": \"John Doe\", // passenger name, max 29 symbols.\n  \"flightNumber\": \"742\", // flight number, max 5 number.\n  \"originCity\": \"DP\", // departure city/airport code, max 5 symbols.\n  \"destinationCity\": \"NY\", // arrival city/airport code, max 5 symbols.\n  \"departureDate\": \"100514\" // departure date in format YYMMDD, max 6 number.\n}\n```"
                  },
                  "info": {
                    "type": "string",
                    "description": "Information to add details to payment",
                    "examples": [
                      "External information for payments"
                    ]
                  },
                  "product_category": {
                    "type": "string",
                    "description": "Product category in your shop",
                    "maxLength": 25
                  },
                  "product_description": {
                    "type": "string",
                    "description": "Product description in your shop",
                    "maxLength": 500
                  },
                  "product_name": {
                    "type": "string",
                    "description": "Product name in your shop",
                    "maxLength": 100
                  },
                  "product_url": {
                    "type": "string",
                    "format": "uri",
                    "description": "Product page address",
                    "maxLength": 2000
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}