{
  "openapi": "3.1.0",
  "info": {
    "version": "3",
    "title": "External API"
  },
  "servers": [
    {
      "url": "https://liqpay.ua"
    }
  ],
  "paths": {
    "/internet_acquiring/apay/encrypted_token": {
      "post": {
        "summary": "Checkout",
        "operationId": "checkout",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "version",
                  "public_key",
                  "action",
                  "amount",
                  "currency",
                  "description",
                  "order_id",
                  "paytype",
                  "tavv",
                  "card",
                  "card_exp_month",
                  "card_exp_year"
                ],
                "properties": {
                  "version": {
                    "default": 3,
                    "type": "integer",
                    "enum": [
                      3
                    ],
                    "description": "Version API"
                  },
                  "public_key": {
                    "type": "string",
                    "description": "Public key - the store identifier. You can get the key in the [store settings](https://www.liqpay.ua/en/adminbusiness)"
                  },
                  "action": {
                    "type": "string",
                    "enum": [
                      "pay",
                      "hold"
                    ]
                  },
                  "amount": {
                    "type": "number",
                    "description": "Payment amount",
                    "examples": [
                      5.0,
                      7.34
                    ]
                  },
                  "currency": {
                    "type": "string",
                    "enum": [
                      "USD",
                      "EUR",
                      "UAH"
                    ],
                    "description": "Payment currency"
                  },
                  "description": {
                    "type": "string",
                    "description": "Payment description"
                  },
                  "order_id": {
                    "type": "string",
                    "description": "Unique purchase ID in your shop",
                    "maxLength": 255
                  },
                  "phone": {
                    "type": "string",
                    "description": "Payer's phone number. The OTP-password will be sent to this telephone number to confirm your payment, and the linked payer's LiqPay cabinet. The telephone number should be indicated in the international format (Ukraine `+380`). For example: +380950000001 (with +) or 380950000001 (without +)"
                  },
                  "paytype": {
                    "type": "string",
                    "enum": [
                      "apay_tavv"
                    ]
                  },
                  "tavv": {
                    "type": "string",
                    "description": "A cryptogram is a dynamic one-time code for each transaction that accompanies a token. It is obtained when decrypting payment data from the Apple device"
                  },
                  "language": {
                    "type": "string",
                    "enum": [
                      "uk",
                      "en"
                    ],
                    "description": "Customer's language"
                  },
                  "result_url": {
                    "type": "string",
                    "format": "uri",
                    "description": "URL of your shop where the buyer would be redirected after completion of the purchase",
                    "maxLength": 510
                  },
                  "server_url": {
                    "type": "string",
                    "format": "uri",
                    "description": "URL API in your store for notifications of payment status change (`server` -> `server`). [Learn more](https://www.liqpay.ua/en/doc/api/callback)",
                    "maxLength": 510
                  },
                  "card": {
                    "type": "string",
                    "description": "Card token obtained by decrypting data from an Apple device"
                  },
                  "card_exp_month": {
                    "type": "string",
                    "description": "Expiry month of the payer's token",
                    "examples": [
                      "08"
                    ]
                  },
                  "card_exp_year": {
                    "type": "string",
                    "description": "Expiry year of the payer's token",
                    "examples": [
                      "19"
                    ]
                  },
                  "sender": {
                    "type": "object",
                    "description": "Sender parameters",
                    "properties": {
                      "sender_address": {
                        "type": "string",
                        "description": "Sender's address"
                      },
                      "sender_city": {
                        "type": "string",
                        "description": "Sender's city"
                      },
                      "sender_country_code": {
                        "type": "string",
                        "description": "Country code of the sender. Digital [ISO 3166-1 code](https://en.wikipedia.org/wiki/ISO_3166-1)"
                      },
                      "sender_first_name": {
                        "type": "string",
                        "description": "Sender's first name"
                      },
                      "sender_last_name": {
                        "type": "string",
                        "description": "Sender's last name"
                      },
                      "sender_postal_code": {
                        "type": "string",
                        "description": "Sender's zip code"
                      }
                    }
                  },
                  "split_rules": {
                    "type": "array",
                    "description": "Payment with split amount for a few receivers. This parameter is a `JSON` array containing split rules. While using `split_rules` parameter, card is being charged and amount is split and credited to a few receivers. If you need to convey your purpose for each amount use the parameter `description`. Acquiring fee is being charged from each shop in the `split_rules`",
                    "items": {
                      "type": "object",
                      "required": [
                        "amount"
                      ],
                      "properties": {
                        "public_key": {
                          "type": "string",
                          "description": "Public key - the store identifier",
                          "examples": [
                            "i000000001",
                            "i000000002"
                          ]
                        },
                        "amount": {
                          "type": "number",
                          "description": "Payment amount",
                          "examples": [
                            1,
                            2
                          ]
                        },
                        "commission_payer": {
                          "default": "sender",
                          "type": "string",
                          "enum": [
                            "sender",
                            "receiver"
                          ],
                          "description": "Commission payer",
                          "examples": [
                            "sender",
                            "receiver"
                          ]
                        },
                        "server_url": {
                          "type": "string",
                          "format": "uri",
                          "description": "URL API in your store for notifications of payment status change (`server` -> `server`)",
                          "maxLength": 510,
                          "examples": [
                            "https://server1/callback",
                            "https://server2/callback"
                          ]
                        },
                        "description": {
                          "type": "string",
                          "description": "Payment description"
                        }
                      }
                    }
                  },
                  "dae": {
                    "type": "string",
                    "description": "Detail Addenda.\n\nPossible `JSON` object:\n```\n{\n  \"airLine\": \"Avia\", // airline abbreviation, max 4 symbols.\n  \"ticketNumber\": \"ACSFD12354SA\", // ticket number, max 15 symbols. \n  \"passengerName\": \"John Doe\", // passenger name, max 29 symbols.\n  \"flightNumber\": \"742\", // flight number, max 5 number.\n  \"originCity\": \"DP\", // departure city/airport code, max 5 symbols.\n  \"destinationCity\": \"NY\", // arrival city/airport code, max 5 symbols.\n  \"departureDate\": \"100514\" // departure date in format YYMMDD, max 6 number.\n}\n```"
                  },
                  "info": {
                    "type": "string",
                    "description": "Information to add details to payment",
                    "examples": [
                      "External information for payments"
                    ]
                  },
                  "product_category": {
                    "type": "string",
                    "description": "Product category in your shop",
                    "maxLength": 25
                  },
                  "product_description": {
                    "type": "string",
                    "description": "Product description in your shop",
                    "maxLength": 500
                  },
                  "product_name": {
                    "type": "string",
                    "description": "Product name in your shop",
                    "maxLength": 100
                  },
                  "product_url": {
                    "type": "string",
                    "format": "uri",
                    "description": "Product page address",
                    "maxLength": 2000
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        }
      }
    }
  }
}