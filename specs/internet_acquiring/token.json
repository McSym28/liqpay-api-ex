{
  "openapi": "3.1.0",
  "info": {
    "version": "3",
    "title": "External API"
  },
  "servers": [
    {
      "url": "https://liqpay.ua"
    }
  ],
  "paths": {
    "/api/request?path=internet_acquiring.token": {
      "post": {
        "summary": "Internet acquiring. Token payment",
        "operationId": "internet_acquiring/token",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "version": {
                    "type": "integer",
                    "enum": [
                      3
                    ],
                    "default": 3,
                    "description": "Version API",
                    "example": 3,
                    "examples": [
                      3
                    ]
                  },
                  "public_key": {
                    "type": "string",
                    "description": "Public key - the store identifier. You can get the key in the [store settings](https://www.liqpay.ua/en/adminbusiness)"
                  },
                  "action": {
                    "type": "string",
                    "enum": [
                      "paytoken"
                    ],
                    "default": "paytoken",
                    "example": "paytoken",
                    "examples": [
                      "paytoken"
                    ]
                  },
                  "amount": {
                    "type": "number",
                    "description": "Payment amount",
                    "example": 5.0,
                    "examples": [
                      5.0,
                      7.34,
                      1.0
                    ]
                  },
                  "card_token": {
                    "type": "string",
                    "description": "Sender's [card token](https://www.liqpay.ua/en/methods/token_pay). You don't need to transmit card data, when using a token",
                    "example": "B5BВB0D00B88B00ED00A00D0D",
                    "examples": [
                      "B5BВB0D00B88B00ED00A00D0D"
                    ]
                  },
                  "currency": {
                    "type": "string",
                    "enum": [
                      "USD",
                      "EUR",
                      "UAH"
                    ],
                    "description": "Payment currency",
                    "example": "USD",
                    "examples": [
                      "USD"
                    ]
                  },
                  "description": {
                    "type": "string",
                    "description": "Payment description",
                    "example": "description text",
                    "examples": [
                      "description text"
                    ]
                  },
                  "ip": {
                    "type": "string",
                    "description": "Client IP"
                  },
                  "order_id": {
                    "type": "string",
                    "maxLength": 255,
                    "description": "Unique purchase ID in your shop",
                    "example": "order_id_1",
                    "examples": [
                      "order_id_1"
                    ]
                  },
                  "phone": {
                    "type": "string",
                    "description": "Payer's phone number. The OTP-password will be sent to this telephone number to confirm your payment, and the linked payer's LiqPay cabinet. The telephone number should be indicated in the international format (Ukraine `+380`)",
                    "example": "+380950000001",
                    "examples": [
                      "+380950000001",
                      "380950000001"
                    ]
                  },
                  "language": {
                    "type": "string",
                    "enum": [
                      "uk",
                      "en"
                    ],
                    "default": "uk",
                    "description": "Customer's language"
                  },
                  "prepare": {
                    "type": "string",
                    "format": "boolean-integer",
                    "enum": [
                      "1"
                    ],
                    "default": "1",
                    "description": "The preliminary preparation of the payment. This mode allows you to determine whether all data is complete, whether 3DS is required to check the card, whether the limit is exceeded. The funds are not debited from the payer's card. To activate the mode, you need to transfer the value of `1`"
                  },
                  "server_url": {
                    "type": "string",
                    "format": "uri",
                    "maxLength": 510,
                    "description": "URL API in your store for notifications of payment status change (`server` -> `server`). [Learn more](https://www.liqpay.ua/en/doc/api/callback)"
                  },
                  "split_rules": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "public_key": {
                          "type": "string",
                          "description": "Public key - the store identifier",
                          "example": "i000000001",
                          "examples": [
                            "i000000001",
                            "i000000002"
                          ]
                        },
                        "amount": {
                          "type": "number",
                          "description": "Payment amount",
                          "example": 1,
                          "examples": [
                            1,
                            2
                          ]
                        },
                        "commission_payer": {
                          "type": "string",
                          "enum": [
                            "sender",
                            "receiver"
                          ],
                          "default": "sender",
                          "description": "Commission payer",
                          "example": "sender",
                          "examples": [
                            "sender",
                            "receiver"
                          ]
                        },
                        "server_url": {
                          "type": "string",
                          "format": "uri",
                          "maxLength": 510,
                          "description": "URL API in your store for notifications of payment status change (`server` -> `server`)",
                          "example": "https://server1/callback",
                          "examples": [
                            "https://server1/callback",
                            "https://server2/callback"
                          ]
                        },
                        "description": {
                          "type": "string",
                          "description": "Payment description"
                        }
                      },
                      "required": [
                        "amount"
                      ]
                    },
                    "description": "Payment with split amount for a few receivers. This parameter is a `JSON` array containing split rules. While using `split_rules` parameter, card is being charged and amount is split and credited to a few receivers. If you need to convey your purpose for each amount use the parameter `description`. Acquiring fee is being charged from each shop in the `split_rules`"
                  },
                  "sender": {
                    "type": "object",
                    "properties": {
                      "sender_address": {
                        "type": "string",
                        "description": "Sender's address"
                      },
                      "sender_city": {
                        "type": "string",
                        "description": "Sender's city"
                      },
                      "sender_country_code": {
                        "type": "string",
                        "description": "Country code of the sender. Digital [ISO 3166-1 code](https://en.wikipedia.org/wiki/ISO_3166-1)"
                      },
                      "sender_first_name": {
                        "type": "string",
                        "description": "Sender's first name"
                      },
                      "sender_last_name": {
                        "type": "string",
                        "description": "Sender's last name"
                      },
                      "sender_postal_code": {
                        "type": "string",
                        "description": "Sender's zip code"
                      }
                    },
                    "description": "Sender parameters"
                  },
                  "customer": {
                    "type": "string",
                    "maxLength": 100,
                    "description": "Unique customer ID in your shop"
                  },
                  "dae": {
                    "type": "string",
                    "description": "Detail Addenda.\n\nPossible `JSON` object:\n```\n{\n  \"airLine\": \"Avia\", // airline abbreviation, max 4 symbols.\n  \"ticketNumber\": \"ACSFD12354SA\", // ticket number, max 15 symbols. \n  \"passengerName\": \"John Doe\", // passenger name, max 29 symbols.\n  \"flightNumber\": \"742\", // flight number, max 5 number.\n  \"originCity\": \"DP\", // departure city/airport code, max 5 symbols.\n  \"destinationCity\": \"NY\", // arrival city/airport code, max 5 symbols.\n  \"departureDate\": \"100514\" // departure date in format YYMMDD, max 6 number.\n}\n```"
                  },
                  "info": {
                    "type": "string",
                    "description": "Information to add details to payment",
                    "example": "External information for payments",
                    "examples": [
                      "External information for payments"
                    ]
                  },
                  "product_category": {
                    "type": "string",
                    "maxLength": 25,
                    "description": "Product category in your shop"
                  },
                  "product_description": {
                    "type": "string",
                    "maxLength": 500,
                    "description": "Product description in your shop"
                  },
                  "product_name": {
                    "type": "string",
                    "maxLength": 100,
                    "description": "Product name in your shop"
                  },
                  "product_url": {
                    "type": "string",
                    "format": "uri",
                    "maxLength": 2000,
                    "description": "Product page address"
                  }
                },
                "required": [
                  "version",
                  "public_key",
                  "action",
                  "amount",
                  "card_token",
                  "currency",
                  "description",
                  "ip",
                  "order_id"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "acq_id": {
                      "type": "number",
                      "description": "Acquirer ID",
                      "example": 414963,
                      "examples": [
                        414963
                      ]
                    },
                    "action": {
                      "type": "string",
                      "enum": [
                        "pay",
                        "hold",
                        "paysplit",
                        "subscribe",
                        "paydonate",
                        "auth",
                        "regular"
                      ],
                      "description": "Transaction type. Possible values:\n* `pay` - payment\n* `hold` - amount of hold on sender's account\n* `paysplit` - splitting payments\n* `subscribe` - creation of a regular payment\n* `paydonate` - donation\n* `auth` - card preauth\n* `regular` - regular payment",
                      "example": "pay",
                      "examples": [
                        "pay"
                      ]
                    },
                    "agent_commission": {
                      "type": "number",
                      "description": "Agent comission in payment currency",
                      "example": 0.0,
                      "examples": [
                        0.0
                      ]
                    },
                    "amount": {
                      "type": "number",
                      "description": "Payment amount",
                      "example": 0.02,
                      "examples": [
                        0.02
                      ]
                    },
                    "amount_bonus": {
                      "type": "number",
                      "description": "Payer bonus amount in payment currency debit",
                      "example": 0.0,
                      "examples": [
                        0.0
                      ]
                    },
                    "amount_credit": {
                      "type": "number",
                      "description": "Payment amount for credit in currency of `currency_credit`",
                      "example": 0.02,
                      "examples": [
                        0.02
                      ]
                    },
                    "amount_debit": {
                      "type": "number",
                      "description": "Payment amount for debit in currency of `currency_debit`",
                      "example": 0.02,
                      "examples": [
                        0.02
                      ]
                    },
                    "authcode_credit": {
                      "type": "string",
                      "description": "Authorization code for transaction of credit",
                      "example": "538974",
                      "examples": [
                        "538974"
                      ]
                    },
                    "authcode_debit": {
                      "type": "string",
                      "description": "Authorization code for transaction of debit",
                      "example": "366297",
                      "examples": [
                        "366297"
                      ]
                    },
                    "bonus_procent": {
                      "type": "number",
                      "description": "Discount rate in percent",
                      "example": 7.0,
                      "examples": [
                        7.0
                      ]
                    },
                    "bonus_type": {
                      "type": "string",
                      "enum": [
                        "bonusplus",
                        "discount_club",
                        "personal",
                        "promo"
                      ],
                      "description": "Bonus type, ",
                      "example": "bonusplus",
                      "examples": [
                        "bonusplus"
                      ]
                    },
                    "commission_credit": {
                      "type": "number",
                      "description": "Commission from the receiver in `currency_credit`",
                      "example": 0.0,
                      "examples": [
                        0.0
                      ]
                    },
                    "commission_debit": {
                      "type": "number",
                      "description": "Commission from the sender in `currency_debit`",
                      "example": 0.0,
                      "examples": [
                        0.0
                      ]
                    },
                    "create_date": {
                      "type": "integer",
                      "format": "timestamp-ms",
                      "description": "Date of payment creation",
                      "example": 1501684842777,
                      "examples": [
                        1501684842777
                      ]
                    },
                    "currency": {
                      "type": "string",
                      "description": "Payment currency",
                      "example": "UAH",
                      "examples": [
                        "UAH"
                      ]
                    },
                    "currency_credit": {
                      "type": "string",
                      "description": "Transaction currency of credit",
                      "example": "UAH",
                      "examples": [
                        "UAH"
                      ]
                    },
                    "currency_debit": {
                      "type": "string",
                      "description": "Transaction currency of debit",
                      "example": "UAH",
                      "examples": [
                        "UAH"
                      ]
                    },
                    "description": {
                      "type": "string",
                      "description": "Payment description",
                      "example": "description text",
                      "examples": [
                        "description text"
                      ]
                    },
                    "end_date": {
                      "type": "integer",
                      "format": "timestamp-ms",
                      "description": "Date of payment edition/end",
                      "example": 1501684842777,
                      "examples": [
                        1501684842777
                      ]
                    },
                    "is_3ds": {
                      "type": "boolean",
                      "description": "Possible values:\n* `true` - transaction passed with 3DS\n* `false` - transaction passed without 3DS"
                    },
                    "liqpay_order_id": {
                      "type": "string",
                      "description": "Payment order_id in LiqPay system",
                      "example": "NYMK3AE61501685438251925",
                      "examples": [
                        "NYMK3AE61501685438251925"
                      ]
                    },
                    "mpi_eci": {
                      "type": "integer",
                      "enum": [
                        5,
                        6,
                        7
                      ],
                      "description": "Possible values:\n* `5` - the transaction passed with 3DS (issuer and acquirer support 3d Secure technology)\n* `6` - the issuer of the payer card does not support 3d Secure technology\n* `7` - the operation passed without 3d Secure",
                      "example": 7,
                      "examples": [
                        7
                      ]
                    },
                    "order_id": {
                      "type": "string",
                      "description": "Order_id payment",
                      "example": "98R1U1OV1485849059893399",
                      "examples": [
                        "98R1U1OV1485849059893399"
                      ]
                    },
                    "payment_id": {
                      "type": "number",
                      "description": "Payment id in LiqPay system",
                      "example": 165167,
                      "examples": [
                        165167
                      ]
                    },
                    "paytype": {
                      "type": "string",
                      "enum": [
                        "card",
                        "privat24",
                        "moment_part",
                        "cash",
                        "invoice",
                        "qr"
                      ],
                      "description": "Methods of payment. Possible values:\n* `card` - card payment\n* `privat24` - with privat24 account\n* `moment_part` - installments\n* `cash` - cash\n* `invoice` - to email\n* `qr` - qr code scanning",
                      "example": "card",
                      "examples": [
                        "card"
                      ]
                    },
                    "public_key": {
                      "type": "string",
                      "description": "Shop public key",
                      "example": "i000000000",
                      "examples": [
                        "i000000000"
                      ]
                    },
                    "receiver_commission": {
                      "type": "number",
                      "description": "Receiver comission in payment currency",
                      "example": 0.0,
                      "examples": [
                        0.0
                      ]
                    },
                    "rrn_credit": {
                      "type": "string",
                      "description": "Unique transaction ID in authorization and settlement system of issuer bank `Retrieval Reference number`",
                      "example": "000663740472",
                      "examples": [
                        "000663740472"
                      ]
                    },
                    "rrn_debit": {
                      "type": "string",
                      "description": "Unique transaction ID in authorization and settlement system of issuer bank `Retrieval Reference number`",
                      "example": "000663740464",
                      "examples": [
                        "000663740464"
                      ]
                    },
                    "sender_bonus": {
                      "type": "number",
                      "description": "Sender's bonus in the payment currency",
                      "example": 0.0,
                      "examples": [
                        0.0
                      ]
                    },
                    "sender_card_bank": {
                      "type": "string",
                      "description": "Sender's card bank",
                      "example": "pb",
                      "examples": [
                        "pb"
                      ]
                    },
                    "sender_card_country": {
                      "type": "string",
                      "description": "Sender's card country. Digital [ISO 3166-1 code](https://en.wikipedia.org/wiki/ISO_3166-1)",
                      "example": 804,
                      "examples": [
                        804
                      ]
                    },
                    "sender_card_mask2": {
                      "type": "string",
                      "description": "Sender's card",
                      "example": "414961*99",
                      "examples": [
                        "414961*99"
                      ]
                    },
                    "sender_card_type": {
                      "type": "string",
                      "description": "Sender's card type MC/Visa",
                      "example": "visa",
                      "examples": [
                        "visa"
                      ]
                    },
                    "sender_commission": {
                      "type": "number",
                      "description": "Commission from the sender in the payment currency",
                      "example": 0.0,
                      "examples": [
                        0.0
                      ]
                    },
                    "sender_phone": {
                      "type": "string",
                      "description": "Sender's phone number",
                      "example": "380950000001",
                      "examples": [
                        "380950000001"
                      ]
                    },
                    "status": {
                      "type": "string",
                      "enum": [
                        "error",
                        "failure",
                        "reversed",
                        "success",
                        "wait_accept",
                        "wait_secure"
                      ],
                      "description": "Payment status.\nAvailable values:\nFinal payment statuses\n* `error` - Failed payment. Data is incorrect\n* `failure` - Failed payment\n* `reversed` - Payment refunded\n* `success` - Successful payment\nOther payment statuses\n* `wait_accept` - Money are withdrawn from client but the store is still not verified. If the store is not activated for 60 days, payment will be automatically cancelled\n* `wait_secure` - Payment is verified",
                      "example": "success",
                      "examples": [
                        "success"
                      ]
                    },
                    "transaction_id": {
                      "type": "number",
                      "description": "Id transactions in the LiqPay system",
                      "example": 165167,
                      "examples": [
                        165167
                      ]
                    },
                    "type": {
                      "type": "string",
                      "description": "Payment type",
                      "example": "buy",
                      "examples": [
                        "buy"
                      ]
                    },
                    "version": {
                      "type": "integer",
                      "enum": [
                        3
                      ],
                      "default": 3,
                      "description": "Version API",
                      "example": 3,
                      "examples": [
                        3
                      ]
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}