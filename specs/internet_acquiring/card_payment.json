{
  "openapi": "3.1.0",
  "info": {
    "version": "3",
    "title": "External API"
  },
  "servers": [
    {
      "url": "https://liqpay.ua"
    }
  ],
  "paths": {
    "/internet_acquiring/card_payment": {
      "post": {
        "summary": "Checkout",
        "operationId": "checkout",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "version",
                  "public_key",
                  "action",
                  "amount",
                  "card",
                  "currency",
                  "description",
                  "ip",
                  "order_id",
                  "phone"
                ],
                "properties": {
                  "version": {
                    "default": 3,
                    "type": "integer",
                    "enum": [
                      3
                    ],
                    "description": "Version API",
                    "examples": [
                      3
                    ]
                  },
                  "public_key": {
                    "type": "string",
                    "description": "Public key - the store identifier. You can get the key in the [store settings](https://www.liqpay.ua/en/adminbusiness)"
                  },
                  "action": {
                    "type": "string",
                    "enum": [
                      "pay"
                    ],
                    "examples": [
                      "pay"
                    ]
                  },
                  "amount": {
                    "type": "number",
                    "description": "Payment amount",
                    "examples": [
                      5.0,
                      7.34,
                      1.0
                    ]
                  },
                  "card": {
                    "type": "string",
                    "description": "Card number of the payer",
                    "examples": [
                      "4731195301524634"
                    ]
                  },
                  "card_cvv": {
                    "type": "string",
                    "description": "CVV/CVV2. The parameter is required if the card number is being passed",
                    "examples": [
                      "111"
                    ]
                  },
                  "card_exp_month": {
                    "type": "string",
                    "description": "Expiry month of the payer's card. This parameter is required if the card number or an unencrypted token is being passed",
                    "examples": [
                      "08",
                      "03"
                    ]
                  },
                  "card_exp_year": {
                    "type": "string",
                    "description": "Expiry year of the payer's card. This parameter is required if the card number or an unencrypted token is being passed",
                    "examples": [
                      "19",
                      "22"
                    ]
                  },
                  "currency": {
                    "type": "string",
                    "enum": [
                      "USD",
                      "EUR",
                      "UAH"
                    ],
                    "description": "Payment currency",
                    "examples": [
                      "USD"
                    ]
                  },
                  "description": {
                    "type": "string",
                    "description": "Payment description",
                    "examples": [
                      "description text"
                    ]
                  },
                  "ip": {
                    "type": "string",
                    "description": "Client IP, required if Trusted IP address is specified"
                  },
                  "order_id": {
                    "type": "string",
                    "description": "Unique purchase ID in your shop",
                    "maxLength": 255,
                    "examples": [
                      "order_id_1"
                    ]
                  },
                  "phone": {
                    "type": "string",
                    "description": "Payer's phone number. The OTP-password will be sent to this telephone number to confirm your payment, and the linked payer's LiqPay cabinet. The telephone number should be indicated in the international format (Ukraine `+380`)",
                    "examples": [
                      "+380950000001",
                      "380950000001"
                    ]
                  },
                  "paytype": {
                    "type": "string",
                    "enum": [
                      "apay",
                      "gpay",
                      "apay_tavv",
                      "gpay_tavv",
                      "tavv"
                    ],
                    "description": "Payment type. Possible values:\n* `apay` - payment using an encrypted Apple token\n* `gpay` - payment using an encrypted Google token\n* `apay_tavv` - payment using an unencrypted Apple token\n* `gpay_tavv` - payment using an unencrypted Google token\n* `tavv` - payment using an unencrypted token of international payment systems (MasterCard, Visa). This parameter is required for payments using encrypted and unencrypted tokens"
                  },
                  "tavv": {
                    "type": "string",
                    "description": "A cryptogram is a dynamic one-time code for every transaction accompanying a token. This parameter is required when making a payment using unencrypted tokens by Apple, Google, international payment systems (MasterCard, Visa)"
                  },
                  "tid": {
                    "type": "string",
                    "description": "Previous transaction ID. For recurring payments using tokens of Visa international payment system"
                  },
                  "language": {
                    "default": "uk",
                    "type": "string",
                    "enum": [
                      "uk",
                      "en"
                    ],
                    "description": "Customer's language"
                  },
                  "prepare": {
                    "type": "string",
                    "enum": [
                      "1"
                    ],
                    "description": "The preliminary preparation of the payment. This mode allows to check if all data are filled in, if 3DS authentication is required, if transaction is within limit. Payer card will not be charged. To enable this mode you will need to transmit value `1`, and to work with DCC (dynamic currency conversion) - the value of `tariffs`"
                  },
                  "recurringbytoken": {
                    "type": "string",
                    "description": "This parameter allows to generate payer `card_token` which you receive in callback request to `server_url`. `card_token` allows to make recurring payments without payer card requisites using API [paytoken](https://www.liqpay.ua/en/doc/api/internet_acquiring/token). To receive `card_token` please send in request value `1`"
                  },
                  "result_url": {
                    "type": "string",
                    "format": "uri",
                    "description": "URL of your shop where the buyer would be redirected after completion of the purchase",
                    "maxLength": 510
                  },
                  "recurring": {
                    "type": "boolean",
                    "enum": [
                      true,
                      false
                    ],
                    "description": "Token recurring payment flag. Used for payments with tokens of international payment systems (MasterCard, Visa). Possible values:\n* `true` - the operation is performed without the participation of the client\n* `false` - the operation is performed by the client"
                  },
                  "server_url": {
                    "type": "string",
                    "format": "uri",
                    "description": "URL API in your store for notifications of payment status change (`server` -> `server`). [Learn more](https://www.liqpay.ua/en/doc/api/callback)",
                    "maxLength": 510
                  },
                  "rro_info": {
                    "type": "object",
                    "description": "Data for fiscalization",
                    "properties": {
                      "items": {
                        "type": "array",
                        "description": "Data about products for which payment is performed",
                        "items": {
                          "type": "object",
                          "required": [
                            "amount",
                            "cost",
                            "id",
                            "price"
                          ],
                          "properties": {
                            "amount": {
                              "type": "number",
                              "description": "Quantity/volume",
                              "examples": [
                                2
                              ]
                            },
                            "cost": {
                              "type": "number",
                              "description": "The cost of all units of the specified product in the receipt (number of units * unit cost)",
                              "examples": [
                                404
                              ]
                            },
                            "id": {
                              "type": "integer",
                              "description": "Item ID. You can get it in the Liqpay account - SCR - Kasa - Goods",
                              "examples": [
                                123456
                              ]
                            },
                            "price": {
                              "type": "number",
                              "description": "Unit cost of goods",
                              "examples": [
                                202
                              ]
                            }
                          }
                        }
                      },
                      "delivery_emails": {
                        "type": "array",
                        "description": "List of e-mails to which receipts should be sent after fiscalization",
                        "items": {
                          "type": "string",
                          "format": "email",
                          "examples": [
                            "email1@email.com",
                            "email2@email.com"
                          ]
                        }
                      }
                    }
                  },
                  "split_rules": {
                    "type": "array",
                    "description": "Payment with split amount for a few receivers. This parameter is a `JSON` array containing split rules. While using `split_rules` parameter, card is being charged and amount is split and credited to a few receivers. If you need to convey your purpose for each amount use the parameter `description`. Acquiring fee is being charged from each shop in the `split_rules`",
                    "items": {
                      "type": "object",
                      "required": [
                        "amount"
                      ],
                      "properties": {
                        "public_key": {
                          "type": "string",
                          "description": "Public key - the store identifier",
                          "examples": [
                            "i000000001",
                            "i000000002"
                          ]
                        },
                        "amount": {
                          "type": "number",
                          "description": "Payment amount",
                          "examples": [
                            1,
                            2
                          ]
                        },
                        "commission_payer": {
                          "default": "sender",
                          "type": "string",
                          "enum": [
                            "sender",
                            "receiver"
                          ],
                          "description": "Commission payer",
                          "examples": [
                            "sender",
                            "receiver"
                          ]
                        },
                        "server_url": {
                          "type": "string",
                          "format": "uri",
                          "description": "URL API in your store for notifications of payment status change (`server` -> `server`)",
                          "maxLength": 510,
                          "examples": [
                            "https://server1/callback",
                            "https://server2/callback"
                          ]
                        },
                        "description": {
                          "type": "string",
                          "description": "Payment description"
                        }
                      }
                    }
                  },
                  "sender": {
                    "type": "object",
                    "description": "Sender parameters",
                    "required": [
                      "phone",
                      "sender_country_code",
                      "sender_city",
                      "sender_address",
                      "sender_postal_code"
                    ],
                    "properties": {
                      "sender_first_name": {
                        "type": "string",
                        "description": "Sender's first name"
                      },
                      "sender_last_name": {
                        "type": "string",
                        "description": "Sender's last name"
                      },
                      "phone": {
                        "type": "string",
                        "description": "Payer's phone number"
                      },
                      "sender_email": {
                        "type": "string",
                        "description": "E-mail address"
                      },
                      "sender_country_code": {
                        "type": "string",
                        "description": "Country code of the sender. Digital [ISO 3166-1 code](https://en.wikipedia.org/wiki/ISO_3166-1)"
                      },
                      "sender_city": {
                        "type": "string",
                        "description": "Sender's city"
                      },
                      "sender_address": {
                        "type": "string",
                        "description": "Sender's address"
                      },
                      "sender_state": {
                        "type": "string",
                        "description": "Payment address. Sender's region code. Digital [ISO 3166-2 code.](https://en.wikipedia.org/wiki/ISO_3166-2)For Ukraine [ISO 3166-2:UA](https://en.wikipedia.org/wiki/ISO_3166-2:UA)"
                      },
                      "sender_shipping_state": {
                        "type": "string",
                        "description": "Shipping address. Sender's region code. Digital [ISO 3166-2 code.](https://en.wikipedia.org/wiki/ISO_3166-2)For Ukraine [ISO 3166-2:UA](https://en.wikipedia.org/wiki/ISO_3166-2:UA)"
                      },
                      "sender_postal_code": {
                        "type": "string",
                        "description": "Sender's zip code"
                      }
                    }
                  },
                  "regular_payment": {
                    "type": "object",
                    "description": "Regular payment parameters",
                    "required": [
                      "subscribe_date_start"
                    ],
                    "properties": {
                      "subscribe": {
                        "type": "string",
                        "enum": [
                          "1"
                        ],
                        "description": "Regular payment"
                      },
                      "subscribe_date_start": {
                        "type": "string",
                        "format": "date-time",
                        "description": "Date of the first payment. Time must be specified in the following format `2015-03-31 00:00:00` by `UTC`. If past date is indicated - subscription will be activated with the date and time of request"
                      },
                      "subscribe_periodicity": {
                        "type": "string",
                        "enum": [
                          "day",
                          "week",
                          "month",
                          "year"
                        ],
                        "description": "Period of payments. Possible values:\n* `day` - daily\n* `week` - weekly\n* `month` - once in a month\n* `year` - once in a year"
                      }
                    }
                  },
                  "customer": {
                    "type": "string",
                    "description": "Unique customer ID in your shop",
                    "maxLength": 100
                  },
                  "dae": {
                    "type": "string",
                    "description": "Detail Addenda.\n\nPossible `JSON` object:\n```\n{\n  \"airLine\": \"Avia\", // airline abbreviation, max 4 symbols.\n  \"ticketNumber\": \"ACSFD12354SA\", // ticket number, max 15 symbols. \n  \"passengerName\": \"John Doe\", // passenger name, max 29 symbols.\n  \"flightNumber\": \"742\", // flight number, max 5 number.\n  \"originCity\": \"DP\", // departure city/airport code, max 5 symbols.\n  \"destinationCity\": \"NY\", // arrival city/airport code, max 5 symbols.\n  \"departureDate\": \"100514\" // departure date in format YYMMDD, max 6 number.\n}\n```"
                  },
                  "info": {
                    "type": "string",
                    "description": "Information to add details to payment",
                    "examples": [
                      "External information for payments"
                    ]
                  },
                  "product_category": {
                    "type": "string",
                    "description": "Product category in your shop",
                    "maxLength": 25
                  },
                  "product_description": {
                    "type": "string",
                    "description": "Product description in your shop",
                    "maxLength": 500
                  },
                  "product_name": {
                    "type": "string",
                    "description": "Product name in your shop",
                    "maxLength": 100
                  },
                  "product_url": {
                    "type": "string",
                    "format": "uri",
                    "description": "Product page address",
                    "maxLength": 2000
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "acq_id": {
                      "type": "number",
                      "description": "Acquirer ID",
                      "examples": [
                        414963
                      ]
                    },
                    "action": {
                      "type": "string",
                      "enum": [
                        "pay",
                        "hold",
                        "paysplit",
                        "subscribe",
                        "paydonate",
                        "auth",
                        "regular"
                      ],
                      "description": "Transaction type. Possible values:\n* `pay` - payment\n* `hold` - amount of hold on sender's account\n* `paysplit` - splitting payments\n* `subscribe` - creation of a regular payment\n* `paydonate` - donation\n* `auth` - card preauth\n* `regular` - regular payment",
                      "examples": [
                        "pay"
                      ]
                    },
                    "agent_commission": {
                      "type": "number",
                      "description": "Agent comission in payment currency",
                      "examples": [
                        0.0
                      ]
                    },
                    "amount": {
                      "type": "number",
                      "description": "Payment amount",
                      "examples": [
                        100.0
                      ]
                    },
                    "amount_bonus": {
                      "type": "number",
                      "description": "Payer bonus amount in payment currency debit",
                      "examples": [
                        0.0
                      ]
                    },
                    "amount_credit": {
                      "type": "number",
                      "description": "Payment amount for credit in currency of `currency_credit`",
                      "examples": [
                        100.0
                      ]
                    },
                    "amount_debit": {
                      "type": "number",
                      "description": "Payment amount for debit in currency of `currency_debit`",
                      "examples": [
                        100.0
                      ]
                    },
                    "authcode_credit": {
                      "type": "string",
                      "description": "Authorization code for transaction of credit",
                      "examples": [
                        "329007"
                      ]
                    },
                    "authcode_debit": {
                      "type": "string",
                      "description": "Authorization code for transaction of debit",
                      "examples": [
                        "388000"
                      ]
                    },
                    "bonus_procent": {
                      "type": "number",
                      "description": "Discount rate in percent",
                      "examples": [
                        0.0
                      ]
                    },
                    "bonus_type": {
                      "type": "string",
                      "enum": [
                        "bonusplus",
                        "discount_club",
                        "personal",
                        "promo"
                      ],
                      "description": "Bonus type, ",
                      "examples": [
                        "bonusplus"
                      ]
                    },
                    "card_token": {
                      "type": "string",
                      "description": "Sender's card token",
                      "examples": [
                        "CDRES215658546306B200061FCC53A86B"
                      ]
                    },
                    "commission_credit": {
                      "type": "number",
                      "description": "Commission from the receiver in `currency_credit`",
                      "examples": [
                        0.0
                      ]
                    },
                    "commission_debit": {
                      "type": "number",
                      "description": "Commission from the sender in `currency_debit`",
                      "examples": [
                        0.0
                      ]
                    },
                    "create_date": {
                      "type": "string",
                      "description": "Date of payment creation",
                      "examples": [
                        1501685446633
                      ]
                    },
                    "currency": {
                      "type": "string",
                      "description": "Payment currency",
                      "examples": [
                        "UAH"
                      ]
                    },
                    "currency_credit": {
                      "type": "string",
                      "description": "Transaction currency of credit",
                      "examples": [
                        "UAH"
                      ]
                    },
                    "currency_debit": {
                      "type": "string",
                      "description": "Transaction currency of debit",
                      "examples": [
                        "UAH"
                      ]
                    },
                    "description": {
                      "type": "string",
                      "description": "Payment description",
                      "examples": [
                        "description"
                      ]
                    },
                    "end_date": {
                      "type": "string",
                      "description": "Date of payment edition/end",
                      "examples": [
                        1501685446633
                      ]
                    },
                    "ip": {
                      "type": "string",
                      "description": "Sender's IP address",
                      "examples": [
                        "8.8.8.8"
                      ]
                    },
                    "is_3ds": {
                      "type": "boolean",
                      "enum": [
                        true,
                        false
                      ],
                      "description": "Possible values:\n* `true` - transaction passed with 3DS\n* `false` - transaction passed without 3DS",
                      "examples": [
                        false
                      ]
                    },
                    "liqpay_order_id": {
                      "type": "string",
                      "description": "Payment order_id in LiqPay system",
                      "examples": [
                        "NYMK3AE61501685438251925"
                      ]
                    },
                    "mpi_eci": {
                      "type": "integer",
                      "enum": [
                        5,
                        6,
                        7
                      ],
                      "description": "Possible values:\n* `5` - the transaction passed with 3DS (issuer and acquirer support 3d Secure technology)\n* `6` - the issuer of the payer card does not support 3d Secure technology\n* `7` - the operation passed without 3d Secure",
                      "examples": [
                        7
                      ]
                    },
                    "mpi_cres": {
                      "type": "string",
                      "description": "The value returned to ACS by the issuer's page after cardholder authentication"
                    },
                    "order_id": {
                      "type": "string",
                      "description": "Order_id payment",
                      "examples": [
                        "98R1U1OV1485849059893399"
                      ]
                    },
                    "payment_id": {
                      "type": "number",
                      "description": "Payment id in LiqPay system",
                      "examples": [
                        165172
                      ]
                    },
                    "paytype": {
                      "type": "string",
                      "enum": [
                        "card",
                        "privat24",
                        "moment_part",
                        "cash",
                        "invoice",
                        "qr"
                      ],
                      "description": "Methods of payment. Possible values:\n* `card` - card payment\n* `privat24` - with privat24 account\n* `moment_part` - installments\n* `cash` - cash\n* `invoice` - to email\n* `qr` - qr code scanning",
                      "examples": [
                        "card"
                      ]
                    },
                    "public_key": {
                      "type": "string",
                      "description": "Shop public key",
                      "examples": [
                        "i000000000"
                      ]
                    },
                    "receiver_commission": {
                      "type": "number",
                      "description": "Receiver comission in payment currency",
                      "examples": [
                        0.0
                      ]
                    },
                    "rrn_credit": {
                      "type": "string",
                      "description": "Unique transaction ID in authorization and settlement system of issuer bank `Retrieval Reference number`",
                      "examples": [
                        "000663747003"
                      ]
                    },
                    "rrn_debit": {
                      "type": "string",
                      "description": "Unique transaction ID in authorization and settlement system of issuer bank `Retrieval Reference number`",
                      "examples": [
                        "000663747000"
                      ]
                    },
                    "sender_bonus": {
                      "type": "number",
                      "description": "Sender's bonus in the payment currency",
                      "examples": [
                        0.0
                      ]
                    },
                    "sender_card_bank": {
                      "type": "string",
                      "description": "Sender's card bank",
                      "examples": [
                        "pb"
                      ]
                    },
                    "sender_card_country": {
                      "type": "string",
                      "description": "Sender's card country. Digital [ISO 3166-1 code](https://en.wikipedia.org/wiki/ISO_3166-1)",
                      "examples": [
                        804
                      ]
                    },
                    "sender_card_mask2": {
                      "type": "string",
                      "description": "Sender's card",
                      "examples": [
                        "473118*50"
                      ]
                    },
                    "sender_card_type": {
                      "type": "string",
                      "description": "Sender's card type MC/Visa",
                      "examples": [
                        "visa"
                      ]
                    },
                    "sender_commission": {
                      "type": "number",
                      "description": "Commission from the sender in the payment currency",
                      "examples": [
                        0.0
                      ]
                    },
                    "sender_first_name": {
                      "type": "string",
                      "description": "The name of the sender",
                      "examples": [
                        "first_name"
                      ]
                    },
                    "sender_last_name": {
                      "type": "string",
                      "description": "Sender's last name",
                      "examples": [
                        "last_name"
                      ]
                    },
                    "sender_phone": {
                      "type": "string",
                      "description": "Sender's phone number",
                      "examples": [
                        "380950000001"
                      ]
                    },
                    "status": {
                      "type": "string",
                      "enum": [
                        "error",
                        "failure",
                        "reversed",
                        "success",
                        "3ds_verify",
                        "cvv_verify",
                        "receiver_verify",
                        "sender_verify",
                        "wait_accept",
                        "wait_secure"
                      ],
                      "description": "Payment status.\nAvailable values:\nFinal payment statuses\n* `error` - Failed payment. Data is incorrect\n* `failure` - Failed payment\n* `reversed` - Payment refunded\n* `success` - Successful payment\nStatuses that required payment confirmation\n* `3ds_verify` - 3DS verification is required.\n To finish the payment you will require a [3ds_verify](https://www.liqpay.ua/en/doc/api/confirmation/3ds)\n* `cvv_verify` - Sender's card CVV is required. To finish the payment you will require a [cvv_verify](https://www.liqpay.ua/en/doc/api/confirmation/CVV)\n`otp_verify` OTP confirmation is required. OTP is sent to a customer phone number.\n To finish the payment you will require a [otp_verify](https://www.liqpay.ua/en/doc/api/confirmation/OTP)\n* `receiver_verify` - Receiver additional data is required. To finish the payment you will require a [receiver_verify](https://www.liqpay.ua/en/doc/api/confirmation/receiver_verify)\n* `sender_verify` - Sender's additional data is required.\n To finish the payment you will require a [sender_verify](https://www.liqpay.ua/en/doc/api/confirmation/sender_verify)\nOther payment statuses\n* `wait_accept` - Money are withdrawn from client but the store is still not verified. If the store is not activated for 60 days, payment will be automatically cancelled\n* `wait_secure` - Payment is verified",
                      "examples": [
                        "success"
                      ]
                    },
                    "transaction_id": {
                      "type": "number",
                      "description": "Id transactions in the LiqPay system",
                      "examples": [
                        165172
                      ]
                    },
                    "type": {
                      "type": "string",
                      "description": "Payment type",
                      "examples": [
                        "buy"
                      ]
                    },
                    "version": {
                      "default": 3,
                      "type": "integer",
                      "enum": [
                        3
                      ],
                      "description": "Version API",
                      "examples": [
                        3
                      ]
                    },
                    "dcc_allowed": {
                      "type": "array",
                      "description": "Data of alternative amount for payment with DCC",
                      "items": {
                        "type": "object",
                        "properties": {
                          "amount": {
                            "type": "number",
                            "description": "Amount of payment in alternative currency",
                            "examples": [
                              3.5984
                            ]
                          },
                          "commission": {
                            "type": "number",
                            "description": "Commission on payment in alternative currency",
                            "examples": [
                              0.0
                            ]
                          },
                          "currency": {
                            "type": "string",
                            "description": "Alternative currency",
                            "examples": [
                              "USD"
                            ]
                          },
                          "rate": {
                            "type": "number",
                            "description": "Conversion rate",
                            "examples": [
                              27.7905
                            ]
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}