{
  "openapi": "3.1.0",
  "info": {
    "version": "3",
    "title": "External API"
  },
  "servers": [
    {
      "url": "https://liqpay.ua"
    }
  ],
  "paths": {
    "/api/request?path=internet_acquiring%2Fdcc": {
      "post": {
        "summary": "Internet acquiring. DCC",
        "operationId": "internet_acquiring/dcc",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "version": {
                    "type": "integer",
                    "enum": [
                      3
                    ],
                    "default": 3,
                    "description": "Version API"
                  },
                  "public_key": {
                    "type": "string",
                    "description": "Public key - the store identifier. You can get the key in the [store settings](https://www.liqpay.ua/en/adminbusiness)"
                  },
                  "action": {
                    "type": "string",
                    "enum": [
                      "pay"
                    ],
                    "default": "pay"
                  },
                  "amount": {
                    "type": "number",
                    "description": "Payment amount",
                    "example": 5.0,
                    "examples": [
                      5.0,
                      7.34
                    ]
                  },
                  "card": {
                    "type": "string",
                    "description": "Card number of the payer"
                  },
                  "card_cvv": {
                    "type": "string",
                    "description": "CVV/CVV2"
                  },
                  "card_exp_month": {
                    "type": "string",
                    "description": "Expiry month of the payer's card",
                    "example": "08",
                    "examples": [
                      "08"
                    ]
                  },
                  "card_exp_year": {
                    "type": "string",
                    "description": "Expiry year of the payer's card",
                    "example": "19",
                    "examples": [
                      "19"
                    ]
                  },
                  "card_token": {
                    "type": "string",
                    "description": "Sender's [card token](https://www.liqpay.ua/en/doc/api/internet_acquiring/token?tab=1). You don't need to transmit card data, when using a token",
                    "example": "B5BВB0D00B88B00ED00A00D0D",
                    "examples": [
                      "B5BВB0D00B88B00ED00A00D0D"
                    ]
                  },
                  "currency": {
                    "type": "string",
                    "enum": [
                      "USD",
                      "EUR",
                      "UAH"
                    ],
                    "description": "Payment currency"
                  },
                  "description": {
                    "type": "string",
                    "description": "Payment description"
                  },
                  "order_id": {
                    "type": "string",
                    "maxLength": 255,
                    "description": "Unique purchase ID in your shop"
                  },
                  "phone": {
                    "type": "string",
                    "description": "Payer's phone number. The OTP-password will be sent to this telephone number to confirm your payment, and the linked payer's LiqPay cabinet. The telephone number should be indicated in the international format (Ukraine `+380`)",
                    "example": "+380950000001",
                    "examples": [
                      "+380950000001",
                      "380950000001"
                    ]
                  },
                  "language": {
                    "type": "string",
                    "enum": [
                      "uk",
                      "en"
                    ],
                    "default": "uk",
                    "description": "Customer's language"
                  },
                  "recurringbytoken": {
                    "type": "string",
                    "format": "boolean-integer",
                    "enum": [
                      "1"
                    ],
                    "default": "1",
                    "description": "This parameter allows to generate payer `card_token` which you receive in callback request to `server_url`. `card_token` allows to make recurring payments without payer card requisites using API [paytoken](https://www.liqpay.ua/en/doc/api/internet_acquiring/token). To receive `card_token` please send in request value `1`"
                  },
                  "result_url": {
                    "type": "string",
                    "format": "uri",
                    "maxLength": 510,
                    "description": "URL of your shop where the buyer would be redirected after completion of the purchase"
                  },
                  "server_url": {
                    "type": "string",
                    "format": "uri",
                    "maxLength": 510,
                    "description": "URL API in your store for notifications of payment status change (`server` -> `server`). [Learn more](https://www.liqpay.ua/en/doc/api/callback)"
                  },
                  "sandbox": {
                    "type": "string",
                    "format": "boolean-integer",
                    "enum": [
                      "1"
                    ],
                    "default": "1",
                    "description": "Enables the testing environment for developers. Payer card will not be charged. To enable testing environment you will need to transmit value `1`. All test payments will have the status `sandbox` - successful test payment"
                  },
                  "is_dcc_debit": {
                    "type": "boolean",
                    "description": "* `true` - the transaction will be carried out using an alternative DCC amount.\n* `false` - the transaction will be carried out without DCC"
                  },
                  "prepare": {
                    "type": "string",
                    "format": "boolean-integer",
                    "enum": [
                      "tariffs"
                    ],
                    "default": "tariffs",
                    "description": "* `tariffs` - get DCC rate and alternative currency"
                  },
                  "sender": {
                    "type": "object",
                    "properties": {
                      "sender_first_name": {
                        "type": "string",
                        "description": "Sender's first name"
                      },
                      "sender_last_name": {
                        "type": "string",
                        "description": "Sender's last name"
                      },
                      "sender_country_code": {
                        "type": "string",
                        "description": "Country code of the sender. Digital [ISO 3166-1 code](https://en.wikipedia.org/wiki/ISO_3166-1)"
                      },
                      "sender_city": {
                        "type": "string",
                        "description": "Sender's city"
                      },
                      "sender_address": {
                        "type": "string",
                        "description": "Sender's address"
                      },
                      "sender_postal_code": {
                        "type": "string",
                        "description": "Sender's zip code"
                      }
                    },
                    "description": "Sender parameters"
                  }
                },
                "required": [
                  "version",
                  "public_key",
                  "action",
                  "amount",
                  "card",
                  "card_cvv",
                  "card_exp_month",
                  "card_exp_year",
                  "card_token",
                  "currency",
                  "description",
                  "order_id",
                  "phone",
                  "sandbox"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "acq_id": {
                      "type": "number",
                      "description": "Acquirer ID",
                      "example": 414963,
                      "examples": [
                        414963
                      ]
                    },
                    "action": {
                      "type": "string",
                      "enum": [
                        "pay",
                        "hold",
                        "paysplit",
                        "subscribe",
                        "paydonate",
                        "auth",
                        "regular"
                      ],
                      "description": "Transaction type. Possible values:\n* `pay` - payment\n* `hold` - amount of hold on sender's account\n* `paysplit` - splitting payments\n* `subscribe` - creation of a regular payment\n* `paydonate` - donation\n* `auth` - card preauth\n* `regular` - regular payment",
                      "example": "pay",
                      "examples": [
                        "pay"
                      ]
                    },
                    "agent_commission": {
                      "type": "number",
                      "description": "Agent comission in payment currency",
                      "example": 0.0,
                      "examples": [
                        0.0
                      ]
                    },
                    "amount": {
                      "type": "number",
                      "description": "Payment amount",
                      "example": 100.0,
                      "examples": [
                        100.0
                      ]
                    },
                    "amount_bonus": {
                      "type": "number",
                      "description": "Payer bonus amount in payment currency debit",
                      "example": 0.0,
                      "examples": [
                        0.0
                      ]
                    },
                    "amount_credit": {
                      "type": "number",
                      "description": "Payment amount for credit in currency of `currency_credit`",
                      "example": 100.0,
                      "examples": [
                        100.0
                      ]
                    },
                    "amount_debit": {
                      "type": "number",
                      "description": "Payment amount for debit in currency of `currency_debit`",
                      "example": 100.0,
                      "examples": [
                        100.0
                      ]
                    },
                    "authcode_credit": {
                      "type": "string",
                      "description": "Authorization code for transaction of credit",
                      "example": "329007",
                      "examples": [
                        "329007"
                      ]
                    },
                    "authcode_debit": {
                      "type": "string",
                      "description": "Authorization code for transaction of debit",
                      "example": "388000",
                      "examples": [
                        "388000"
                      ]
                    },
                    "bonus_procent": {
                      "type": "number",
                      "description": "Discount rate in percent",
                      "example": 0.0,
                      "examples": [
                        0.0
                      ]
                    },
                    "bonus_type": {
                      "type": "string",
                      "enum": [
                        "bonusplus",
                        "discount_club",
                        "personal",
                        "promo"
                      ],
                      "description": "Bonus type, ",
                      "example": "bonusplus",
                      "examples": [
                        "bonusplus"
                      ]
                    },
                    "card_token": {
                      "type": "string",
                      "description": "Sender's card token",
                      "example": "CDRES215658546306B200061FCC53A86B",
                      "examples": [
                        "CDRES215658546306B200061FCC53A86B"
                      ]
                    },
                    "commission_credit": {
                      "type": "number",
                      "description": "Commission from the receiver in `currency_credit`",
                      "example": 0.0,
                      "examples": [
                        0.0
                      ]
                    },
                    "commission_debit": {
                      "type": "number",
                      "description": "Commission from the sender in `currency_debit`",
                      "example": 0.0,
                      "examples": [
                        0.0
                      ]
                    },
                    "create_date": {
                      "type": "integer",
                      "format": "timestamp-ms",
                      "description": "Date of payment creation",
                      "example": 1501685446633,
                      "examples": [
                        1501685446633
                      ]
                    },
                    "currency": {
                      "type": "string",
                      "description": "Payment currency",
                      "example": "UAH",
                      "examples": [
                        "UAH"
                      ]
                    },
                    "currency_credit": {
                      "type": "string",
                      "description": "Transaction currency of credit",
                      "example": "UAH",
                      "examples": [
                        "UAH"
                      ]
                    },
                    "currency_debit": {
                      "type": "string",
                      "description": "Transaction currency of debit",
                      "example": "UAH",
                      "examples": [
                        "UAH"
                      ]
                    },
                    "description": {
                      "type": "string",
                      "description": "Payment description",
                      "example": "description",
                      "examples": [
                        "description"
                      ]
                    },
                    "end_date": {
                      "type": "integer",
                      "format": "timestamp-ms",
                      "description": "Date of payment edition/end",
                      "example": 1501685446633,
                      "examples": [
                        1501685446633
                      ]
                    },
                    "ip": {
                      "type": "string",
                      "description": "Sender's IP address",
                      "example": "8.8.8.8",
                      "examples": [
                        "8.8.8.8"
                      ]
                    },
                    "is_3ds": {
                      "type": "boolean",
                      "description": "Possible values:\n* `true` - transaction passed with 3DS\n* `false` - transaction passed without 3DS"
                    },
                    "liqpay_order_id": {
                      "type": "string",
                      "description": "Payment order_id in LiqPay system",
                      "example": "NYMK3AE61501685438251925",
                      "examples": [
                        "NYMK3AE61501685438251925"
                      ]
                    },
                    "mpi_eci": {
                      "type": "integer",
                      "enum": [
                        5,
                        6,
                        7
                      ],
                      "description": "Possible values:\n* `5` - the transaction passed with 3DS (issuer and acquirer support 3d Secure technology)\n* `6` - the issuer of the payer card does not support 3d Secure technology\n* `7` - the operation passed without 3d Secure",
                      "example": 7,
                      "examples": [
                        7
                      ]
                    },
                    "mpi_cres": {
                      "type": "string",
                      "description": "The value returned to ACS by the issuer's page after cardholder authentication"
                    },
                    "order_id": {
                      "type": "string",
                      "description": "Order_id payment",
                      "example": "98R1U1OV1485849059893399",
                      "examples": [
                        "98R1U1OV1485849059893399"
                      ]
                    },
                    "payment_id": {
                      "type": "number",
                      "description": "Payment id in LiqPay system",
                      "example": 165172,
                      "examples": [
                        165172
                      ]
                    },
                    "paytype": {
                      "type": "string",
                      "enum": [
                        "card",
                        "privat24",
                        "moment_part",
                        "cash",
                        "invoice",
                        "qr"
                      ],
                      "description": "Methods of payment. Possible values:\n* `card` - card payment\n* `privat24` - with privat24 account\n* `moment_part` - installments\n* `cash` - cash\n* `invoice` - to email\n* `qr` - qr code scanning",
                      "example": "card",
                      "examples": [
                        "card"
                      ]
                    },
                    "public_key": {
                      "type": "string",
                      "description": "Shop public key",
                      "example": "i000000000",
                      "examples": [
                        "i000000000"
                      ]
                    },
                    "receiver_commission": {
                      "type": "number",
                      "description": "Receiver comission in payment currency",
                      "example": 0.0,
                      "examples": [
                        0.0
                      ]
                    },
                    "status": {
                      "type": "string",
                      "enum": [
                        "activated",
                        "wait_accept"
                      ],
                      "description": "Possible values:\n* `activated` - the store is activated with refund\n* `wait_accept` - the store is activated without refund",
                      "example": "success",
                      "examples": [
                        "success"
                      ]
                    },
                    "rrn_credit": {
                      "type": "string",
                      "description": "Unique transaction ID in authorization and settlement system of issuer bank `Retrieval Reference number`",
                      "example": "000663747003",
                      "examples": [
                        "000663747003"
                      ]
                    },
                    "rrn_debit": {
                      "type": "string",
                      "description": "Unique transaction ID in authorization and settlement system of issuer bank `Retrieval Reference number`",
                      "example": "000663747000",
                      "examples": [
                        "000663747000"
                      ]
                    },
                    "sender_bonus": {
                      "type": "number",
                      "description": "Sender's bonus in the payment currency",
                      "example": 0.0,
                      "examples": [
                        0.0
                      ]
                    },
                    "sender_card_bank": {
                      "type": "string",
                      "description": "Sender's card bank",
                      "example": "pb",
                      "examples": [
                        "pb"
                      ]
                    },
                    "sender_card_country": {
                      "type": "string",
                      "description": "Sender's card country. Digital [ISO 3166-1 code](https://en.wikipedia.org/wiki/ISO_3166-1)",
                      "example": 804,
                      "examples": [
                        804
                      ]
                    },
                    "sender_card_mask2": {
                      "type": "string",
                      "description": "Sender's card",
                      "example": "473118*50",
                      "examples": [
                        "473118*50"
                      ]
                    },
                    "sender_card_type": {
                      "type": "string",
                      "description": "Sender's card type MC/Visa",
                      "example": "visa",
                      "examples": [
                        "visa"
                      ]
                    },
                    "sender_commission": {
                      "type": "number",
                      "description": "Commission from the sender in the payment currency",
                      "example": 0.0,
                      "examples": [
                        0.0
                      ]
                    },
                    "sender_first_name": {
                      "type": "string",
                      "description": "The name of the sender",
                      "example": "first_name",
                      "examples": [
                        "first_name"
                      ]
                    },
                    "sender_last_name": {
                      "type": "string",
                      "description": "Sender's last name",
                      "example": "last_name",
                      "examples": [
                        "last_name"
                      ]
                    },
                    "sender_phone": {
                      "type": "string",
                      "description": "Sender's phone number",
                      "example": "380950000001",
                      "examples": [
                        "380950000001"
                      ]
                    },
                    "status": {
                      "type": "string",
                      "enum": [
                        "error",
                        "failure",
                        "reversed",
                        "success",
                        "3ds_verify",
                        "cvv_verify",
                        "receiver_verify",
                        "sender_verify",
                        "wait_accept",
                        "wait_secure"
                      ],
                      "description": "Payment status.\nAvailable values:\nFinal payment statuses\n* `error` - Failed payment. Data is incorrect\n* `failure` - Failed payment\n* `reversed` - Payment refunded\n* `success` - Successful payment\nStatuses that required payment confirmation\n* `3ds_verify` - 3DS verification is required.\n To finish the payment you will require a [3ds_verify](https://www.liqpay.ua/en/doc/api/confirmation/3ds)\n* `cvv_verify` - Sender's card CVV is required. To finish the payment you will require a [cvv_verify](https://www.liqpay.ua/en/doc/api/confirmation/CVV)\n`otp_verify` OTP confirmation is required. OTP is sent to a customer phone number.\n To finish the payment you will require a [otp_verify](https://www.liqpay.ua/en/doc/api/confirmation/OTP)\n* `receiver_verify` - Receiver additional data is required. To finish the payment you will require a [receiver_verify](https://www.liqpay.ua/en/doc/api/confirmation/receiver_verify)\n* `sender_verify` - Sender's additional data is required.\n To finish the payment you will require a [sender_verify](https://www.liqpay.ua/en/doc/api/confirmation/sender_verify)\nOther payment statuses\n* `wait_accept` - Money are withdrawn from client but the store is still not verified. If the store is not activated for 60 days, payment will be automatically cancelled\n* `wait_secure` - Payment is verified"
                    },
                    "transaction_id": {
                      "type": "number",
                      "description": "Id transactions in the LiqPay system",
                      "example": 165172,
                      "examples": [
                        165172
                      ]
                    },
                    "type": {
                      "type": "string",
                      "description": "Payment type",
                      "example": "buy",
                      "examples": [
                        "buy"
                      ]
                    },
                    "version": {
                      "type": "integer",
                      "enum": [
                        3
                      ],
                      "default": 3,
                      "description": "Version API",
                      "example": 3,
                      "examples": [
                        3
                      ]
                    },
                    "dcc_allowed": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "amount": {
                            "type": "number",
                            "description": "Amount of payment in alternative currency",
                            "example": 3.5984,
                            "examples": [
                              3.5984
                            ]
                          },
                          "commission": {
                            "type": "number",
                            "description": "Commission on payment in alternative currency",
                            "example": 0.0,
                            "examples": [
                              0.0
                            ]
                          },
                          "currency": {
                            "type": "string",
                            "description": "Alternative currency",
                            "example": "USD",
                            "examples": [
                              "USD"
                            ]
                          },
                          "rate": {
                            "type": "number",
                            "description": "Conversion rate",
                            "example": 27.7905,
                            "examples": [
                              27.7905
                            ]
                          }
                        }
                      },
                      "description": "Data of alternative amount for payment with DCC"
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}