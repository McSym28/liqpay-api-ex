{
  "openapi": "3.1.0",
  "info": {
    "version": "3",
    "title": "External API"
  },
  "servers": [
    {
      "url": "https://liqpay.ua"
    }
  ],
  "paths": {
    "/api/request?path=internet_acquiring.checkout": {
      "post": {
        "summary": "Internet acquiring. Checkout",
        "operationId": "internet_acquiring/checkout",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "version": {
                    "type": "integer",
                    "enum": [
                      3
                    ],
                    "default": 3,
                    "description": "Version API",
                    "example": 3,
                    "examples": [
                      3
                    ]
                  },
                  "public_key": {
                    "type": "string",
                    "description": "Public key - the store identifier. You can get the key in the [store settings](https://www.liqpay.ua/en/adminbusiness)"
                  },
                  "action": {
                    "type": "string",
                    "enum": [
                      "pay",
                      "hold",
                      "subscribe",
                      "paydonate"
                    ],
                    "description": "Transaction type. Possible values:\n* `pay` - payment\n* `hold` - amount of hold on sender's account\n* `subscribe` - regular payment\n* `paydonate` - donation",
                    "example": "pay",
                    "examples": [
                      "pay"
                    ]
                  },
                  "amount": {
                    "type": "number",
                    "description": "Payment amount",
                    "example": 5.0,
                    "examples": [
                      5.0,
                      7.34,
                      1.0
                    ]
                  },
                  "currency": {
                    "type": "string",
                    "enum": [
                      "USD",
                      "EUR",
                      "UAH"
                    ],
                    "description": "Payment currency",
                    "example": "USD",
                    "examples": [
                      "USD"
                    ]
                  },
                  "description": {
                    "type": "string",
                    "description": "Payment description",
                    "example": "description text",
                    "examples": [
                      "description text"
                    ]
                  },
                  "order_id": {
                    "type": "string",
                    "maxLength": 255,
                    "description": "Unique purchase ID in your shop",
                    "example": "order_id_1",
                    "examples": [
                      "order_id_1"
                    ]
                  },
                  "rro_info": {
                    "type": "object",
                    "properties": {
                      "items": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "amount": {
                              "type": "number",
                              "description": "Quantity/volume",
                              "example": 2,
                              "examples": [
                                2
                              ]
                            },
                            "cost": {
                              "type": "number",
                              "description": "The cost of all units of the specified product in the receipt (number of units * unit cost)",
                              "example": 404,
                              "examples": [
                                404
                              ]
                            },
                            "id": {
                              "type": "integer",
                              "description": "Item ID. You can get it in the Liqpay account - SCR - Kasa - Goods",
                              "example": 123456,
                              "examples": [
                                123456
                              ]
                            },
                            "price": {
                              "type": "number",
                              "description": "Unit cost of goods",
                              "example": 202,
                              "examples": [
                                202
                              ]
                            }
                          },
                          "required": [
                            "amount",
                            "cost",
                            "id",
                            "price"
                          ]
                        },
                        "description": "Data about products for which payment is performed"
                      },
                      "delivery_emails": {
                        "type": "array",
                        "items": {
                          "type": "string",
                          "format": "email",
                          "example": "email1@email.com",
                          "examples": [
                            "email1@email.com",
                            "email2@email.com"
                          ]
                        },
                        "description": "List of e-mails to which receipts should be sent after fiscalization"
                      }
                    },
                    "description": "Data for fiscalization"
                  },
                  "expired_date": {
                    "type": "string",
                    "format": "date-time-liqpay",
                    "description": "Date and time until which customer is able to pay invoice by `UTC`. Should be sent in the following format `2016-04-24 00:00:00`"
                  },
                  "language": {
                    "type": "string",
                    "enum": [
                      "uk",
                      "en"
                    ],
                    "default": "uk",
                    "description": "Customer's language"
                  },
                  "paytypes": {
                    "type": "string",
                    "enum": [
                      "apay",
                      "gpay",
                      "card",
                      "privat24",
                      "moment_part",
                      "paypart",
                      "cash",
                      "invoice",
                      "qr"
                    ],
                    "description": "Parameter that gets the methods of payments that displayed on checkout. Possible values:\n* `apay` - pay with Apple Pay\n* `gpay` - pay with Google Pay\n* `card` - card payment\n* `privat24` - with privat24 account\n* `moment_part` - installments\n* `paypart` - payment by parts\n* `cash` - cash\n* `invoice` - to email\n* `qr` - qr code scanning. If the parameter is not passed, shop settings will be applied, Checkout tab"
                  },
                  "result_url": {
                    "type": "string",
                    "format": "uri",
                    "maxLength": 510,
                    "description": "URL of your shop where the buyer would be redirected after completion of the purchase"
                  },
                  "server_url": {
                    "type": "string",
                    "format": "uri",
                    "maxLength": 510,
                    "description": "URL API in your store for notifications of payment status change (`server` -> `server`). [Learn more](https://www.liqpay.ua/en/doc/api/callback)"
                  },
                  "verifycode": {
                    "type": "string",
                    "format": "boolean-yesno",
                    "enum": [
                      "Y"
                    ],
                    "default": "Y",
                    "description": "Dynamic verification code is generated and going back to `Callback`. Also generated code will be transferred to verification transactions for displaying in statement by client's card. Works for `action` = `auth`"
                  },
                  "split_rules": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "public_key": {
                          "type": "string",
                          "description": "Public key - the store identifier",
                          "example": "i000000001",
                          "examples": [
                            "i000000001",
                            "i000000002"
                          ]
                        },
                        "amount": {
                          "type": "number",
                          "description": "Payment amount",
                          "example": 1,
                          "examples": [
                            1,
                            2
                          ]
                        },
                        "commission_payer": {
                          "type": "string",
                          "enum": [
                            "sender",
                            "receiver"
                          ],
                          "default": "sender",
                          "description": "Commission payer",
                          "example": "sender",
                          "examples": [
                            "sender",
                            "receiver"
                          ]
                        },
                        "server_url": {
                          "type": "string",
                          "format": "uri",
                          "maxLength": 510,
                          "description": "URL API in your store for notifications of payment status change (`server` -> `server`)",
                          "example": "https://server1/callback",
                          "examples": [
                            "https://server1/callback",
                            "https://server2/callback"
                          ]
                        },
                        "description": {
                          "type": "string",
                          "description": "Payment description"
                        }
                      },
                      "required": [
                        "amount"
                      ]
                    },
                    "description": "Payment with split amount for a few receivers. This parameter is a `JSON` array containing split rules. While using `split_rules` parameter, card is being charged and amount is split and credited to a few receivers. If you need to convey your purpose for each amount use the parameter `description`. Acquiring fee is being charged from each shop in the `split_rules`"
                  },
                  "sender": {
                    "type": "object",
                    "properties": {
                      "sender_address": {
                        "type": "string",
                        "description": "Sender's address"
                      },
                      "sender_city": {
                        "type": "string",
                        "description": "Sender's city"
                      },
                      "sender_country_code": {
                        "type": "string",
                        "description": "Country code of the sender. Digital [ISO 3166-1 code](https://en.wikipedia.org/wiki/ISO_3166-1)"
                      },
                      "sender_first_name": {
                        "type": "string",
                        "description": "Sender's first name"
                      },
                      "sender_last_name": {
                        "type": "string",
                        "description": "Sender's last name"
                      },
                      "sender_postal_code": {
                        "type": "string",
                        "description": "Sender's zip code"
                      }
                    },
                    "description": "Sender parameters"
                  },
                  "regular_payment": {
                    "type": "object",
                    "properties": {
                      "subscribe": {
                        "type": "string",
                        "enum": [
                          "1"
                        ],
                        "default": "1",
                        "description": "Regular payment"
                      },
                      "subscribe_date_start": {
                        "type": "string",
                        "format": "date-time-liqpay",
                        "description": "Date of the first payment. Time must be specified in the following format `2015-03-31 00:00:00` by `UTC`. If past date is indicated - subscription will be activated with the date and time of request"
                      },
                      "subscribe_periodicity": {
                        "type": "string",
                        "enum": [
                          "day",
                          "week",
                          "month",
                          "year"
                        ],
                        "description": "Period of payments. Possible values:\n* `day` - daily\n* `week` - weekly\n* `month` - once in a month\n* `year` - once in a year"
                      }
                    },
                    "required": [
                      "subscribe_date_start"
                    ],
                    "description": "Regular payment parameters"
                  },
                  "one_click_payment": {
                    "type": "object",
                    "properties": {
                      "customer": {
                        "type": "string",
                        "maxLength": 100,
                        "description": "Unique customer ID in your shop. When you transfer the parameter LiqPay stores the payment details of the customer and his ID - the next payment can be made in 1-click. (When using the parameter for **Masterpass 1-click**, the valid payer's phone number is transmitted in this field)"
                      },
                      "recurringbytoken": {
                        "type": "string",
                        "format": "boolean-integer",
                        "enum": [
                          "1"
                        ],
                        "default": "1",
                        "description": "Allows to generate payer `card_token` which you receive in callback request to `server_url`. `card_token` allows to make recurring payments without payer card details via API payment by token - it means 1-click. For getting `card_token` please send in request value: `1`"
                      },
                      "customer_user_id": {
                        "type": "string",
                        "description": "The user ID in the system of the merchant is transferred with each user’s payment (doesn’t have to match `customer` it is used for payment with the help of **Masterpass 1-click** wallet)"
                      }
                    },
                    "description": "Parameters for 1-click payment"
                  },
                  "dae": {
                    "type": "string",
                    "description": "Detail Addenda.\n\nPossible `JSON` object:\n```\n{\n  \"airLine\": \"Avia\", // airline abbreviation, max 4 symbols.\n  \"ticketNumber\": \"ACSFD12354SA\", // ticket number, max 15 symbols. \n  \"passengerName\": \"John Doe\", // passenger name, max 29 symbols.\n  \"flightNumber\": \"742\", // flight number, max 5 number.\n  \"originCity\": \"DP\", // departure city/airport code, max 5 symbols.\n  \"destinationCity\": \"NY\", // arrival city/airport code, max 5 symbols.\n  \"departureDate\": \"100514\" // departure date in format YYMMDD, max 6 number.\n}\n```"
                  },
                  "info": {
                    "type": "string",
                    "description": "Information to add details to payment",
                    "example": "External information for payments",
                    "examples": [
                      "External information for payments"
                    ]
                  },
                  "product_category": {
                    "type": "string",
                    "maxLength": 25,
                    "description": "Product category in your shop"
                  },
                  "product_description": {
                    "type": "string",
                    "maxLength": 500,
                    "description": "Product description in your shop"
                  },
                  "product_name": {
                    "type": "string",
                    "maxLength": 100,
                    "description": "Product name in your shop"
                  },
                  "product_url": {
                    "type": "string",
                    "format": "uri",
                    "maxLength": 2000,
                    "description": "Product page address"
                  }
                },
                "required": [
                  "version",
                  "public_key",
                  "action",
                  "amount",
                  "currency",
                  "description",
                  "order_id"
                ]
              }
            }
          }
        }
      }
    },
    "/api/request?path=internet_acquiring.widget": {
      "post": {
        "summary": "Internet acquiring. Payment widget",
        "operationId": "internet_acquiring/widget",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "version": {
                    "type": "integer",
                    "enum": [
                      3
                    ],
                    "default": 3,
                    "description": "Version API",
                    "example": 3,
                    "examples": [
                      3
                    ]
                  },
                  "public_key": {
                    "type": "string",
                    "description": "Public key - the store identifier. You can get the key in the [store settings](https://www.liqpay.ua/en/adminbusiness)"
                  },
                  "action": {
                    "type": "string",
                    "enum": [
                      "pay",
                      "hold",
                      "subscribe",
                      "paydonate"
                    ],
                    "description": "Transaction type. Possible values:\n* `pay` - payment\n* `hold` - amount of hold on sender's account\n* `subscribe` - regular payment\n* `paydonate` - donation",
                    "example": "pay",
                    "examples": [
                      "pay"
                    ]
                  },
                  "amount": {
                    "type": "number",
                    "description": "Payment amount",
                    "example": 5.0,
                    "examples": [
                      5.0,
                      7.34,
                      1.0
                    ]
                  },
                  "currency": {
                    "type": "string",
                    "enum": [
                      "USD",
                      "EUR",
                      "UAH"
                    ],
                    "description": "Payment currency",
                    "example": "USD",
                    "examples": [
                      "USD"
                    ]
                  },
                  "description": {
                    "type": "string",
                    "description": "Payment description",
                    "example": "description text",
                    "examples": [
                      "description text"
                    ]
                  },
                  "order_id": {
                    "type": "string",
                    "maxLength": 255,
                    "description": "Unique purchase ID in your shop",
                    "example": "order_id_1",
                    "examples": [
                      "order_id_1"
                    ]
                  },
                  "expired_date": {
                    "type": "string",
                    "format": "date-time-liqpay",
                    "description": "Date and time until which customer is able to pay invoice by `UTC`. Should be sent in the following format `2016-04-24 00:00:00`"
                  },
                  "language": {
                    "type": "string",
                    "enum": [
                      "uk",
                      "en"
                    ],
                    "default": "uk",
                    "description": "Customer's language"
                  },
                  "paytypes": {
                    "type": "string",
                    "enum": [
                      "apay",
                      "gpay",
                      "card",
                      "privat24",
                      "moment_part",
                      "paypart",
                      "cash",
                      "invoice",
                      "qr"
                    ],
                    "description": "Parameter that gets the methods of payments that displayed on checkout. Possible values:\n* `apay` - pay with Apple Pay\n* `gpay` - pay with Google Pay\n* `card` - card payment\n* `privat24` - with privat24 account\n* `moment_part` - installments\n* `paypart` - payment by parts\n* `cash` - cash\n* `invoice` - to email\n* `qr` - qr code scanning. If the parameter is not passed, shop settings will be applied, Checkout tab"
                  },
                  "result_url": {
                    "type": "string",
                    "format": "uri",
                    "maxLength": 510,
                    "description": "URL of your shop where the buyer would be redirected after completion of the purchase"
                  },
                  "server_url": {
                    "type": "string",
                    "format": "uri",
                    "maxLength": 510,
                    "description": "URL API in your store for notifications of payment status change (`server` -> `server`). [Learn more](https://www.liqpay.ua/en/doc/api/callback)"
                  },
                  "verifycode": {
                    "type": "string",
                    "format": "boolean-yesno",
                    "enum": [
                      "Y"
                    ],
                    "default": "Y",
                    "description": "Dynamic verification code is generated and going back to `Callback`. Also generated code will be transferred to verification transactions for displaying in statement by client's card. Works for `action` = `auth`"
                  },
                  "split_rules": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "public_key": {
                          "type": "string",
                          "description": "Public key - the store identifier",
                          "example": "i000000001",
                          "examples": [
                            "i000000001",
                            "i000000002"
                          ]
                        },
                        "amount": {
                          "type": "number",
                          "description": "Payment amount",
                          "example": 1,
                          "examples": [
                            1,
                            2
                          ]
                        },
                        "commission_payer": {
                          "type": "string",
                          "enum": [
                            "sender",
                            "receiver"
                          ],
                          "default": "sender",
                          "description": "Commission payer",
                          "example": "sender",
                          "examples": [
                            "sender",
                            "receiver"
                          ]
                        },
                        "server_url": {
                          "type": "string",
                          "format": "uri",
                          "maxLength": 510,
                          "description": "URL API in your store for notifications of payment status change (`server` -> `server`)",
                          "example": "https://server1/callback",
                          "examples": [
                            "https://server1/callback",
                            "https://server2/callback"
                          ]
                        },
                        "description": {
                          "type": "string",
                          "description": "Payment description"
                        }
                      },
                      "required": [
                        "amount"
                      ]
                    },
                    "description": "Payment with split amount for a few receivers. This parameter is a `JSON` array containing split rules. While using `split_rules` parameter, card is being charged and amount is split and credited to a few receivers. If you need to convey your purpose for each amount use the parameter `description`. Acquiring fee is being charged from each shop in the `split_rules`"
                  },
                  "sender": {
                    "type": "object",
                    "properties": {
                      "sender_address": {
                        "type": "string",
                        "description": "Sender's address"
                      },
                      "sender_city": {
                        "type": "string",
                        "description": "Sender's city"
                      },
                      "sender_country_code": {
                        "type": "string",
                        "description": "Country code of the sender. Digital [ISO 3166-1 code](https://uk.wikipedia.org/wiki/ISO_3166-1)"
                      },
                      "sender_first_name": {
                        "type": "string",
                        "description": "Sender's first name"
                      },
                      "sender_last_name": {
                        "type": "string",
                        "description": "Sender's last name"
                      },
                      "sender_postal_code": {
                        "type": "string",
                        "description": "Sender's zip code"
                      }
                    },
                    "description": "Sender parameters"
                  },
                  "regular_payment": {
                    "type": "object",
                    "properties": {
                      "subscribe": {
                        "type": "string",
                        "enum": [
                          "1"
                        ],
                        "default": "1",
                        "description": "Regular payment"
                      },
                      "subscribe_date_start": {
                        "type": "string",
                        "format": "date-time-liqpay",
                        "description": "Date of the first payment. Time must be specified in the following format `2015-03-31 00:00:00` by `UTC`. If past date is indicated - subscription will be activated with the date and time of request"
                      },
                      "subscribe_periodicity": {
                        "type": "string",
                        "enum": [
                          "day",
                          "week",
                          "month",
                          "year"
                        ],
                        "description": "Period of payments. Possible values:\n* `day` - daily\n* `week` - weekly\n* `month` - once in a month\n* `year` - once in a year"
                      }
                    },
                    "required": [
                      "subscribe_date_start"
                    ],
                    "description": "Regular payment parameters"
                  },
                  "one_click_payment": {
                    "type": "object",
                    "properties": {
                      "customer": {
                        "type": "string",
                        "maxLength": 100,
                        "description": "Unique customer ID in your shop. When you transfer the parameter LiqPay stores the payment details of the customer and his ID - the next payment can be made in 1-click. (When using the parameter for **Masterpass 1-click**, the valid payer's phone number is transmitted in this field)"
                      },
                      "recurringbytoken": {
                        "type": "string",
                        "format": "boolean-integer",
                        "enum": [
                          "1"
                        ],
                        "default": "1",
                        "description": "Allows to generate payer `card_token` which you receive in callback request to `server_url`. `card_token` allows to make recurring payments without payer card details via API payment by token - it means 1-click. For getting `card_token` please send in request value: `1`"
                      },
                      "customer_user_id": {
                        "type": "string",
                        "description": "The user ID in the system of the merchant is transferred with each user’s payment (doesn’t have to match `customer` it is used for payment with the help of **Masterpass 1-click** wallet)"
                      }
                    },
                    "description": "Parameters for 1-click payment"
                  },
                  "dae": {
                    "type": "string",
                    "description": "Detail Addenda.\n\nPossible `JSON` object:\n```\n{\n  \"airLine\": \"Avia\", // airline abbreviation, max 4 symbols.\n  \"ticketNumber\": \"ACSFD12354SA\", // ticket number, max 15 symbols. \n  \"passengerName\": \"John Doe\", // passenger name, max 29 symbols.\n  \"flightNumber\": \"742\", // flight number, max 5 number.\n  \"originCity\": \"DP\", // departure city/airport code, max 5 symbols.\n  \"destinationCity\": \"NY\", // arrival city/airport code, max 5 symbols.\n  \"departureDate\": \"100514\" // departure date in format YYMMDD, max 6 number.\n}\n```"
                  },
                  "info": {
                    "type": "string",
                    "description": "Information to add details to payment",
                    "example": "External information for payments",
                    "examples": [
                      "External information for payments"
                    ]
                  },
                  "product_category": {
                    "type": "string",
                    "maxLength": 25,
                    "description": "Product category in your shop"
                  },
                  "product_description": {
                    "type": "string",
                    "maxLength": 500,
                    "description": "Product description in your shop"
                  },
                  "product_name": {
                    "type": "string",
                    "maxLength": 100,
                    "description": "Product name in your shop"
                  },
                  "product_url": {
                    "type": "string",
                    "format": "uri",
                    "maxLength": 2000,
                    "description": "Product page address"
                  }
                },
                "required": [
                  "version",
                  "public_key",
                  "action",
                  "amount",
                  "currency",
                  "description",
                  "order_id"
                ]
              }
            }
          }
        }
      }
    },
    "/api/request?path=internet_acquiring.refund": {
      "post": {
        "summary": "Internet acquiring. Refund",
        "operationId": "internet_acquiring/refund",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "version": {
                    "type": "integer",
                    "enum": [
                      3
                    ],
                    "default": 3,
                    "description": "Version API",
                    "example": 3,
                    "examples": [
                      3
                    ]
                  },
                  "public_key": {
                    "type": "string",
                    "description": "Public key - the store identifier. You can get the key in the [store settings](https://www.liqpay.ua/en/adminbusiness)"
                  },
                  "action": {
                    "type": "string",
                    "enum": [
                      "refund"
                    ],
                    "default": "refund",
                    "example": "refund",
                    "examples": [
                      "refund"
                    ]
                  },
                  "amount": {
                    "type": "number",
                    "description": "Payment amount",
                    "example": 5.0,
                    "examples": [
                      5.0,
                      7.34
                    ]
                  },
                  "order_id": {
                    "type": "string",
                    "maxLength": 255,
                    "description": "Unique purchase ID in your shop",
                    "example": "order_id_1",
                    "examples": [
                      "order_id_1"
                    ]
                  }
                },
                "required": [
                  "version",
                  "public_key",
                  "action",
                  "amount",
                  "order_id"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "action": {
                      "type": "string",
                      "enum": [
                        "pay",
                        "hold",
                        "subscribe",
                        "paydonate"
                      ],
                      "description": "Transaction type. Possible values:\n* `pay` - payment\n* `hold` - amount of hold on sender's account\n* `subscribe` - regular payment\n* `paydonate` - donation",
                      "example": "refund",
                      "examples": [
                        "refund"
                      ]
                    },
                    "payment_id": {
                      "type": "number",
                      "description": "Payment id in LiqPay system",
                      "example": 165173,
                      "examples": [
                        165173
                      ]
                    },
                    "status": {
                      "type": "string",
                      "enum": [
                        "error",
                        "failure",
                        "reversed",
                        "success"
                      ],
                      "description": "Payment status.\nAvailable values:\nFinal payment statuses\n* `error` - Failed payment. Data is incorrect\n* `failure` - Failed payment\n* `reversed` - Payment refunded\n* `success` - Successful payment",
                      "example": "reversed",
                      "examples": [
                        "reversed"
                      ]
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/request?path=internet_acquiring.card_payment": {
      "post": {
        "summary": "Internet acquiring. Card payment",
        "operationId": "internet_acquiring/card_payment",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "version": {
                    "type": "integer",
                    "enum": [
                      3
                    ],
                    "default": 3,
                    "description": "Version API",
                    "example": 3,
                    "examples": [
                      3
                    ]
                  },
                  "public_key": {
                    "type": "string",
                    "description": "Public key - the store identifier. You can get the key in the [store settings](https://www.liqpay.ua/en/adminbusiness)"
                  },
                  "action": {
                    "type": "string",
                    "enum": [
                      "pay"
                    ],
                    "default": "pay",
                    "example": "pay",
                    "examples": [
                      "pay"
                    ]
                  },
                  "amount": {
                    "type": "number",
                    "description": "Payment amount",
                    "example": 5.0,
                    "examples": [
                      5.0,
                      7.34,
                      1.0
                    ]
                  },
                  "card": {
                    "type": "string",
                    "description": "Card number of the payer",
                    "example": "4731195301524634",
                    "examples": [
                      "4731195301524634"
                    ]
                  },
                  "card_cvv": {
                    "type": "string",
                    "description": "CVV/CVV2. The parameter is required if the card number is being passed",
                    "example": "111",
                    "examples": [
                      "111"
                    ]
                  },
                  "card_exp_month": {
                    "type": "string",
                    "description": "Expiry month of the payer's card. This parameter is required if the card number or an unencrypted token is being passed",
                    "example": "08",
                    "examples": [
                      "08",
                      "03"
                    ]
                  },
                  "card_exp_year": {
                    "type": "string",
                    "description": "Expiry year of the payer's card. This parameter is required if the card number or an unencrypted token is being passed",
                    "example": "19",
                    "examples": [
                      "19",
                      "22"
                    ]
                  },
                  "currency": {
                    "type": "string",
                    "enum": [
                      "USD",
                      "EUR",
                      "UAH"
                    ],
                    "description": "Payment currency",
                    "example": "USD",
                    "examples": [
                      "USD"
                    ]
                  },
                  "description": {
                    "type": "string",
                    "description": "Payment description",
                    "example": "description text",
                    "examples": [
                      "description text"
                    ]
                  },
                  "ip": {
                    "type": "string",
                    "description": "Client IP, required if Trusted IP address is specified"
                  },
                  "order_id": {
                    "type": "string",
                    "maxLength": 255,
                    "description": "Unique purchase ID in your shop",
                    "example": "order_id_1",
                    "examples": [
                      "order_id_1"
                    ]
                  },
                  "phone": {
                    "type": "string",
                    "description": "Payer's phone number. The OTP-password will be sent to this telephone number to confirm your payment, and the linked payer's LiqPay cabinet. The telephone number should be indicated in the international format (Ukraine `+380`)",
                    "example": "+380950000001",
                    "examples": [
                      "+380950000001",
                      "380950000001"
                    ]
                  },
                  "paytype": {
                    "type": "string",
                    "enum": [
                      "apay",
                      "gpay",
                      "apay_tavv",
                      "gpay_tavv",
                      "tavv"
                    ],
                    "description": "Payment type. Possible values:\n* `apay` - payment using an encrypted Apple token\n* `gpay` - payment using an encrypted Google token\n* `apay_tavv` - payment using an unencrypted Apple token\n* `gpay_tavv` - payment using an unencrypted Google token\n* `tavv` - payment using an unencrypted token of international payment systems (MasterCard, Visa). This parameter is required for payments using encrypted and unencrypted tokens"
                  },
                  "tavv": {
                    "type": "string",
                    "description": "A cryptogram is a dynamic one-time code for every transaction accompanying a token. This parameter is required when making a payment using unencrypted tokens by Apple, Google, international payment systems (MasterCard, Visa)"
                  },
                  "tid": {
                    "type": "string",
                    "description": "Previous transaction ID. For recurring payments using tokens of Visa international payment system"
                  },
                  "language": {
                    "type": "string",
                    "enum": [
                      "uk",
                      "en"
                    ],
                    "default": "uk",
                    "description": "Customer's language"
                  },
                  "prepare": {
                    "type": "string",
                    "format": "boolean-integer",
                    "enum": [
                      "1"
                    ],
                    "default": "1",
                    "description": "The preliminary preparation of the payment. This mode allows to check if all data are filled in, if 3DS authentication is required, if transaction is within limit. Payer card will not be charged. To enable this mode you will need to transmit value `1`, and to work with DCC (dynamic currency conversion) - the value of `tariffs`"
                  },
                  "recurringbytoken": {
                    "type": "string",
                    "format": "boolean-integer",
                    "enum": [
                      "1"
                    ],
                    "default": "1",
                    "description": "This parameter allows to generate payer `card_token` which you receive in callback request to `server_url`. `card_token` allows to make recurring payments without payer card requisites using API [paytoken](https://www.liqpay.ua/en/doc/api/internet_acquiring/token). To receive `card_token` please send in request value `1`"
                  },
                  "result_url": {
                    "type": "string",
                    "format": "uri",
                    "maxLength": 510,
                    "description": "URL of your shop where the buyer would be redirected after completion of the purchase"
                  },
                  "recurring": {
                    "type": "boolean",
                    "description": "Token recurring payment flag. Used for payments with tokens of international payment systems (MasterCard, Visa). Possible values:\n* `true` - the operation is performed without the participation of the client\n* `false` - the operation is performed by the client"
                  },
                  "server_url": {
                    "type": "string",
                    "format": "uri",
                    "maxLength": 510,
                    "description": "URL API in your store for notifications of payment status change (`server` -> `server`). [Learn more](https://www.liqpay.ua/en/doc/api/callback)"
                  },
                  "rro_info": {
                    "type": "object",
                    "properties": {
                      "items": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "amount": {
                              "type": "number",
                              "description": "Quantity/volume",
                              "example": 2,
                              "examples": [
                                2
                              ]
                            },
                            "cost": {
                              "type": "number",
                              "description": "The cost of all units of the specified product in the receipt (number of units * unit cost)",
                              "example": 404,
                              "examples": [
                                404
                              ]
                            },
                            "id": {
                              "type": "integer",
                              "description": "Item ID. You can get it in the Liqpay account - SCR - Kasa - Goods",
                              "example": 123456,
                              "examples": [
                                123456
                              ]
                            },
                            "price": {
                              "type": "number",
                              "description": "Unit cost of goods",
                              "example": 202,
                              "examples": [
                                202
                              ]
                            }
                          },
                          "required": [
                            "amount",
                            "cost",
                            "id",
                            "price"
                          ]
                        },
                        "description": "Data about products for which payment is performed"
                      },
                      "delivery_emails": {
                        "type": "array",
                        "items": {
                          "type": "string",
                          "format": "email",
                          "example": "email1@email.com",
                          "examples": [
                            "email1@email.com",
                            "email2@email.com"
                          ]
                        },
                        "description": "List of e-mails to which receipts should be sent after fiscalization"
                      }
                    },
                    "description": "Data for fiscalization"
                  },
                  "split_rules": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "public_key": {
                          "type": "string",
                          "description": "Public key - the store identifier",
                          "example": "i000000001",
                          "examples": [
                            "i000000001",
                            "i000000002"
                          ]
                        },
                        "amount": {
                          "type": "number",
                          "description": "Payment amount",
                          "example": 1,
                          "examples": [
                            1,
                            2
                          ]
                        },
                        "commission_payer": {
                          "type": "string",
                          "enum": [
                            "sender",
                            "receiver"
                          ],
                          "default": "sender",
                          "description": "Commission payer",
                          "example": "sender",
                          "examples": [
                            "sender",
                            "receiver"
                          ]
                        },
                        "server_url": {
                          "type": "string",
                          "format": "uri",
                          "maxLength": 510,
                          "description": "URL API in your store for notifications of payment status change (`server` -> `server`)",
                          "example": "https://server1/callback",
                          "examples": [
                            "https://server1/callback",
                            "https://server2/callback"
                          ]
                        },
                        "description": {
                          "type": "string",
                          "description": "Payment description"
                        }
                      },
                      "required": [
                        "amount"
                      ]
                    },
                    "description": "Payment with split amount for a few receivers. This parameter is a `JSON` array containing split rules. While using `split_rules` parameter, card is being charged and amount is split and credited to a few receivers. If you need to convey your purpose for each amount use the parameter `description`. Acquiring fee is being charged from each shop in the `split_rules`"
                  },
                  "sender": {
                    "type": "object",
                    "properties": {
                      "sender_first_name": {
                        "type": "string",
                        "description": "Sender's first name"
                      },
                      "sender_last_name": {
                        "type": "string",
                        "description": "Sender's last name"
                      },
                      "phone": {
                        "type": "string",
                        "description": "Payer's phone number"
                      },
                      "sender_email": {
                        "type": "string",
                        "description": "E-mail address"
                      },
                      "sender_country_code": {
                        "type": "string",
                        "description": "Country code of the sender. Digital [ISO 3166-1 code](https://en.wikipedia.org/wiki/ISO_3166-1)"
                      },
                      "sender_city": {
                        "type": "string",
                        "description": "Sender's city"
                      },
                      "sender_address": {
                        "type": "string",
                        "description": "Sender's address"
                      },
                      "sender_state": {
                        "type": "string",
                        "description": "Payment address. Sender's region code. Digital [ISO 3166-2 code.](https://en.wikipedia.org/wiki/ISO_3166-2)For Ukraine [ISO 3166-2:UA](https://en.wikipedia.org/wiki/ISO_3166-2:UA)"
                      },
                      "sender_shipping_state": {
                        "type": "string",
                        "description": "Shipping address. Sender's region code. Digital [ISO 3166-2 code.](https://en.wikipedia.org/wiki/ISO_3166-2)For Ukraine [ISO 3166-2:UA](https://en.wikipedia.org/wiki/ISO_3166-2:UA)"
                      },
                      "sender_postal_code": {
                        "type": "string",
                        "description": "Sender's zip code"
                      }
                    },
                    "required": [
                      "phone",
                      "sender_country_code",
                      "sender_city",
                      "sender_address",
                      "sender_postal_code"
                    ],
                    "description": "Sender parameters"
                  },
                  "regular_payment": {
                    "type": "object",
                    "properties": {
                      "subscribe": {
                        "type": "string",
                        "enum": [
                          "1"
                        ],
                        "default": "1",
                        "description": "Regular payment"
                      },
                      "subscribe_date_start": {
                        "type": "string",
                        "format": "date-time-liqpay",
                        "description": "Date of the first payment. Time must be specified in the following format `2015-03-31 00:00:00` by `UTC`. If past date is indicated - subscription will be activated with the date and time of request"
                      },
                      "subscribe_periodicity": {
                        "type": "string",
                        "enum": [
                          "day",
                          "week",
                          "month",
                          "year"
                        ],
                        "description": "Period of payments. Possible values:\n* `day` - daily\n* `week` - weekly\n* `month` - once in a month\n* `year` - once in a year"
                      }
                    },
                    "required": [
                      "subscribe_date_start"
                    ],
                    "description": "Regular payment parameters"
                  },
                  "customer": {
                    "type": "string",
                    "maxLength": 100,
                    "description": "Unique customer ID in your shop"
                  },
                  "dae": {
                    "type": "string",
                    "description": "Detail Addenda.\n\nPossible `JSON` object:\n```\n{\n  \"airLine\": \"Avia\", // airline abbreviation, max 4 symbols.\n  \"ticketNumber\": \"ACSFD12354SA\", // ticket number, max 15 symbols. \n  \"passengerName\": \"John Doe\", // passenger name, max 29 symbols.\n  \"flightNumber\": \"742\", // flight number, max 5 number.\n  \"originCity\": \"DP\", // departure city/airport code, max 5 symbols.\n  \"destinationCity\": \"NY\", // arrival city/airport code, max 5 symbols.\n  \"departureDate\": \"100514\" // departure date in format YYMMDD, max 6 number.\n}\n```"
                  },
                  "info": {
                    "type": "string",
                    "description": "Information to add details to payment",
                    "example": "External information for payments",
                    "examples": [
                      "External information for payments"
                    ]
                  },
                  "product_category": {
                    "type": "string",
                    "maxLength": 25,
                    "description": "Product category in your shop"
                  },
                  "product_description": {
                    "type": "string",
                    "maxLength": 500,
                    "description": "Product description in your shop"
                  },
                  "product_name": {
                    "type": "string",
                    "maxLength": 100,
                    "description": "Product name in your shop"
                  },
                  "product_url": {
                    "type": "string",
                    "format": "uri",
                    "maxLength": 2000,
                    "description": "Product page address"
                  }
                },
                "required": [
                  "version",
                  "public_key",
                  "action",
                  "amount",
                  "card",
                  "currency",
                  "description",
                  "ip",
                  "order_id",
                  "phone"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "acq_id": {
                      "type": "number",
                      "description": "Acquirer ID",
                      "example": 414963,
                      "examples": [
                        414963
                      ]
                    },
                    "action": {
                      "type": "string",
                      "enum": [
                        "pay",
                        "hold",
                        "paysplit",
                        "subscribe",
                        "paydonate",
                        "auth",
                        "regular"
                      ],
                      "description": "Transaction type. Possible values:\n* `pay` - payment\n* `hold` - amount of hold on sender's account\n* `paysplit` - splitting payments\n* `subscribe` - creation of a regular payment\n* `paydonate` - donation\n* `auth` - card preauth\n* `regular` - regular payment",
                      "example": "pay",
                      "examples": [
                        "pay"
                      ]
                    },
                    "agent_commission": {
                      "type": "number",
                      "description": "Agent comission in payment currency",
                      "example": 0.0,
                      "examples": [
                        0.0
                      ]
                    },
                    "amount": {
                      "type": "number",
                      "description": "Payment amount",
                      "example": 100.0,
                      "examples": [
                        100.0
                      ]
                    },
                    "amount_bonus": {
                      "type": "number",
                      "description": "Payer bonus amount in payment currency debit",
                      "example": 0.0,
                      "examples": [
                        0.0
                      ]
                    },
                    "amount_credit": {
                      "type": "number",
                      "description": "Payment amount for credit in currency of `currency_credit`",
                      "example": 100.0,
                      "examples": [
                        100.0
                      ]
                    },
                    "amount_debit": {
                      "type": "number",
                      "description": "Payment amount for debit in currency of `currency_debit`",
                      "example": 100.0,
                      "examples": [
                        100.0
                      ]
                    },
                    "authcode_credit": {
                      "type": "string",
                      "description": "Authorization code for transaction of credit",
                      "example": "329007",
                      "examples": [
                        "329007"
                      ]
                    },
                    "authcode_debit": {
                      "type": "string",
                      "description": "Authorization code for transaction of debit",
                      "example": "388000",
                      "examples": [
                        "388000"
                      ]
                    },
                    "bonus_procent": {
                      "type": "number",
                      "description": "Discount rate in percent",
                      "example": 0.0,
                      "examples": [
                        0.0
                      ]
                    },
                    "bonus_type": {
                      "type": "string",
                      "enum": [
                        "bonusplus",
                        "discount_club",
                        "personal",
                        "promo"
                      ],
                      "description": "Bonus type, ",
                      "example": "bonusplus",
                      "examples": [
                        "bonusplus"
                      ]
                    },
                    "card_token": {
                      "type": "string",
                      "description": "Sender's card token",
                      "example": "CDRES215658546306B200061FCC53A86B",
                      "examples": [
                        "CDRES215658546306B200061FCC53A86B"
                      ]
                    },
                    "commission_credit": {
                      "type": "number",
                      "description": "Commission from the receiver in `currency_credit`",
                      "example": 0.0,
                      "examples": [
                        0.0
                      ]
                    },
                    "commission_debit": {
                      "type": "number",
                      "description": "Commission from the sender in `currency_debit`",
                      "example": 0.0,
                      "examples": [
                        0.0
                      ]
                    },
                    "create_date": {
                      "type": "integer",
                      "format": "timestamp-ms",
                      "description": "Date of payment creation",
                      "example": 1501685446633,
                      "examples": [
                        1501685446633
                      ]
                    },
                    "currency": {
                      "type": "string",
                      "description": "Payment currency",
                      "example": "UAH",
                      "examples": [
                        "UAH"
                      ]
                    },
                    "currency_credit": {
                      "type": "string",
                      "description": "Transaction currency of credit",
                      "example": "UAH",
                      "examples": [
                        "UAH"
                      ]
                    },
                    "currency_debit": {
                      "type": "string",
                      "description": "Transaction currency of debit",
                      "example": "UAH",
                      "examples": [
                        "UAH"
                      ]
                    },
                    "description": {
                      "type": "string",
                      "description": "Payment description",
                      "example": "description",
                      "examples": [
                        "description"
                      ]
                    },
                    "end_date": {
                      "type": "integer",
                      "format": "timestamp-ms",
                      "description": "Date of payment edition/end",
                      "example": 1501685446633,
                      "examples": [
                        1501685446633
                      ]
                    },
                    "ip": {
                      "type": "string",
                      "description": "Sender's IP address",
                      "example": "8.8.8.8",
                      "examples": [
                        "8.8.8.8"
                      ]
                    },
                    "is_3ds": {
                      "type": "boolean",
                      "description": "Possible values:\n* `true` - transaction passed with 3DS\n* `false` - transaction passed without 3DS"
                    },
                    "liqpay_order_id": {
                      "type": "string",
                      "description": "Payment order_id in LiqPay system",
                      "example": "NYMK3AE61501685438251925",
                      "examples": [
                        "NYMK3AE61501685438251925"
                      ]
                    },
                    "mpi_eci": {
                      "type": "integer",
                      "enum": [
                        5,
                        6,
                        7
                      ],
                      "description": "Possible values:\n* `5` - the transaction passed with 3DS (issuer and acquirer support 3d Secure technology)\n* `6` - the issuer of the payer card does not support 3d Secure technology\n* `7` - the operation passed without 3d Secure",
                      "example": 7,
                      "examples": [
                        7
                      ]
                    },
                    "mpi_cres": {
                      "type": "string",
                      "description": "The value returned to ACS by the issuer's page after cardholder authentication"
                    },
                    "order_id": {
                      "type": "string",
                      "description": "Order_id payment",
                      "example": "98R1U1OV1485849059893399",
                      "examples": [
                        "98R1U1OV1485849059893399"
                      ]
                    },
                    "payment_id": {
                      "type": "number",
                      "description": "Payment id in LiqPay system",
                      "example": 165172,
                      "examples": [
                        165172
                      ]
                    },
                    "paytype": {
                      "type": "string",
                      "enum": [
                        "card",
                        "privat24",
                        "moment_part",
                        "cash",
                        "invoice",
                        "qr"
                      ],
                      "description": "Methods of payment. Possible values:\n* `card` - card payment\n* `privat24` - with privat24 account\n* `moment_part` - installments\n* `cash` - cash\n* `invoice` - to email\n* `qr` - qr code scanning",
                      "example": "card",
                      "examples": [
                        "card"
                      ]
                    },
                    "public_key": {
                      "type": "string",
                      "description": "Shop public key",
                      "example": "i000000000",
                      "examples": [
                        "i000000000"
                      ]
                    },
                    "receiver_commission": {
                      "type": "number",
                      "description": "Receiver comission in payment currency",
                      "example": 0.0,
                      "examples": [
                        0.0
                      ]
                    },
                    "rrn_credit": {
                      "type": "string",
                      "description": "Unique transaction ID in authorization and settlement system of issuer bank `Retrieval Reference number`",
                      "example": "000663747003",
                      "examples": [
                        "000663747003"
                      ]
                    },
                    "rrn_debit": {
                      "type": "string",
                      "description": "Unique transaction ID in authorization and settlement system of issuer bank `Retrieval Reference number`",
                      "example": "000663747000",
                      "examples": [
                        "000663747000"
                      ]
                    },
                    "sender_bonus": {
                      "type": "number",
                      "description": "Sender's bonus in the payment currency",
                      "example": 0.0,
                      "examples": [
                        0.0
                      ]
                    },
                    "sender_card_bank": {
                      "type": "string",
                      "description": "Sender's card bank",
                      "example": "pb",
                      "examples": [
                        "pb"
                      ]
                    },
                    "sender_card_country": {
                      "type": "string",
                      "description": "Sender's card country. Digital [ISO 3166-1 code](https://en.wikipedia.org/wiki/ISO_3166-1)",
                      "example": 804,
                      "examples": [
                        804
                      ]
                    },
                    "sender_card_mask2": {
                      "type": "string",
                      "description": "Sender's card",
                      "example": "473118*50",
                      "examples": [
                        "473118*50"
                      ]
                    },
                    "sender_card_type": {
                      "type": "string",
                      "description": "Sender's card type MC/Visa",
                      "example": "visa",
                      "examples": [
                        "visa"
                      ]
                    },
                    "sender_commission": {
                      "type": "number",
                      "description": "Commission from the sender in the payment currency",
                      "example": 0.0,
                      "examples": [
                        0.0
                      ]
                    },
                    "sender_first_name": {
                      "type": "string",
                      "description": "The name of the sender",
                      "example": "first_name",
                      "examples": [
                        "first_name"
                      ]
                    },
                    "sender_last_name": {
                      "type": "string",
                      "description": "Sender's last name",
                      "example": "last_name",
                      "examples": [
                        "last_name"
                      ]
                    },
                    "sender_phone": {
                      "type": "string",
                      "description": "Sender's phone number",
                      "example": "380950000001",
                      "examples": [
                        "380950000001"
                      ]
                    },
                    "status": {
                      "type": "string",
                      "enum": [
                        "error",
                        "failure",
                        "reversed",
                        "success",
                        "3ds_verify",
                        "cvv_verify",
                        "receiver_verify",
                        "sender_verify",
                        "wait_accept",
                        "wait_secure"
                      ],
                      "description": "Payment status.\nAvailable values:\nFinal payment statuses\n* `error` - Failed payment. Data is incorrect\n* `failure` - Failed payment\n* `reversed` - Payment refunded\n* `success` - Successful payment\nStatuses that required payment confirmation\n* `3ds_verify` - 3DS verification is required.\n To finish the payment you will require a [3ds_verify](https://www.liqpay.ua/en/doc/api/confirmation/3ds)\n* `cvv_verify` - Sender's card CVV is required. To finish the payment you will require a [cvv_verify](https://www.liqpay.ua/en/doc/api/confirmation/CVV)\n`otp_verify` OTP confirmation is required. OTP is sent to a customer phone number.\n To finish the payment you will require a [otp_verify](https://www.liqpay.ua/en/doc/api/confirmation/OTP)\n* `receiver_verify` - Receiver additional data is required. To finish the payment you will require a [receiver_verify](https://www.liqpay.ua/en/doc/api/confirmation/receiver_verify)\n* `sender_verify` - Sender's additional data is required.\n To finish the payment you will require a [sender_verify](https://www.liqpay.ua/en/doc/api/confirmation/sender_verify)\nOther payment statuses\n* `wait_accept` - Money are withdrawn from client but the store is still not verified. If the store is not activated for 60 days, payment will be automatically cancelled\n* `wait_secure` - Payment is verified",
                      "example": "success",
                      "examples": [
                        "success"
                      ]
                    },
                    "transaction_id": {
                      "type": "number",
                      "description": "Id transactions in the LiqPay system",
                      "example": 165172,
                      "examples": [
                        165172
                      ]
                    },
                    "type": {
                      "type": "string",
                      "description": "Payment type",
                      "example": "buy",
                      "examples": [
                        "buy"
                      ]
                    },
                    "version": {
                      "type": "integer",
                      "enum": [
                        3
                      ],
                      "default": 3,
                      "description": "Version API",
                      "example": 3,
                      "examples": [
                        3
                      ]
                    },
                    "dcc_allowed": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "amount": {
                            "type": "number",
                            "description": "Amount of payment in alternative currency",
                            "example": 3.5984,
                            "examples": [
                              3.5984
                            ]
                          },
                          "commission": {
                            "type": "number",
                            "description": "Commission on payment in alternative currency",
                            "example": 0.0,
                            "examples": [
                              0.0
                            ]
                          },
                          "currency": {
                            "type": "string",
                            "description": "Alternative currency",
                            "example": "USD",
                            "examples": [
                              "USD"
                            ]
                          },
                          "rate": {
                            "type": "number",
                            "description": "Conversion rate",
                            "example": 27.7905,
                            "examples": [
                              27.7905
                            ]
                          }
                        }
                      },
                      "description": "Data of alternative amount for payment with DCC"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/request?path=internet_acquiring.privat_pay": {
      "post": {
        "summary": "Internet acquiring. PrivatPay button",
        "operationId": "internet_acquiring/privat_pay",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "version": {
                    "type": "integer",
                    "enum": [
                      3
                    ],
                    "default": 3,
                    "description": "Version API"
                  },
                  "public_key": {
                    "type": "string",
                    "description": "Public key - the store identifier. You can get the key in the [store settings](https://www.liqpay.ua/en/adminbusiness)"
                  },
                  "action": {
                    "type": "string",
                    "enum": [
                      "payment_prepare"
                    ],
                    "default": "payment_prepare"
                  },
                  "amount": {
                    "type": "number",
                    "description": "Payment amount",
                    "example": 5.0,
                    "examples": [
                      5.0,
                      7.34
                    ]
                  },
                  "currency": {
                    "type": "string",
                    "enum": [
                      "USD",
                      "EUR",
                      "UAH"
                    ],
                    "description": "Payment currency"
                  },
                  "description": {
                    "type": "string",
                    "description": "Payment description"
                  },
                  "order_id": {
                    "type": "string",
                    "maxLength": 255,
                    "description": "Unique purchase ID in your shop"
                  },
                  "action_payment": {
                    "type": "string",
                    "enum": [
                      "pay",
                      "hold",
                      "subscribe",
                      "paydonate"
                    ],
                    "description": "Transaction type. Possible values:\n* `pay` - payment\n* `hold` - amount of hold on sender's account\n* `subscribe` - regular [payment](https://www.liqpay.ua/en/doc/api/internet_acquiring/subscription)\n* `paydonate` - donation"
                  },
                  "language": {
                    "type": "string",
                    "enum": [
                      "uk",
                      "en"
                    ],
                    "default": "uk",
                    "description": "Customer's language"
                  },
                  "result_url": {
                    "type": "string",
                    "format": "uri",
                    "maxLength": 510,
                    "description": "URL of your shop where the buyer would be redirected after completion of the purchase"
                  }
                },
                "required": [
                  "version",
                  "public_key",
                  "action",
                  "amount",
                  "currency",
                  "description",
                  "order_id"
                ]
              }
            }
          }
        }
      }
    },
    "/api/request?path=internet_acquiring.apay.encrypted_token": {
      "post": {
        "summary": "Internet acquiring. Apple Pay. Encrypted token",
        "operationId": "internet_acquiring/apay/encrypted_token",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "version": {
                    "type": "integer",
                    "enum": [
                      3
                    ],
                    "default": 3,
                    "description": "Version API"
                  },
                  "public_key": {
                    "type": "string",
                    "description": "Public key - the store identifier. You can get the key in the [store settings](https://www.liqpay.ua/en/adminbusiness)"
                  },
                  "action": {
                    "type": "string",
                    "enum": [
                      "pay",
                      "hold"
                    ]
                  },
                  "amount": {
                    "type": "number",
                    "description": "Payment amount",
                    "example": 5.0,
                    "examples": [
                      5.0,
                      7.34
                    ]
                  },
                  "currency": {
                    "type": "string",
                    "enum": [
                      "USD",
                      "EUR",
                      "UAH"
                    ],
                    "description": "Payment currency"
                  },
                  "description": {
                    "type": "string",
                    "description": "Payment description"
                  },
                  "order_id": {
                    "type": "string",
                    "maxLength": 255,
                    "description": "Unique purchase ID in your shop"
                  },
                  "phone": {
                    "type": "string",
                    "description": "Payer's phone number. The OTP-password will be sent to this telephone number to confirm your payment, and the linked payer's LiqPay cabinet. The telephone number should be indicated in the international format (Ukraine `+380`)",
                    "example": "+380950000001",
                    "examples": [
                      "+380950000001",
                      "380950000001"
                    ]
                  },
                  "paytype": {
                    "type": "string",
                    "enum": [
                      "apay_tavv"
                    ],
                    "default": "apay_tavv"
                  },
                  "tavv": {
                    "type": "string",
                    "description": "A cryptogram is a dynamic one-time code for each transaction that accompanies a token. It is obtained when decrypting payment data from the Apple device"
                  },
                  "language": {
                    "type": "string",
                    "enum": [
                      "uk",
                      "en"
                    ],
                    "default": "uk",
                    "description": "Customer's language"
                  },
                  "result_url": {
                    "type": "string",
                    "format": "uri",
                    "maxLength": 510,
                    "description": "URL of your shop where the buyer would be redirected after completion of the purchase"
                  },
                  "server_url": {
                    "type": "string",
                    "format": "uri",
                    "maxLength": 510,
                    "description": "URL API in your store for notifications of payment status change (`server` -> `server`). [Learn more](https://www.liqpay.ua/en/doc/api/callback)"
                  },
                  "card": {
                    "type": "string",
                    "description": "Card token obtained by decrypting data from an Apple device"
                  },
                  "card_exp_month": {
                    "type": "string",
                    "description": "Expiry month of the payer's token",
                    "example": "08",
                    "examples": [
                      "08"
                    ]
                  },
                  "card_exp_year": {
                    "type": "string",
                    "description": "Expiry year of the payer's token",
                    "example": "19",
                    "examples": [
                      "19"
                    ]
                  },
                  "sender": {
                    "type": "object",
                    "properties": {
                      "sender_address": {
                        "type": "string",
                        "description": "Sender's address"
                      },
                      "sender_city": {
                        "type": "string",
                        "description": "Sender's city"
                      },
                      "sender_country_code": {
                        "type": "string",
                        "description": "Country code of the sender. Digital [ISO 3166-1 code](https://en.wikipedia.org/wiki/ISO_3166-1)"
                      },
                      "sender_first_name": {
                        "type": "string",
                        "description": "Sender's first name"
                      },
                      "sender_last_name": {
                        "type": "string",
                        "description": "Sender's last name"
                      },
                      "sender_postal_code": {
                        "type": "string",
                        "description": "Sender's zip code"
                      }
                    },
                    "description": "Sender parameters"
                  },
                  "split_rules": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "public_key": {
                          "type": "string",
                          "description": "Public key - the store identifier",
                          "example": "i000000001",
                          "examples": [
                            "i000000001",
                            "i000000002"
                          ]
                        },
                        "amount": {
                          "type": "number",
                          "description": "Payment amount",
                          "example": 1,
                          "examples": [
                            1,
                            2
                          ]
                        },
                        "commission_payer": {
                          "type": "string",
                          "enum": [
                            "sender",
                            "receiver"
                          ],
                          "default": "sender",
                          "description": "Commission payer",
                          "example": "sender",
                          "examples": [
                            "sender",
                            "receiver"
                          ]
                        },
                        "server_url": {
                          "type": "string",
                          "format": "uri",
                          "maxLength": 510,
                          "description": "URL API in your store for notifications of payment status change (`server` -> `server`)",
                          "example": "https://server1/callback",
                          "examples": [
                            "https://server1/callback",
                            "https://server2/callback"
                          ]
                        },
                        "description": {
                          "type": "string",
                          "description": "Payment description"
                        }
                      },
                      "required": [
                        "amount"
                      ]
                    },
                    "description": "Payment with split amount for a few receivers. This parameter is a `JSON` array containing split rules. While using `split_rules` parameter, card is being charged and amount is split and credited to a few receivers. If you need to convey your purpose for each amount use the parameter `description`. Acquiring fee is being charged from each shop in the `split_rules`"
                  },
                  "dae": {
                    "type": "string",
                    "description": "Detail Addenda.\n\nPossible `JSON` object:\n```\n{\n  \"airLine\": \"Avia\", // airline abbreviation, max 4 symbols.\n  \"ticketNumber\": \"ACSFD12354SA\", // ticket number, max 15 symbols. \n  \"passengerName\": \"John Doe\", // passenger name, max 29 symbols.\n  \"flightNumber\": \"742\", // flight number, max 5 number.\n  \"originCity\": \"DP\", // departure city/airport code, max 5 symbols.\n  \"destinationCity\": \"NY\", // arrival city/airport code, max 5 symbols.\n  \"departureDate\": \"100514\" // departure date in format YYMMDD, max 6 number.\n}\n```"
                  },
                  "info": {
                    "type": "string",
                    "description": "Information to add details to payment",
                    "example": "External information for payments",
                    "examples": [
                      "External information for payments"
                    ]
                  },
                  "product_category": {
                    "type": "string",
                    "maxLength": 25,
                    "description": "Product category in your shop"
                  },
                  "product_description": {
                    "type": "string",
                    "maxLength": 500,
                    "description": "Product description in your shop"
                  },
                  "product_name": {
                    "type": "string",
                    "maxLength": 100,
                    "description": "Product name in your shop"
                  },
                  "product_url": {
                    "type": "string",
                    "format": "uri",
                    "maxLength": 2000,
                    "description": "Product page address"
                  }
                },
                "required": [
                  "version",
                  "public_key",
                  "action",
                  "amount",
                  "currency",
                  "description",
                  "order_id",
                  "paytype",
                  "tavv",
                  "card",
                  "card_exp_month",
                  "card_exp_year"
                ]
              }
            }
          }
        }
      }
    },
    "/api/request?path=internet_acquiring.apay.decrypted_token": {
      "post": {
        "summary": "Internet acquiring. Apple Pay. Decrypted token",
        "operationId": "internet_acquiring/apay/decrypted_token",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "version": {
                    "type": "integer",
                    "enum": [
                      3
                    ],
                    "default": 3,
                    "description": "Version API"
                  },
                  "public_key": {
                    "type": "string",
                    "description": "Public key - the store identifier. You can get the key in the [store settings](https://www.liqpay.ua/en/adminbusiness)"
                  },
                  "action": {
                    "type": "string",
                    "enum": [
                      "pay",
                      "hold"
                    ]
                  },
                  "amount": {
                    "type": "number",
                    "description": "Payment amount",
                    "example": 5.0,
                    "examples": [
                      5.0,
                      7.34
                    ]
                  },
                  "applepay_token": {
                    "type": "string",
                    "description": "JSON string from the token parameter (obtained from Apple) encoded with base64"
                  },
                  "currency": {
                    "type": "string",
                    "enum": [
                      "USD",
                      "EUR",
                      "UAH"
                    ],
                    "description": "Payment currency"
                  },
                  "description": {
                    "type": "string",
                    "description": "Payment description"
                  },
                  "order_id": {
                    "type": "string",
                    "maxLength": 255,
                    "description": "Unique purchase ID in your shop"
                  },
                  "phone": {
                    "type": "string",
                    "description": "Payer's phone number. The OTP-password will be sent to this telephone number to confirm your payment, and the linked payer's LiqPay cabinet. The telephone number should be indicated in the international format (Ukraine `+380`)",
                    "example": "+380950000001",
                    "examples": [
                      "+380950000001",
                      "380950000001"
                    ]
                  },
                  "paytype": {
                    "type": "string",
                    "enum": [
                      "apay"
                    ],
                    "default": "apay"
                  },
                  "language": {
                    "type": "string",
                    "enum": [
                      "uk",
                      "en"
                    ],
                    "default": "uk",
                    "description": "Customer's language"
                  },
                  "result_url": {
                    "type": "string",
                    "format": "uri",
                    "maxLength": 510,
                    "description": "URL of your shop where the buyer would be redirected after completion of the purchase"
                  },
                  "server_url": {
                    "type": "string",
                    "format": "uri",
                    "maxLength": 510,
                    "description": "URL API in your store for notifications of payment status change (`server` -> `server`). [Learn more](https://www.liqpay.ua/en/doc/api/callback)"
                  },
                  "sender": {
                    "type": "object",
                    "properties": {
                      "sender_address": {
                        "type": "string",
                        "description": "Sender's address"
                      },
                      "sender_city": {
                        "type": "string",
                        "description": "Sender's city"
                      },
                      "sender_country_code": {
                        "type": "string",
                        "description": "Country code of the sender. Digital [ISO 3166-1 code](https://en.wikipedia.org/wiki/ISO_3166-1)"
                      },
                      "sender_first_name": {
                        "type": "string",
                        "description": "Sender's first name"
                      },
                      "sender_last_name": {
                        "type": "string",
                        "description": "Sender's last name"
                      },
                      "sender_postal_code": {
                        "type": "string",
                        "description": "Sender's zip code"
                      }
                    },
                    "description": "Sender parameters"
                  },
                  "split_rules": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "public_key": {
                          "type": "string",
                          "description": "Public key - the store identifier",
                          "example": "i000000001",
                          "examples": [
                            "i000000001",
                            "i000000002"
                          ]
                        },
                        "amount": {
                          "type": "number",
                          "description": "Payment amount",
                          "example": 1,
                          "examples": [
                            1,
                            2
                          ]
                        },
                        "commission_payer": {
                          "type": "string",
                          "enum": [
                            "sender",
                            "receiver"
                          ],
                          "default": "sender",
                          "description": "Commission payer",
                          "example": "sender",
                          "examples": [
                            "sender",
                            "receiver"
                          ]
                        },
                        "server_url": {
                          "type": "string",
                          "format": "uri",
                          "maxLength": 510,
                          "description": "URL API in your store for notifications of payment status change (`server` -> `server`)",
                          "example": "https://server1/callback",
                          "examples": [
                            "https://server1/callback",
                            "https://server2/callback"
                          ]
                        },
                        "description": {
                          "type": "string",
                          "description": "Payment description"
                        }
                      },
                      "required": [
                        "amount"
                      ]
                    },
                    "description": "Payment with split amount for a few receivers. This parameter is a `JSON` array containing split rules. While using `split_rules` parameter, card is being charged and amount is split and credited to a few receivers. If you need to convey your purpose for each amount use the parameter `description`. Acquiring fee is being charged from each shop in the `split_rules`"
                  },
                  "dae": {
                    "type": "string",
                    "description": "Detail Addenda.\n\nPossible `JSON` object:\n```\n{\n  \"airLine\": \"Avia\", // airline abbreviation, max 4 symbols.\n  \"ticketNumber\": \"ACSFD12354SA\", // ticket number, max 15 symbols. \n  \"passengerName\": \"John Doe\", // passenger name, max 29 symbols.\n  \"flightNumber\": \"742\", // flight number, max 5 number.\n  \"originCity\": \"DP\", // departure city/airport code, max 5 symbols.\n  \"destinationCity\": \"NY\", // arrival city/airport code, max 5 symbols.\n  \"departureDate\": \"100514\" // departure date in format YYMMDD, max 6 number.\n}\n```"
                  },
                  "info": {
                    "type": "string",
                    "description": "Information to add details to payment",
                    "example": "External information for payments",
                    "examples": [
                      "External information for payments"
                    ]
                  },
                  "product_category": {
                    "type": "string",
                    "maxLength": 25,
                    "description": "Product category in your shop"
                  },
                  "product_description": {
                    "type": "string",
                    "maxLength": 500,
                    "description": "Product description in your shop"
                  },
                  "product_name": {
                    "type": "string",
                    "maxLength": 100,
                    "description": "Product name in your shop"
                  },
                  "product_url": {
                    "type": "string",
                    "format": "uri",
                    "maxLength": 2000,
                    "description": "Product page address"
                  }
                },
                "required": [
                  "version",
                  "public_key",
                  "action",
                  "amount",
                  "applepay_token",
                  "currency",
                  "description",
                  "order_id",
                  "paytype"
                ]
              }
            }
          }
        }
      }
    },
    "/api/request?path=internet_acquiring.gpay.encrypted_token": {
      "post": {
        "summary": "Internet acquiring. Google Pay. Encrypted token",
        "operationId": "internet_acquiring/gpay/encrypted_token",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "version": {
                    "type": "integer",
                    "enum": [
                      3
                    ],
                    "default": 3,
                    "description": "Version API"
                  },
                  "public_key": {
                    "type": "string",
                    "description": "Public key - the store identifier. You can get the key in the [store settings](https://www.liqpay.ua/en/adminbusiness)"
                  },
                  "action": {
                    "type": "string",
                    "enum": [
                      "pay",
                      "hold"
                    ]
                  },
                  "amount": {
                    "type": "number",
                    "description": "Payment amount",
                    "example": 5.0,
                    "examples": [
                      5.0,
                      7.34
                    ]
                  },
                  "currency": {
                    "type": "string",
                    "enum": [
                      "USD",
                      "EUR",
                      "UAH"
                    ],
                    "description": "Payment currency"
                  },
                  "description": {
                    "type": "string",
                    "description": "Payment description"
                  },
                  "order_id": {
                    "type": "string",
                    "maxLength": 255,
                    "description": "Unique purchase ID in your shop"
                  },
                  "phone": {
                    "type": "string",
                    "description": "Payer's phone number. The OTP-password will be sent to this telephone number to confirm your payment, and the linked payer's LiqPay cabinet. The telephone number should be indicated in the international format (Ukraine `+380`)",
                    "example": "+380950000001",
                    "examples": [
                      "+380950000001",
                      "380950000001"
                    ]
                  },
                  "paytype": {
                    "type": "string",
                    "enum": [
                      "gpay_tavv"
                    ],
                    "default": "gpay_tavv"
                  },
                  "tavv": {
                    "type": "string",
                    "description": "A cryptogram is a dynamic one-time code for each transaction that accompanies a token. It is obtained when decrypting payment data from the Android device"
                  },
                  "language": {
                    "type": "string",
                    "enum": [
                      "uk",
                      "en"
                    ],
                    "default": "uk",
                    "description": "Customer's language"
                  },
                  "result_url": {
                    "type": "string",
                    "format": "uri",
                    "maxLength": 510,
                    "description": "URL of your shop where the buyer would be redirected after completion of the purchase"
                  },
                  "server_url": {
                    "type": "string",
                    "format": "uri",
                    "maxLength": 510,
                    "description": "URL API in your store for notifications of payment status change (`server` -> `server`). [Learn more](https://www.liqpay.ua/en/doc/api/callback)"
                  },
                  "card": {
                    "type": "string",
                    "description": "Card token obtained by decrypting data from an Google device"
                  },
                  "card_exp_month": {
                    "type": "string",
                    "description": "Expiry month of the payer's token",
                    "example": "08",
                    "examples": [
                      "08"
                    ]
                  },
                  "card_exp_year": {
                    "type": "string",
                    "description": "Expiry year of the payer's token",
                    "example": "19",
                    "examples": [
                      "19"
                    ]
                  },
                  "sender": {
                    "type": "object",
                    "properties": {
                      "sender_address": {
                        "type": "string",
                        "description": "Sender's address"
                      },
                      "sender_city": {
                        "type": "string",
                        "description": "Sender's city"
                      },
                      "sender_country_code": {
                        "type": "string",
                        "description": "Country code of the sender. Digital [ISO 3166-1 code](https://en.wikipedia.org/wiki/ISO_3166-1)"
                      },
                      "sender_first_name": {
                        "type": "string",
                        "description": "Sender's first name"
                      },
                      "sender_last_name": {
                        "type": "string",
                        "description": "Sender's last name"
                      },
                      "sender_postal_code": {
                        "type": "string",
                        "description": "Sender's zip code"
                      }
                    },
                    "description": "Sender parameters"
                  },
                  "split_rules": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "public_key": {
                          "type": "string",
                          "description": "Public key - the store identifier",
                          "example": "i000000001",
                          "examples": [
                            "i000000001",
                            "i000000002"
                          ]
                        },
                        "amount": {
                          "type": "number",
                          "description": "Payment amount",
                          "example": 1,
                          "examples": [
                            1,
                            2
                          ]
                        },
                        "commission_payer": {
                          "type": "string",
                          "enum": [
                            "sender",
                            "receiver"
                          ],
                          "default": "sender",
                          "description": "Commission payer",
                          "example": "sender",
                          "examples": [
                            "sender",
                            "receiver"
                          ]
                        },
                        "server_url": {
                          "type": "string",
                          "format": "uri",
                          "maxLength": 510,
                          "description": "URL API in your store for notifications of payment status change (`server` -> `server`)",
                          "example": "https://server1/callback",
                          "examples": [
                            "https://server1/callback",
                            "https://server2/callback"
                          ]
                        },
                        "description": {
                          "type": "string",
                          "description": "Payment description"
                        }
                      },
                      "required": [
                        "amount"
                      ]
                    },
                    "description": "Payment with split amount for a few receivers. This parameter is a `JSON` array containing split rules. While using `split_rules` parameter, card is being charged and amount is split and credited to a few receivers. If you need to convey your purpose for each amount use the parameter `description`. Acquiring fee is being charged from each shop in the `split_rules`"
                  },
                  "dae": {
                    "type": "string",
                    "description": "Detail Addenda.\n\nPossible `JSON` object:\n```\n{\n  \"airLine\": \"Avia\", // airline abbreviation, max 4 symbols.\n  \"ticketNumber\": \"ACSFD12354SA\", // ticket number, max 15 symbols. \n  \"passengerName\": \"John Doe\", // passenger name, max 29 symbols.\n  \"flightNumber\": \"742\", // flight number, max 5 number.\n  \"originCity\": \"DP\", // departure city/airport code, max 5 symbols.\n  \"destinationCity\": \"NY\", // arrival city/airport code, max 5 symbols.\n  \"departureDate\": \"100514\" // departure date in format YYMMDD, max 6 number.\n}\n```"
                  },
                  "info": {
                    "type": "string",
                    "description": "Information to add details to payment",
                    "example": "External information for payments",
                    "examples": [
                      "External information for payments"
                    ]
                  },
                  "product_category": {
                    "type": "string",
                    "maxLength": 25,
                    "description": "Product category in your shop"
                  },
                  "product_description": {
                    "type": "string",
                    "maxLength": 500,
                    "description": "Product description in your shop"
                  },
                  "product_name": {
                    "type": "string",
                    "maxLength": 100,
                    "description": "Product name in your shop"
                  },
                  "product_url": {
                    "type": "string",
                    "format": "uri",
                    "maxLength": 2000,
                    "description": "Product page address"
                  }
                },
                "required": [
                  "version",
                  "public_key",
                  "action",
                  "amount",
                  "currency",
                  "description",
                  "order_id",
                  "paytype",
                  "tavv",
                  "card",
                  "card_exp_month",
                  "card_exp_year"
                ]
              }
            }
          }
        }
      }
    },
    "/api/request?path=internet_acquiring.gpay.decrypted_token": {
      "post": {
        "summary": "Internet acquiring. Google Pay. Decrypted token",
        "operationId": "internet_acquiring/gpay/decrypted_token",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "version": {
                    "type": "integer",
                    "enum": [
                      3
                    ],
                    "default": 3,
                    "description": "Version API"
                  },
                  "public_key": {
                    "type": "string",
                    "description": "Public key - the store identifier. You can get the key in the [store settings](https://www.liqpay.ua/en/adminbusiness)"
                  },
                  "action": {
                    "type": "string",
                    "enum": [
                      "pay"
                    ],
                    "default": "pay"
                  },
                  "paytype": {
                    "type": "string",
                    "enum": [
                      "gpay"
                    ],
                    "default": "gpay"
                  },
                  "amount": {
                    "type": "number",
                    "description": "Payment amount",
                    "example": 5.0,
                    "examples": [
                      5.0,
                      7.34
                    ]
                  },
                  "gpay_token": {
                    "type": "string",
                    "description": "JSON string from token parameter (obtained from [Google](https://www.liqpay.ua/en/methods/google_pay)) encoded with base64 function"
                  },
                  "order_id": {
                    "type": "string",
                    "maxLength": 255,
                    "description": "Unique purchase ID in your shop"
                  },
                  "currency": {
                    "type": "string",
                    "enum": [
                      "USD",
                      "EUR",
                      "UAH"
                    ],
                    "description": "Payment currency"
                  },
                  "description": {
                    "type": "string",
                    "description": "Payment description"
                  },
                  "language": {
                    "type": "string",
                    "enum": [
                      "uk",
                      "en"
                    ],
                    "default": "uk",
                    "description": "Customer's language"
                  },
                  "result_url": {
                    "type": "string",
                    "format": "uri",
                    "maxLength": 510,
                    "description": "URL of your shop where the buyer would be redirected after completion of the purchase"
                  },
                  "server_url": {
                    "type": "string",
                    "format": "uri",
                    "maxLength": 510,
                    "description": "URL API in your store for notifications of payment status change (`server` -> `server`). [Learn more](https://www.liqpay.ua/en/doc/api/callback)"
                  }
                },
                "required": [
                  "version",
                  "public_key",
                  "action",
                  "paytype",
                  "amount",
                  "gpay_token",
                  "order_id",
                  "currency",
                  "description"
                ]
              }
            }
          }
        }
      }
    },
    "/api/request?path=internet_acquiring.subscription.create": {
      "post": {
        "summary": "Internet acquiring. Subscription. Create subscribtion",
        "operationId": "internet_acquiring/subscription/create",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "version": {
                    "type": "integer",
                    "enum": [
                      3
                    ],
                    "default": 3,
                    "description": "Version API",
                    "example": 3,
                    "examples": [
                      3
                    ]
                  },
                  "public_key": {
                    "type": "string",
                    "description": "Public key - the store identifier. You can get the key in the [store settings](https://www.liqpay.ua/en/adminbusiness)"
                  },
                  "action": {
                    "type": "string",
                    "enum": [
                      "subscribe"
                    ],
                    "default": "subscribe",
                    "example": "subscribe",
                    "examples": [
                      "subscribe"
                    ]
                  },
                  "amount": {
                    "type": "number",
                    "description": "Payment amount",
                    "example": 5.0,
                    "examples": [
                      5.0,
                      7.34,
                      1.0
                    ]
                  },
                  "card": {
                    "type": "string",
                    "description": "Card number of the payer",
                    "example": "4731195301524634",
                    "examples": [
                      "4731195301524634"
                    ]
                  },
                  "card_cvv": {
                    "type": "string",
                    "description": "CVV/CVV2",
                    "example": "111",
                    "examples": [
                      "111"
                    ]
                  },
                  "card_exp_month": {
                    "type": "string",
                    "description": "Expiry month of the payer's card",
                    "example": "08",
                    "examples": [
                      "08",
                      "03"
                    ]
                  },
                  "card_exp_year": {
                    "type": "string",
                    "description": "Expiry year of the payer's card",
                    "example": "19",
                    "examples": [
                      "19",
                      "22"
                    ]
                  },
                  "currency": {
                    "type": "string",
                    "enum": [
                      "USD",
                      "EUR",
                      "UAH"
                    ],
                    "description": "Payment currency",
                    "example": "USD",
                    "examples": [
                      "USD"
                    ]
                  },
                  "description": {
                    "type": "string",
                    "description": "Payment description",
                    "example": "description text",
                    "examples": [
                      "description text"
                    ]
                  },
                  "ip": {
                    "type": "string",
                    "description": "Client IP"
                  },
                  "order_id": {
                    "type": "string",
                    "maxLength": 255,
                    "description": "Unique purchase ID in your shop",
                    "example": "order_id_1",
                    "examples": [
                      "order_id_1"
                    ]
                  },
                  "phone": {
                    "type": "string",
                    "description": "Payer's phone number. The OTP-password will be sent to this telephone number to confirm your payment, and the linked payer's LiqPay cabinet. The telephone number should be indicated in the international format (Ukraine `+380`)",
                    "example": "+380950000001",
                    "examples": [
                      "+380950000001",
                      "380950000001"
                    ]
                  },
                  "language": {
                    "type": "string",
                    "enum": [
                      "uk",
                      "en"
                    ],
                    "default": "uk",
                    "description": "Customer's language"
                  },
                  "prepare": {
                    "type": "string",
                    "format": "boolean-integer",
                    "enum": [
                      "1"
                    ],
                    "default": "1",
                    "description": "The preliminary preparation of the payment. This mode allows you to determine whether all data is complete, whether 3DS is required to check the card, whether the limit is exceeded. The funds are not debited from the payer's card. To activate the mode, you need to transfer the value of `1`"
                  },
                  "recurringbytoken": {
                    "type": "string",
                    "format": "boolean-integer",
                    "enum": [
                      "1"
                    ],
                    "default": "1",
                    "description": "This parameter allows to generate payer `card_token` which you receive in callback request to `server_url`. `card_token` allows to make recurring payments without payer card requisites using API [paytoken](https://www.liqpay.ua/en/doc/api/internet_acquiring/token). To receive `card_token` please send in request value `1`"
                  },
                  "recurring": {
                    "type": "boolean",
                    "description": "Token recurring payment flag. Used for payments with tokens of international payment systems (MasterCard, Visa). Possible values:\n* `true` - the operation is performed without the participation of the client\n* `false` - the operation is performed by the client"
                  },
                  "server_url": {
                    "type": "string",
                    "format": "uri",
                    "maxLength": 510,
                    "description": "URL API in your store for notifications of payment status change (`server` -> `server`). [Learn more](https://www.liqpay.ua/en/doc/api/callback)"
                  },
                  "regular_payment": {
                    "type": "object",
                    "properties": {
                      "subscribe": {
                        "type": "string",
                        "enum": [
                          "1"
                        ],
                        "default": "1",
                        "description": "Regular payment",
                        "example": "1",
                        "examples": [
                          "1"
                        ]
                      },
                      "subscribe_date_start": {
                        "type": "string",
                        "format": "date-time-liqpay",
                        "description": "Date of the first payment. Time must be specified in the following format `2015-03-31 00:00:00` by `UTC`. If past date is indicated - subscription will be activated with the date and time of request",
                        "example": "2015-03-31 00:00:00",
                        "examples": [
                          "2015-03-31 00:00:00"
                        ]
                      },
                      "subscribe_periodicity": {
                        "type": "string",
                        "enum": [
                          "day",
                          "week",
                          "month",
                          "year"
                        ],
                        "description": "Period of payments. Possible values:\n* `day` - daily\n* `week` - weekly\n* `month` - once in a month\n* `year` - once in a year",
                        "example": "month",
                        "examples": [
                          "month"
                        ]
                      }
                    },
                    "required": [
                      "subscribe_date_start"
                    ],
                    "description": "Regular payment parameters"
                  },
                  "sender": {
                    "type": "object",
                    "properties": {
                      "sender_address": {
                        "type": "string",
                        "description": "Sender's address"
                      },
                      "sender_city": {
                        "type": "string",
                        "description": "Sender's city"
                      },
                      "sender_country_code": {
                        "type": "string",
                        "description": "Country code of the sender. Digital [ISO 3166-1 code](https://en.wikipedia.org/wiki/ISO_3166-1)"
                      },
                      "sender_first_name": {
                        "type": "string",
                        "description": "Sender's first name"
                      },
                      "sender_last_name": {
                        "type": "string",
                        "description": "Sender's last name"
                      },
                      "sender_postal_code": {
                        "type": "string",
                        "description": "Sender's zip code"
                      }
                    },
                    "description": "Sender parameters"
                  },
                  "customer": {
                    "type": "string",
                    "maxLength": 100,
                    "description": "Unique customer ID in your shop"
                  },
                  "dae": {
                    "type": "string",
                    "description": "Detail Addenda.\n\nPossible `JSON` object:\n```\n{\n  \"airLine\": \"Avia\", // airline abbreviation, max 4 symbols.\n  \"ticketNumber\": \"ACSFD12354SA\", // ticket number, max 15 symbols. \n  \"passengerName\": \"John Doe\", // passenger name, max 29 symbols.\n  \"flightNumber\": \"742\", // flight number, max 5 number.\n  \"originCity\": \"DP\", // departure city/airport code, max 5 symbols.\n  \"destinationCity\": \"NY\", // arrival city/airport code, max 5 symbols.\n  \"departureDate\": \"100514\" // departure date in format YYMMDD, max 6 number.\n}\n```"
                  },
                  "info": {
                    "type": "string",
                    "description": "Information to add details to payment",
                    "example": "External information for payments",
                    "examples": [
                      "External information for payments"
                    ]
                  },
                  "product_category": {
                    "type": "string",
                    "maxLength": 25,
                    "description": "Product category in your shop"
                  },
                  "product_description": {
                    "type": "string",
                    "maxLength": 500,
                    "description": "Product description in your shop"
                  },
                  "product_name": {
                    "type": "string",
                    "maxLength": 100,
                    "description": "Product name in your shop"
                  },
                  "product_url": {
                    "type": "string",
                    "format": "uri",
                    "maxLength": 2000,
                    "description": "Product page address"
                  }
                },
                "required": [
                  "version",
                  "public_key",
                  "action",
                  "amount",
                  "card",
                  "card_cvv",
                  "card_exp_month",
                  "card_exp_year",
                  "currency",
                  "description",
                  "ip",
                  "order_id",
                  "phone"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "acq_id": {
                      "type": "number",
                      "description": "Acquirer ID",
                      "example": 414963,
                      "examples": [
                        414963
                      ]
                    },
                    "action": {
                      "type": "string",
                      "enum": [
                        "pay",
                        "hold",
                        "paysplit",
                        "subscribe",
                        "paydonate",
                        "auth",
                        "regular"
                      ],
                      "description": "Transaction type. Possible values:\n* `pay` - payment\n* `hold` - amount of hold on sender's account\n* `paysplit` - splitting payments\n* `subscribe` - creation of a regular payment\n* `paydonate` - donation\n* `auth` - card preauth\n* `regular` - regular payment",
                      "example": "subscribe",
                      "examples": [
                        "subscribe"
                      ]
                    },
                    "agent_commission": {
                      "type": "number",
                      "description": "Agent comission in payment currency",
                      "example": 0.0,
                      "examples": [
                        0.0
                      ]
                    },
                    "amount": {
                      "type": "number",
                      "description": "Payment amount",
                      "example": 0.02,
                      "examples": [
                        0.02
                      ]
                    },
                    "amount_bonus": {
                      "type": "number",
                      "description": "Payer bonus amount in payment currency debit",
                      "example": 0.0,
                      "examples": [
                        0.0
                      ]
                    },
                    "amount_credit": {
                      "type": "number",
                      "description": "Payment amount for credit in currency of `currency_credit`",
                      "example": 0.02,
                      "examples": [
                        0.02
                      ]
                    },
                    "amount_debit": {
                      "type": "number",
                      "description": "Payment amount for debit in currency of `currency_debit`",
                      "example": 0.02,
                      "examples": [
                        0.02
                      ]
                    },
                    "card_token": {
                      "type": "string",
                      "description": "Sender's card token",
                      "example": "2DFBFE846B734166230DE81E971E948D6F260",
                      "examples": [
                        "2DFBFE846B734166230DE81E971E948D6F260"
                      ]
                    },
                    "commission_credit": {
                      "type": "number",
                      "description": "Commission from the receiver in `currency_credit`",
                      "example": 0.0,
                      "examples": [
                        0.0
                      ]
                    },
                    "commission_debit": {
                      "type": "number",
                      "description": "Commission from the sender in `currency_debit`",
                      "example": 0.0,
                      "examples": [
                        0.0
                      ]
                    },
                    "create_date": {
                      "type": "integer",
                      "format": "timestamp-ms",
                      "description": "Date of payment creation",
                      "example": 1501680854599,
                      "examples": [
                        1501680854599
                      ]
                    },
                    "currency": {
                      "type": "string",
                      "description": "Payment currency",
                      "example": "UAH",
                      "examples": [
                        "UAH"
                      ]
                    },
                    "currency_credit": {
                      "type": "string",
                      "description": "Transaction currency of credit",
                      "example": "UAH",
                      "examples": [
                        "UAH"
                      ]
                    },
                    "currency_debit": {
                      "type": "string",
                      "description": "Transaction currency of debit",
                      "example": "UAH",
                      "examples": [
                        "UAH"
                      ]
                    },
                    "description": {
                      "type": "string",
                      "description": "Payment description",
                      "example": "description text",
                      "examples": [
                        "description text"
                      ]
                    },
                    "end_date": {
                      "type": "integer",
                      "format": "timestamp-ms",
                      "description": "Date of payment edition/end",
                      "example": 1501680854599,
                      "examples": [
                        1501680854599
                      ]
                    },
                    "is_3ds": {
                      "type": "boolean",
                      "description": "Possible values:\n* `true` - transaction passed with 3DS\n* `false` - transaction passed without 3DS"
                    },
                    "liqpay_order_id": {
                      "type": "string",
                      "description": "Payment order_id in LiqPay system",
                      "example": "NYMK3AE61501685438251925",
                      "examples": [
                        "NYMK3AE61501685438251925"
                      ]
                    },
                    "mpi_eci": {
                      "type": "integer",
                      "enum": [
                        5,
                        6,
                        7
                      ],
                      "description": "Possible values:\n* `5` - the transaction passed with 3DS (issuer and acquirer support 3d Secure technology)\n* `6` - the issuer of the payer card does not support 3d Secure technology\n* `7` - the operation passed without 3d Secure",
                      "example": 7,
                      "examples": [
                        7
                      ]
                    },
                    "order_id": {
                      "type": "string",
                      "description": "Order_id payment",
                      "example": "98R1U1OV1485849059893399",
                      "examples": [
                        "98R1U1OV1485849059893399"
                      ]
                    },
                    "payment_id": {
                      "type": "number",
                      "description": "Payment id in LiqPay system",
                      "example": 165156,
                      "examples": [
                        165156
                      ]
                    },
                    "paytype": {
                      "type": "string",
                      "enum": [
                        "card",
                        "privat24",
                        "moment_part",
                        "cash",
                        "invoice",
                        "qr"
                      ],
                      "description": "Methods of payment. Possible values:\n* `card` - card payment\n* `privat24` - with privat24 account\n* `moment_part` - installments\n* `cash` - cash\n* `invoice` - to email\n* `qr` - qr code scanning",
                      "example": "token",
                      "examples": [
                        "token"
                      ]
                    },
                    "public_key": {
                      "type": "string",
                      "description": "Shop public key",
                      "example": "i000000000",
                      "examples": [
                        "i000000000"
                      ]
                    },
                    "receiver_commission": {
                      "type": "number",
                      "description": "Receiver comission in payment currency",
                      "example": 0.0,
                      "examples": [
                        0.0
                      ]
                    },
                    "sender_bonus": {
                      "type": "number",
                      "description": "Sender's bonus in the payment currency",
                      "example": 0.0,
                      "examples": [
                        0.0
                      ]
                    },
                    "sender_card_bank": {
                      "type": "string",
                      "description": "Sender's card bank",
                      "example": "pb",
                      "examples": [
                        "pb"
                      ]
                    },
                    "sender_card_country": {
                      "type": "string",
                      "description": "Sender's card country. Digital [ISO 3166-1 code](https://en.wikipedia.org/wiki/ISO_3166-1)",
                      "example": 804,
                      "examples": [
                        804
                      ]
                    },
                    "sender_card_mask2": {
                      "type": "string",
                      "description": "Sender's card",
                      "example": "414961*99",
                      "examples": [
                        "414961*99"
                      ]
                    },
                    "sender_card_type": {
                      "type": "string",
                      "description": "Sender's card type MC/Visa",
                      "example": "visa",
                      "examples": [
                        "visa"
                      ]
                    },
                    "sender_commission": {
                      "type": "number",
                      "description": "Commission from the sender in the payment currency",
                      "example": 0.0,
                      "examples": [
                        0.0
                      ]
                    },
                    "sender_phone": {
                      "type": "string",
                      "description": "Sender's phone number",
                      "example": "380950000001",
                      "examples": [
                        "380950000001"
                      ]
                    },
                    "status": {
                      "type": "string",
                      "enum": [
                        "error",
                        "failure",
                        "reversed",
                        "subscribed",
                        "success",
                        "3ds_verify",
                        "cvv_verify",
                        "receiver_verify",
                        "sender_verify",
                        "wait_accept",
                        "wait_secure"
                      ],
                      "description": "Payment status.\nAvailable values:\nFinal payment statuses\n* `error` - Failed payment. Data is incorrect\n* `failure` - Failed payment\n* `reversed` - Payment refunded\n* `subscribed` - Subscribed successfully framed\n* `success` - Successful payment\nStatuses that required payment confirmation\n* `3ds_verify` - 3DS verification is required.\n To finish the payment you will require a [3ds_verify](https://www.liqpay.ua/en/doc/api/confirmation/3ds)\n* `cvv_verify` - Sender's card CVV is required. To finish the payment you will require a [cvv_verify](https://www.liqpay.ua/en/doc/api/confirmation/CVV)\n`otp_verify` OTP confirmation is required. OTP is sent to a customer phone number.\n To finish the payment you will require a [otp_verify](https://www.liqpay.ua/en/doc/api/confirmation/OTP)\n* `receiver_verify` - Receiver additional data is required. To finish the payment you will require a [receiver_verify](https://www.liqpay.ua/en/doc/api/confirmation/receiver_verify)\n* `sender_verify` - Sender's additional data is required.\n To finish the payment you will require a [sender_verify](https://www.liqpay.ua/en/doc/api/confirmation/sender_verify)\nOther payment statuses\n* `wait_accept` - Money are withdrawn from client but the store is still not verified. If the store is not activated for 60 days, payment will be automatically cancelled\n* `wait_secure` - Payment is verified",
                      "example": "subscribed",
                      "examples": [
                        "subscribed"
                      ]
                    },
                    "transaction_id": {
                      "type": "number",
                      "description": "Id transactions in the LiqPay system",
                      "example": 165156,
                      "examples": [
                        165156
                      ]
                    },
                    "version": {
                      "type": "integer",
                      "enum": [
                        3
                      ],
                      "default": 3,
                      "description": "Version API",
                      "example": 3,
                      "examples": [
                        3
                      ]
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/request?path=internet_acquiring.subscription.unsubscribe": {
      "post": {
        "summary": "Internet acquiring. Subscription. Unsubscribe",
        "operationId": "internet_acquiring/subscription/unsubscribe",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "version": {
                    "type": "integer",
                    "enum": [
                      3
                    ],
                    "default": 3,
                    "description": "Version API",
                    "example": 3,
                    "examples": [
                      3
                    ]
                  },
                  "public_key": {
                    "type": "string",
                    "description": "Public key - the store identifier. You can get the key in the [store settings](https://www.liqpay.ua/en/adminbusiness)"
                  },
                  "action": {
                    "type": "string",
                    "enum": [
                      "unsubscribe"
                    ],
                    "default": "unsubscribe",
                    "example": "unsubscribe",
                    "examples": [
                      "unsubscribe"
                    ]
                  },
                  "order_id": {
                    "type": "string",
                    "maxLength": 255,
                    "description": "Unique purchase ID in your shop",
                    "example": "order_id_1",
                    "examples": [
                      "order_id_1"
                    ]
                  }
                },
                "required": [
                  "version",
                  "public_key",
                  "action",
                  "order_id"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "acq_id": {
                      "type": "number",
                      "description": "Acquirer ID",
                      "example": 414963,
                      "examples": [
                        414963
                      ]
                    },
                    "action": {
                      "type": "string",
                      "enum": [
                        "pay",
                        "hold",
                        "paysplit",
                        "subscribe",
                        "paydonate",
                        "auth",
                        "regular"
                      ],
                      "description": "Transaction type. Possible values:\n* `pay` - payment\n* `hold` - amount of hold on sender's account\n* `paysplit` - splitting payments\n* `subscribe` - creation of a regular payment\n* `paydonate` - donation\n* `auth` - card preauth\n* `regular` - regular payment",
                      "example": "subscribe",
                      "examples": [
                        "subscribe"
                      ]
                    },
                    "agent_commission": {
                      "type": "number",
                      "description": "Agent comission in payment currency",
                      "example": 0.0,
                      "examples": [
                        0.0
                      ]
                    },
                    "amount": {
                      "type": "number",
                      "description": "Payment amount",
                      "example": 0.02,
                      "examples": [
                        0.02
                      ]
                    },
                    "amount_bonus": {
                      "type": "number",
                      "description": "Payer bonus amount in payment currency debit",
                      "example": 0.0,
                      "examples": [
                        0.0
                      ]
                    },
                    "amount_credit": {
                      "type": "number",
                      "description": "Payment amount for credit in currency of `currency_credit`",
                      "example": 0.02,
                      "examples": [
                        0.02
                      ]
                    },
                    "amount_debit": {
                      "type": "number",
                      "description": "Payment amount for debit in currency of `currency_debit`",
                      "example": 0.02,
                      "examples": [
                        0.02
                      ]
                    },
                    "card_token": {
                      "type": "string",
                      "description": "Sender's card token",
                      "example": "2DFBFE626B730006230DE81E971E6588D6F260",
                      "examples": [
                        "2DFBFE626B730006230DE81E971E6588D6F260"
                      ]
                    },
                    "commission_credit": {
                      "type": "number",
                      "description": "Commission from the receiver in `currency_credit`",
                      "example": 0.0,
                      "examples": [
                        0.0
                      ]
                    },
                    "commission_debit": {
                      "type": "number",
                      "description": "Commission from the sender in `currency_debit`",
                      "example": 0.0,
                      "examples": [
                        0.0
                      ]
                    },
                    "create_date": {
                      "type": "integer",
                      "format": "timestamp-ms",
                      "description": "Date of payment creation",
                      "example": 1501680852705,
                      "examples": [
                        1501680852705
                      ]
                    },
                    "currency": {
                      "type": "string",
                      "description": "Payment currency",
                      "example": "UAH",
                      "examples": [
                        "UAH"
                      ]
                    },
                    "currency_credit": {
                      "type": "string",
                      "description": "Transaction currency of credit",
                      "example": "UAH",
                      "examples": [
                        "UAH"
                      ]
                    },
                    "currency_debit": {
                      "type": "string",
                      "description": "Transaction currency of debit",
                      "example": "UAH",
                      "examples": [
                        "UAH"
                      ]
                    },
                    "description": {
                      "type": "string",
                      "description": "Payment description",
                      "example": "description text",
                      "examples": [
                        "description text"
                      ]
                    },
                    "end_date": {
                      "type": "integer",
                      "format": "timestamp-ms",
                      "description": "Date of payment edition/end",
                      "example": 1501681041689,
                      "examples": [
                        1501681041689
                      ]
                    },
                    "is_3ds": {
                      "type": "boolean",
                      "description": "Possible values:\n* `true` - transaction passed with 3DS\n* `false` - transaction passed without 3DS"
                    },
                    "liqpay_order_id": {
                      "type": "string",
                      "description": "Payment order_id in LiqPay system",
                      "example": "NYMK3AE61501685448251925",
                      "examples": [
                        "NYMK3AE61501685448251925"
                      ]
                    },
                    "mpi_eci": {
                      "type": "integer",
                      "enum": [
                        5,
                        6,
                        7
                      ],
                      "description": "Possible values:\n* `5` - the transaction passed with 3DS (issuer and acquirer support 3d Secure technology)\n* `6` - the issuer of the payer card does not support 3d Secure technology\n* `7` - the operation passed without 3d Secure",
                      "example": 7,
                      "examples": [
                        7
                      ]
                    },
                    "order_id": {
                      "type": "string",
                      "description": "Order_id payment",
                      "example": "98R1U1OV1400849059893399",
                      "examples": [
                        "98R1U1OV1400849059893399"
                      ]
                    },
                    "payment_id": {
                      "type": "number",
                      "description": "Payment id in LiqPay system",
                      "example": 165156,
                      "examples": [
                        165156
                      ]
                    },
                    "paytype": {
                      "type": "string",
                      "enum": [
                        "card",
                        "privat24",
                        "moment_part",
                        "cash",
                        "invoice",
                        "qr"
                      ],
                      "description": "Methods of payment. Possible values:\n* `card` - card payment\n* `privat24` - with privat24 account\n* `moment_part` - installments\n* `cash` - cash\n* `invoice` - to email\n* `qr` - qr code scanning",
                      "example": "token",
                      "examples": [
                        "token"
                      ]
                    },
                    "public_key": {
                      "type": "string",
                      "description": "Shop public key",
                      "example": "i000000000",
                      "examples": [
                        "i000000000"
                      ]
                    },
                    "receiver_commission": {
                      "type": "number",
                      "description": "Receiver comission in payment currency",
                      "example": 0.0,
                      "examples": [
                        0.0
                      ]
                    },
                    "sender_bonus": {
                      "type": "number",
                      "description": "Sender's bonus in the payment currency",
                      "example": 0.0,
                      "examples": [
                        0.0
                      ]
                    },
                    "sender_card_bank": {
                      "type": "string",
                      "description": "Sender's card bank",
                      "example": "pb",
                      "examples": [
                        "pb"
                      ]
                    },
                    "sender_card_country": {
                      "type": "string",
                      "description": "Sender's card country. Digital [ISO 3166-1 code](https://en.wikipedia.org/wiki/ISO_3166-1)",
                      "example": 804,
                      "examples": [
                        804
                      ]
                    },
                    "sender_card_mask2": {
                      "type": "string",
                      "description": "Sender's card",
                      "example": "414961*99",
                      "examples": [
                        "414961*99"
                      ]
                    },
                    "sender_card_type": {
                      "type": "string",
                      "description": "Sender's card type MC/Visa",
                      "example": "visa",
                      "examples": [
                        "visa"
                      ]
                    },
                    "sender_commission": {
                      "type": "number",
                      "description": "Commission from the sender in the payment currency",
                      "example": 0.0,
                      "examples": [
                        0.0
                      ]
                    },
                    "sender_phone": {
                      "type": "string",
                      "description": "Sender's phone number",
                      "example": "380950000001",
                      "examples": [
                        "380950000001"
                      ]
                    },
                    "status": {
                      "type": "string",
                      "enum": [
                        "error",
                        "failure",
                        "success",
                        "unsubscribed"
                      ],
                      "description": "Payment status.\nAvailable values:\nFinal payment statuses\n* `error` - Failed payment. Data is incorrect\n* `failure` - Failed payment\n* `success` - Successful payment\n* `unsubscribed` - Subscribed successfully deactivated",
                      "example": "unsubscribed",
                      "examples": [
                        "unsubscribed"
                      ]
                    },
                    "transaction_id": {
                      "type": "number",
                      "description": "Id transactions in the LiqPay system",
                      "example": 165156,
                      "examples": [
                        165156
                      ]
                    },
                    "version": {
                      "type": "integer",
                      "enum": [
                        3
                      ],
                      "default": 3,
                      "description": "Version API",
                      "example": 3,
                      "examples": [
                        3
                      ]
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/request?path=internet_acquiring.subscription.edit": {
      "post": {
        "summary": "Internet acquiring. Subscription. Edit subscribtion",
        "operationId": "internet_acquiring/subscription/edit",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "version": {
                    "type": "integer",
                    "enum": [
                      3
                    ],
                    "default": 3,
                    "description": "Version API",
                    "example": 3,
                    "examples": [
                      3
                    ]
                  },
                  "public_key": {
                    "type": "string",
                    "description": "Public key - the store identifier. You can get the key in the [store settings](https://www.liqpay.ua/en/adminbusiness)"
                  },
                  "action": {
                    "type": "string",
                    "enum": [
                      "subscribe_update"
                    ],
                    "default": "subscribe_update",
                    "example": "subscribe_update",
                    "examples": [
                      "subscribe_update"
                    ]
                  },
                  "amount": {
                    "type": "number",
                    "description": "Payment amount",
                    "example": 5.0,
                    "examples": [
                      5.0,
                      7.34,
                      1.0
                    ]
                  },
                  "currency": {
                    "type": "string",
                    "enum": [
                      "USD",
                      "EUR",
                      "UAH"
                    ],
                    "description": "Payment currency",
                    "example": "USD",
                    "examples": [
                      "USD"
                    ]
                  },
                  "description": {
                    "type": "string",
                    "description": "Payment description",
                    "example": "description text",
                    "examples": [
                      "description text"
                    ]
                  },
                  "order_id": {
                    "type": "string",
                    "maxLength": 255,
                    "description": "Unique purchase ID in your shop",
                    "example": "order_id_1",
                    "examples": [
                      "order_id_1"
                    ]
                  }
                },
                "required": [
                  "version",
                  "public_key",
                  "action",
                  "amount",
                  "currency",
                  "description",
                  "order_id"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "acq_id": {
                      "type": "number",
                      "description": "Acquirer ID",
                      "example": 414963,
                      "examples": [
                        414963
                      ]
                    },
                    "action": {
                      "type": "string",
                      "enum": [
                        "pay",
                        "hold",
                        "paysplit",
                        "subscribe",
                        "paydonate",
                        "auth",
                        "regular"
                      ],
                      "description": "Transaction type. Possible values:\n* `pay` - payment\n* `hold` - amount of hold on sender's account\n* `paysplit` - splitting payments\n* `subscribe` - creation of a regular payment\n* `paydonate` - donation\n* `auth` - card preauth\n* `regular` - regular payment",
                      "example": "subscribe",
                      "examples": [
                        "subscribe"
                      ]
                    },
                    "agent_commission": {
                      "type": "number",
                      "description": "Agent comission in payment currency",
                      "example": 0.0,
                      "examples": [
                        0.0
                      ]
                    },
                    "amount": {
                      "type": "number",
                      "description": "Payment amount",
                      "example": 0.02,
                      "examples": [
                        0.02
                      ]
                    },
                    "amount_bonus": {
                      "type": "number",
                      "description": "Payer bonus amount in payment currency debit",
                      "example": 0.0,
                      "examples": [
                        0.0
                      ]
                    },
                    "amount_credit": {
                      "type": "number",
                      "description": "Payment amount for credit in currency of `currency_credit`",
                      "example": 0.02,
                      "examples": [
                        0.02
                      ]
                    },
                    "amount_debit": {
                      "type": "number",
                      "description": "Payment amount for debit in currency of `currency_debit`",
                      "example": 0.02,
                      "examples": [
                        0.02
                      ]
                    },
                    "card_token": {
                      "type": "string",
                      "description": "Sender's card token",
                      "example": "2DFBFE846B734166230DE81E971E948D6F260",
                      "examples": [
                        "2DFBFE846B734166230DE81E971E948D6F260"
                      ]
                    },
                    "commission_credit": {
                      "type": "number",
                      "description": "Commission from the receiver in `currency_credit`",
                      "example": 0.0,
                      "examples": [
                        0.0
                      ]
                    },
                    "commission_debit": {
                      "type": "number",
                      "description": "Commission from the sender in `currency_debit`",
                      "example": 0.0,
                      "examples": [
                        0.0
                      ]
                    },
                    "create_date": {
                      "type": "integer",
                      "format": "timestamp-ms",
                      "description": "Date of payment creation",
                      "example": 1501680854599,
                      "examples": [
                        1501680854599
                      ]
                    },
                    "currency": {
                      "type": "string",
                      "description": "Payment currency",
                      "example": "UAH",
                      "examples": [
                        "UAH"
                      ]
                    },
                    "currency_credit": {
                      "type": "string",
                      "description": "Transaction currency of credit",
                      "example": "UAH",
                      "examples": [
                        "UAH"
                      ]
                    },
                    "currency_debit": {
                      "type": "string",
                      "description": "Transaction currency of debit",
                      "example": "UAH",
                      "examples": [
                        "UAH"
                      ]
                    },
                    "description": {
                      "type": "string",
                      "description": "Payment description",
                      "example": "description text",
                      "examples": [
                        "description text"
                      ]
                    },
                    "end_date": {
                      "type": "integer",
                      "format": "timestamp-ms",
                      "description": "Date of payment edition/end",
                      "example": 1501680854599,
                      "examples": [
                        1501680854599
                      ]
                    },
                    "is_3ds": {
                      "type": "boolean",
                      "description": "Possible values:\n* `true` - transaction passed with 3DS\n* `false` - transaction passed without 3DS"
                    },
                    "liqpay_order_id": {
                      "type": "string",
                      "description": "Payment order_id in LiqPay system",
                      "example": "NYMK3AE61501685438251925",
                      "examples": [
                        "NYMK3AE61501685438251925"
                      ]
                    },
                    "mpi_eci": {
                      "type": "integer",
                      "enum": [
                        5,
                        6,
                        7
                      ],
                      "description": "Possible values:\n* `5` - the transaction passed with 3DS (issuer and acquirer support 3d Secure technology)\n* `6` - the issuer of the payer card does not support 3d Secure technology\n* `7` - the operation passed without 3d Secure",
                      "example": 7,
                      "examples": [
                        7
                      ]
                    },
                    "order_id": {
                      "type": "string",
                      "description": "Order_id payment",
                      "example": "98R1U1OV1485849059893399",
                      "examples": [
                        "98R1U1OV1485849059893399"
                      ]
                    },
                    "payment_id": {
                      "type": "number",
                      "description": "Payment id in LiqPay system",
                      "example": 165156,
                      "examples": [
                        165156
                      ]
                    },
                    "paytype": {
                      "type": "string",
                      "enum": [
                        "card",
                        "privat24",
                        "moment_part",
                        "cash",
                        "invoice",
                        "qr"
                      ],
                      "description": "Methods of payment. Possible values:\n* `card` - card payment\n* `privat24` - with privat24 account\n* `moment_part` - installments\n* `cash` - cash\n* `invoice` - to email\n* `qr` - qr code scanning",
                      "example": "token",
                      "examples": [
                        "token"
                      ]
                    },
                    "public_key": {
                      "type": "string",
                      "description": "Shop public key",
                      "example": "i000000000",
                      "examples": [
                        "i000000000"
                      ]
                    },
                    "receiver_commission": {
                      "type": "number",
                      "description": "Receiver comission in payment currency",
                      "example": 0.0,
                      "examples": [
                        0.0
                      ]
                    },
                    "sender_bonus": {
                      "type": "number",
                      "description": "Sender's bonus in the payment currency",
                      "example": 0.0,
                      "examples": [
                        0.0
                      ]
                    },
                    "sender_card_bank": {
                      "type": "string",
                      "description": "Sender's card bank",
                      "example": "pb",
                      "examples": [
                        "pb"
                      ]
                    },
                    "sender_card_country": {
                      "type": "string",
                      "description": "Sender's card country. Digital [ISO 3166-1 code](https://en.wikipedia.org/wiki/ISO_3166-1)",
                      "example": 804,
                      "examples": [
                        804
                      ]
                    },
                    "sender_card_mask2": {
                      "type": "string",
                      "description": "Sender's card",
                      "example": "414961*99",
                      "examples": [
                        "414961*99"
                      ]
                    },
                    "sender_card_type": {
                      "type": "string",
                      "description": "Sender's card type MC/Visa",
                      "example": "visa",
                      "examples": [
                        "visa"
                      ]
                    },
                    "sender_commission": {
                      "type": "number",
                      "description": "Commission from the sender in the payment currency",
                      "example": 0.0,
                      "examples": [
                        0.0
                      ]
                    },
                    "sender_phone": {
                      "type": "string",
                      "description": "Sender's phone number",
                      "example": "380950000001",
                      "examples": [
                        "380950000001"
                      ]
                    },
                    "status": {
                      "type": "string",
                      "enum": [
                        "error",
                        "failure",
                        "reversed",
                        "subscribed",
                        "success"
                      ],
                      "description": "Payment status.\nAvailable values:\nFinal payment statuses\n* `error` - Failed payment. Data is incorrect\n* `failure` - Failed payment\n* `reversed` - Payment refunded\n* `subscribed` - Subscribed successfully framed\n* `success` - Successful payment",
                      "example": "subscribed",
                      "examples": [
                        "subscribed"
                      ]
                    },
                    "transaction_id": {
                      "type": "number",
                      "description": "Id transactions in the LiqPay system",
                      "example": 165156,
                      "examples": [
                        165156
                      ]
                    },
                    "version": {
                      "type": "integer",
                      "enum": [
                        3
                      ],
                      "default": 3,
                      "description": "Version API",
                      "example": 3,
                      "examples": [
                        3
                      ]
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/request?path=internet_acquiring.qr": {
      "post": {
        "summary": "Internet acquiring. QR-code payment",
        "operationId": "internet_acquiring/qr",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "version": {
                    "type": "integer",
                    "enum": [
                      3
                    ],
                    "default": 3,
                    "description": "Version API",
                    "example": 3,
                    "examples": [
                      3
                    ]
                  },
                  "public_key": {
                    "type": "string",
                    "description": "Public key - the store identifier. You can get the key in the [store settings](https://www.liqpay.ua/en/adminbusiness)"
                  },
                  "action": {
                    "type": "string",
                    "enum": [
                      "payqr"
                    ],
                    "default": "payqr",
                    "example": "payqr",
                    "examples": [
                      "payqr"
                    ]
                  },
                  "amount": {
                    "type": "number",
                    "description": "Payment amount",
                    "example": 5.0,
                    "examples": [
                      5.0,
                      7.34,
                      1.0
                    ]
                  },
                  "currency": {
                    "type": "string",
                    "enum": [
                      "USD",
                      "EUR",
                      "UAH"
                    ],
                    "description": "Payment currency",
                    "example": "USD",
                    "examples": [
                      "USD"
                    ]
                  },
                  "description": {
                    "type": "string",
                    "description": "Payment description",
                    "example": "description text",
                    "examples": [
                      "description text"
                    ]
                  },
                  "ip": {
                    "type": "string",
                    "description": "Client IP"
                  },
                  "order_id": {
                    "type": "string",
                    "maxLength": 255,
                    "description": "Unique purchase ID in your shop",
                    "example": "order_id_1",
                    "examples": [
                      "order_id_1"
                    ]
                  },
                  "language": {
                    "type": "string",
                    "enum": [
                      "uk",
                      "en"
                    ],
                    "default": "uk",
                    "description": "Customer's language"
                  },
                  "prepare": {
                    "type": "string",
                    "format": "boolean-integer",
                    "enum": [
                      "1"
                    ],
                    "default": "1",
                    "description": "The preliminary preparation of the payment. This mode allows to check if all data are filled in, if 3DS authentication is required, if transaction is within limit. Payer card will not be charged. To enable this mode you will need to transmit value `1`"
                  },
                  "recurringbytoken": {
                    "type": "string",
                    "format": "boolean-integer",
                    "enum": [
                      "1"
                    ],
                    "default": "1",
                    "description": "This parameter allows to generate payer `card_token` which you receive in callback request to `server_url`. `card_token` allows to make recurring payments without payer card requisites using API [paytoken](https://www.liqpay.ua/en/doc/api/internet_acquiring/token). To receive `card_token` please send in request value `1`"
                  },
                  "server_url": {
                    "type": "string",
                    "format": "uri",
                    "maxLength": 510,
                    "description": "URL API in your store for notifications of payment status change (`server` -> `server`). [Learn more](https://www.liqpay.ua/en/doc/api/callback)"
                  },
                  "split_rules": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "public_key": {
                          "type": "string",
                          "description": "Public key - the store identifier",
                          "example": "i000000001",
                          "examples": [
                            "i000000001",
                            "i000000002"
                          ]
                        },
                        "amount": {
                          "type": "number",
                          "description": "Payment amount",
                          "example": 1,
                          "examples": [
                            1,
                            2
                          ]
                        },
                        "commission_payer": {
                          "type": "string",
                          "enum": [
                            "sender",
                            "receiver"
                          ],
                          "default": "sender",
                          "description": "Commission payer",
                          "example": "sender",
                          "examples": [
                            "sender",
                            "receiver"
                          ]
                        },
                        "server_url": {
                          "type": "string",
                          "format": "uri",
                          "maxLength": 510,
                          "description": "URL API in your store for notifications of payment status change (`server` -> `server`)",
                          "example": "https://server1/callback",
                          "examples": [
                            "https://server1/callback",
                            "https://server2/callback"
                          ]
                        },
                        "description": {
                          "type": "string",
                          "description": "Payment description"
                        }
                      },
                      "required": [
                        "amount"
                      ]
                    },
                    "description": "Payment with split amount for a few receivers. This parameter is a `JSON` array containing split rules. While using `split_rules` parameter, card is being charged and amount is split and credited to a few receivers. If you need to convey your purpose for each amount use the parameter `description`. Acquiring fee is being charged from each shop in the `split_rules`"
                  },
                  "customer": {
                    "type": "string",
                    "maxLength": 100,
                    "description": "Unique customer ID in your shop"
                  },
                  "dae": {
                    "type": "string",
                    "description": "Detail Addenda.\n\nPossible `JSON` object:\n```\n{\n  \"airLine\": \"Avia\", // airline abbreviation, max 4 symbols.\n  \"ticketNumber\": \"ACSFD12354SA\", // ticket number, max 15 symbols. \n  \"passengerName\": \"John Doe\", // passenger name, max 29 symbols.\n  \"flightNumber\": \"742\", // flight number, max 5 number.\n  \"originCity\": \"DP\", // departure city/airport code, max 5 symbols.\n  \"destinationCity\": \"NY\", // arrival city/airport code, max 5 symbols.\n  \"departureDate\": \"100514\" // departure date in format YYMMDD, max 6 number.\n}\n```"
                  },
                  "info": {
                    "type": "string",
                    "description": "Information to add details to payment",
                    "example": "External information for payments",
                    "examples": [
                      "External information for payments"
                    ]
                  },
                  "product_category": {
                    "type": "string",
                    "maxLength": 25,
                    "description": "Product category in your shop"
                  },
                  "product_description": {
                    "type": "string",
                    "maxLength": 500,
                    "description": "Product description in your shop"
                  },
                  "product_name": {
                    "type": "string",
                    "maxLength": 100,
                    "description": "Product name in your shop"
                  },
                  "product_url": {
                    "type": "string",
                    "format": "uri",
                    "maxLength": 2000,
                    "description": "Product page address"
                  }
                },
                "required": [
                  "version",
                  "public_key",
                  "action",
                  "amount",
                  "currency",
                  "description",
                  "ip",
                  "order_id"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "acq_id": {
                      "type": "number",
                      "description": "Acquirer ID",
                      "example": 414963,
                      "examples": [
                        414963
                      ]
                    },
                    "action": {
                      "type": "string",
                      "enum": [
                        "pay",
                        "hold",
                        "paysplit",
                        "subscribe",
                        "paydonate",
                        "auth",
                        "regular"
                      ],
                      "description": "Transaction type. Possible values:\n* `pay` - payment\n* `hold` - amount of hold on sender's account\n* `paysplit` - splitting payments\n* `subscribe` - creation of a regular payment\n* `paydonate` - donation\n* `auth` - card preauth\n* `regular` - regular payment",
                      "example": "payqr",
                      "examples": [
                        "payqr"
                      ]
                    },
                    "agent_commission": {
                      "type": "number",
                      "description": "Agent comission in payment currency",
                      "example": 0.0,
                      "examples": [
                        0.0
                      ]
                    },
                    "amount": {
                      "type": "number",
                      "description": "Payment amount",
                      "example": 0.02,
                      "examples": [
                        0.02
                      ]
                    },
                    "amount_bonus": {
                      "type": "number",
                      "description": "Payer bonus amount in payment currency debit",
                      "example": 0.0,
                      "examples": [
                        0.0
                      ]
                    },
                    "amount_credit": {
                      "type": "number",
                      "description": "Payment amount for credit in currency of `currency_credit`",
                      "example": 0.02,
                      "examples": [
                        0.02
                      ]
                    },
                    "amount_debit": {
                      "type": "number",
                      "description": "Payment amount for debit in currency of `currency_debit`",
                      "example": 0.02,
                      "examples": [
                        0.02
                      ]
                    },
                    "commission_credit": {
                      "type": "number",
                      "description": "Commission from the receiver in `currency_credit`",
                      "example": 0.0,
                      "examples": [
                        0.0
                      ]
                    },
                    "commission_debit": {
                      "type": "number",
                      "description": "Commission from the sender in `currency_debit`",
                      "example": 0.0,
                      "examples": [
                        0.0
                      ]
                    },
                    "currency": {
                      "type": "string",
                      "description": "Payment currency",
                      "example": "UAH",
                      "examples": [
                        "UAH"
                      ]
                    },
                    "currency_credit": {
                      "type": "string",
                      "description": "Transaction currency of credit",
                      "example": "UAH",
                      "examples": [
                        "UAH"
                      ]
                    },
                    "currency_debit": {
                      "type": "string",
                      "description": "Transaction currency of debit",
                      "example": "UAH",
                      "examples": [
                        "UAH"
                      ]
                    },
                    "description": {
                      "type": "string",
                      "description": "Payment description",
                      "example": "description",
                      "examples": [
                        "description"
                      ]
                    },
                    "end_date": {
                      "type": "integer",
                      "format": "timestamp-ms",
                      "description": "Date of payment edition/end"
                    },
                    "ip": {
                      "type": "string",
                      "description": "Sender's IP address"
                    },
                    "is_3ds": {
                      "type": "boolean",
                      "description": "Possible values:\n* `true` - transaction passed with 3DS\n* `false` - transaction passed without 3DS"
                    },
                    "liqpay_order_id": {
                      "type": "string",
                      "description": "Payment order_id in LiqPay system",
                      "example": "NYMK3AE61501685438251925",
                      "examples": [
                        "NYMK3AE61501685438251925"
                      ]
                    },
                    "mpi_eci": {
                      "type": "integer",
                      "enum": [
                        5,
                        6,
                        7
                      ],
                      "description": "Possible values:\n* `5` - the transaction passed with 3DS (issuer and acquirer support 3d Secure technology)\n* `6` - the issuer of the payer card does not support 3d Secure technology\n* `7` - the operation passed without 3d Secure",
                      "example": 7,
                      "examples": [
                        7
                      ]
                    },
                    "order_id": {
                      "type": "string",
                      "description": "Order_id payment",
                      "example": "98R1U1OV1485849059893399",
                      "examples": [
                        "98R1U1OV1485849059893399"
                      ]
                    },
                    "payment_id": {
                      "type": "number",
                      "description": "Payment id in LiqPay system",
                      "example": 165164,
                      "examples": [
                        165164
                      ]
                    },
                    "public_key": {
                      "type": "string",
                      "description": "Shop public key",
                      "example": "i000000000",
                      "examples": [
                        "i000000000"
                      ]
                    },
                    "qr_code": {
                      "type": "string",
                      "description": "QR-code for customer to make a payment",
                      "example": "lp_qr:pay:nC4O1DG2nUsMI44Zh80utdjYvw",
                      "examples": [
                        "lp_qr:pay:nC4O1DG2nUsMI44Zh80utdjYvw"
                      ]
                    },
                    "receiver_commission": {
                      "type": "number",
                      "description": "Receiver comission in payment currency",
                      "example": 0.0,
                      "examples": [
                        0.0
                      ]
                    },
                    "sender_bonus": {
                      "type": "number",
                      "description": "Sender's bonus in the payment currency",
                      "example": 0.0,
                      "examples": [
                        0.0
                      ]
                    },
                    "sender_commission": {
                      "type": "number",
                      "description": "Commission from the sender in the payment currency",
                      "example": 0.0,
                      "examples": [
                        0.0
                      ]
                    },
                    "status": {
                      "type": "string",
                      "enum": [
                        "error",
                        "failure",
                        "success",
                        "wait_qr"
                      ],
                      "description": "Payment status.\nAvailable values:\nFinal payment statuses\n* `error` - Failed payment. Data is incorrect\n* `failure` - Failed payment\n* `success` - Successful payment\nStatuses that required payment confirmation\n* `wait_qr` - Waiting for customer to scan QR-code",
                      "example": "wait_qr",
                      "examples": [
                        "wait_qr"
                      ]
                    },
                    "transaction_id": {
                      "type": "number",
                      "description": "Id transactions in the LiqPay system",
                      "example": 165164,
                      "examples": [
                        165164
                      ]
                    },
                    "type": {
                      "type": "string",
                      "description": "Payment type",
                      "example": "buy",
                      "examples": [
                        "buy"
                      ]
                    },
                    "version": {
                      "type": "integer",
                      "enum": [
                        3
                      ],
                      "default": 3,
                      "description": "Version API",
                      "example": 3,
                      "examples": [
                        3
                      ]
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/request?path=internet_acquiring.token": {
      "post": {
        "summary": "Internet acquiring. Token payment",
        "operationId": "internet_acquiring/token",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "version": {
                    "type": "integer",
                    "enum": [
                      3
                    ],
                    "default": 3,
                    "description": "Version API",
                    "example": 3,
                    "examples": [
                      3
                    ]
                  },
                  "public_key": {
                    "type": "string",
                    "description": "Public key - the store identifier. You can get the key in the [store settings](https://www.liqpay.ua/en/adminbusiness)"
                  },
                  "action": {
                    "type": "string",
                    "enum": [
                      "paytoken"
                    ],
                    "default": "paytoken",
                    "example": "paytoken",
                    "examples": [
                      "paytoken"
                    ]
                  },
                  "amount": {
                    "type": "number",
                    "description": "Payment amount",
                    "example": 5.0,
                    "examples": [
                      5.0,
                      7.34,
                      1.0
                    ]
                  },
                  "card_token": {
                    "type": "string",
                    "description": "Sender's [card token](https://www.liqpay.ua/en/methods/token_pay). You don't need to transmit card data, when using a token",
                    "example": "B5BВB0D00B88B00ED00A00D0D",
                    "examples": [
                      "B5BВB0D00B88B00ED00A00D0D"
                    ]
                  },
                  "currency": {
                    "type": "string",
                    "enum": [
                      "USD",
                      "EUR",
                      "UAH"
                    ],
                    "description": "Payment currency",
                    "example": "USD",
                    "examples": [
                      "USD"
                    ]
                  },
                  "description": {
                    "type": "string",
                    "description": "Payment description",
                    "example": "description text",
                    "examples": [
                      "description text"
                    ]
                  },
                  "ip": {
                    "type": "string",
                    "description": "Client IP"
                  },
                  "order_id": {
                    "type": "string",
                    "maxLength": 255,
                    "description": "Unique purchase ID in your shop",
                    "example": "order_id_1",
                    "examples": [
                      "order_id_1"
                    ]
                  },
                  "phone": {
                    "type": "string",
                    "description": "Payer's phone number. The OTP-password will be sent to this telephone number to confirm your payment, and the linked payer's LiqPay cabinet. The telephone number should be indicated in the international format (Ukraine `+380`)",
                    "example": "+380950000001",
                    "examples": [
                      "+380950000001",
                      "380950000001"
                    ]
                  },
                  "language": {
                    "type": "string",
                    "enum": [
                      "uk",
                      "en"
                    ],
                    "default": "uk",
                    "description": "Customer's language"
                  },
                  "prepare": {
                    "type": "string",
                    "format": "boolean-integer",
                    "enum": [
                      "1"
                    ],
                    "default": "1",
                    "description": "The preliminary preparation of the payment. This mode allows you to determine whether all data is complete, whether 3DS is required to check the card, whether the limit is exceeded. The funds are not debited from the payer's card. To activate the mode, you need to transfer the value of `1`"
                  },
                  "server_url": {
                    "type": "string",
                    "format": "uri",
                    "maxLength": 510,
                    "description": "URL API in your store for notifications of payment status change (`server` -> `server`). [Learn more](https://www.liqpay.ua/en/doc/api/callback)"
                  },
                  "split_rules": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "public_key": {
                          "type": "string",
                          "description": "Public key - the store identifier",
                          "example": "i000000001",
                          "examples": [
                            "i000000001",
                            "i000000002"
                          ]
                        },
                        "amount": {
                          "type": "number",
                          "description": "Payment amount",
                          "example": 1,
                          "examples": [
                            1,
                            2
                          ]
                        },
                        "commission_payer": {
                          "type": "string",
                          "enum": [
                            "sender",
                            "receiver"
                          ],
                          "default": "sender",
                          "description": "Commission payer",
                          "example": "sender",
                          "examples": [
                            "sender",
                            "receiver"
                          ]
                        },
                        "server_url": {
                          "type": "string",
                          "format": "uri",
                          "maxLength": 510,
                          "description": "URL API in your store for notifications of payment status change (`server` -> `server`)",
                          "example": "https://server1/callback",
                          "examples": [
                            "https://server1/callback",
                            "https://server2/callback"
                          ]
                        },
                        "description": {
                          "type": "string",
                          "description": "Payment description"
                        }
                      },
                      "required": [
                        "amount"
                      ]
                    },
                    "description": "Payment with split amount for a few receivers. This parameter is a `JSON` array containing split rules. While using `split_rules` parameter, card is being charged and amount is split and credited to a few receivers. If you need to convey your purpose for each amount use the parameter `description`. Acquiring fee is being charged from each shop in the `split_rules`"
                  },
                  "sender": {
                    "type": "object",
                    "properties": {
                      "sender_address": {
                        "type": "string",
                        "description": "Sender's address"
                      },
                      "sender_city": {
                        "type": "string",
                        "description": "Sender's city"
                      },
                      "sender_country_code": {
                        "type": "string",
                        "description": "Country code of the sender. Digital [ISO 3166-1 code](https://en.wikipedia.org/wiki/ISO_3166-1)"
                      },
                      "sender_first_name": {
                        "type": "string",
                        "description": "Sender's first name"
                      },
                      "sender_last_name": {
                        "type": "string",
                        "description": "Sender's last name"
                      },
                      "sender_postal_code": {
                        "type": "string",
                        "description": "Sender's zip code"
                      }
                    },
                    "description": "Sender parameters"
                  },
                  "customer": {
                    "type": "string",
                    "maxLength": 100,
                    "description": "Unique customer ID in your shop"
                  },
                  "dae": {
                    "type": "string",
                    "description": "Detail Addenda.\n\nPossible `JSON` object:\n```\n{\n  \"airLine\": \"Avia\", // airline abbreviation, max 4 symbols.\n  \"ticketNumber\": \"ACSFD12354SA\", // ticket number, max 15 symbols. \n  \"passengerName\": \"John Doe\", // passenger name, max 29 symbols.\n  \"flightNumber\": \"742\", // flight number, max 5 number.\n  \"originCity\": \"DP\", // departure city/airport code, max 5 symbols.\n  \"destinationCity\": \"NY\", // arrival city/airport code, max 5 symbols.\n  \"departureDate\": \"100514\" // departure date in format YYMMDD, max 6 number.\n}\n```"
                  },
                  "info": {
                    "type": "string",
                    "description": "Information to add details to payment",
                    "example": "External information for payments",
                    "examples": [
                      "External information for payments"
                    ]
                  },
                  "product_category": {
                    "type": "string",
                    "maxLength": 25,
                    "description": "Product category in your shop"
                  },
                  "product_description": {
                    "type": "string",
                    "maxLength": 500,
                    "description": "Product description in your shop"
                  },
                  "product_name": {
                    "type": "string",
                    "maxLength": 100,
                    "description": "Product name in your shop"
                  },
                  "product_url": {
                    "type": "string",
                    "format": "uri",
                    "maxLength": 2000,
                    "description": "Product page address"
                  }
                },
                "required": [
                  "version",
                  "public_key",
                  "action",
                  "amount",
                  "card_token",
                  "currency",
                  "description",
                  "ip",
                  "order_id"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "acq_id": {
                      "type": "number",
                      "description": "Acquirer ID",
                      "example": 414963,
                      "examples": [
                        414963
                      ]
                    },
                    "action": {
                      "type": "string",
                      "enum": [
                        "pay",
                        "hold",
                        "paysplit",
                        "subscribe",
                        "paydonate",
                        "auth",
                        "regular"
                      ],
                      "description": "Transaction type. Possible values:\n* `pay` - payment\n* `hold` - amount of hold on sender's account\n* `paysplit` - splitting payments\n* `subscribe` - creation of a regular payment\n* `paydonate` - donation\n* `auth` - card preauth\n* `regular` - regular payment",
                      "example": "pay",
                      "examples": [
                        "pay"
                      ]
                    },
                    "agent_commission": {
                      "type": "number",
                      "description": "Agent comission in payment currency",
                      "example": 0.0,
                      "examples": [
                        0.0
                      ]
                    },
                    "amount": {
                      "type": "number",
                      "description": "Payment amount",
                      "example": 0.02,
                      "examples": [
                        0.02
                      ]
                    },
                    "amount_bonus": {
                      "type": "number",
                      "description": "Payer bonus amount in payment currency debit",
                      "example": 0.0,
                      "examples": [
                        0.0
                      ]
                    },
                    "amount_credit": {
                      "type": "number",
                      "description": "Payment amount for credit in currency of `currency_credit`",
                      "example": 0.02,
                      "examples": [
                        0.02
                      ]
                    },
                    "amount_debit": {
                      "type": "number",
                      "description": "Payment amount for debit in currency of `currency_debit`",
                      "example": 0.02,
                      "examples": [
                        0.02
                      ]
                    },
                    "authcode_credit": {
                      "type": "string",
                      "description": "Authorization code for transaction of credit",
                      "example": "538974",
                      "examples": [
                        "538974"
                      ]
                    },
                    "authcode_debit": {
                      "type": "string",
                      "description": "Authorization code for transaction of debit",
                      "example": "366297",
                      "examples": [
                        "366297"
                      ]
                    },
                    "bonus_procent": {
                      "type": "number",
                      "description": "Discount rate in percent",
                      "example": 7.0,
                      "examples": [
                        7.0
                      ]
                    },
                    "bonus_type": {
                      "type": "string",
                      "enum": [
                        "bonusplus",
                        "discount_club",
                        "personal",
                        "promo"
                      ],
                      "description": "Bonus type, ",
                      "example": "bonusplus",
                      "examples": [
                        "bonusplus"
                      ]
                    },
                    "commission_credit": {
                      "type": "number",
                      "description": "Commission from the receiver in `currency_credit`",
                      "example": 0.0,
                      "examples": [
                        0.0
                      ]
                    },
                    "commission_debit": {
                      "type": "number",
                      "description": "Commission from the sender in `currency_debit`",
                      "example": 0.0,
                      "examples": [
                        0.0
                      ]
                    },
                    "create_date": {
                      "type": "integer",
                      "format": "timestamp-ms",
                      "description": "Date of payment creation",
                      "example": 1501684842777,
                      "examples": [
                        1501684842777
                      ]
                    },
                    "currency": {
                      "type": "string",
                      "description": "Payment currency",
                      "example": "UAH",
                      "examples": [
                        "UAH"
                      ]
                    },
                    "currency_credit": {
                      "type": "string",
                      "description": "Transaction currency of credit",
                      "example": "UAH",
                      "examples": [
                        "UAH"
                      ]
                    },
                    "currency_debit": {
                      "type": "string",
                      "description": "Transaction currency of debit",
                      "example": "UAH",
                      "examples": [
                        "UAH"
                      ]
                    },
                    "description": {
                      "type": "string",
                      "description": "Payment description",
                      "example": "description text",
                      "examples": [
                        "description text"
                      ]
                    },
                    "end_date": {
                      "type": "integer",
                      "format": "timestamp-ms",
                      "description": "Date of payment edition/end",
                      "example": 1501684842777,
                      "examples": [
                        1501684842777
                      ]
                    },
                    "is_3ds": {
                      "type": "boolean",
                      "description": "Possible values:\n* `true` - transaction passed with 3DS\n* `false` - transaction passed without 3DS"
                    },
                    "liqpay_order_id": {
                      "type": "string",
                      "description": "Payment order_id in LiqPay system",
                      "example": "NYMK3AE61501685438251925",
                      "examples": [
                        "NYMK3AE61501685438251925"
                      ]
                    },
                    "mpi_eci": {
                      "type": "integer",
                      "enum": [
                        5,
                        6,
                        7
                      ],
                      "description": "Possible values:\n* `5` - the transaction passed with 3DS (issuer and acquirer support 3d Secure technology)\n* `6` - the issuer of the payer card does not support 3d Secure technology\n* `7` - the operation passed without 3d Secure",
                      "example": 7,
                      "examples": [
                        7
                      ]
                    },
                    "order_id": {
                      "type": "string",
                      "description": "Order_id payment",
                      "example": "98R1U1OV1485849059893399",
                      "examples": [
                        "98R1U1OV1485849059893399"
                      ]
                    },
                    "payment_id": {
                      "type": "number",
                      "description": "Payment id in LiqPay system",
                      "example": 165167,
                      "examples": [
                        165167
                      ]
                    },
                    "paytype": {
                      "type": "string",
                      "enum": [
                        "card",
                        "privat24",
                        "moment_part",
                        "cash",
                        "invoice",
                        "qr"
                      ],
                      "description": "Methods of payment. Possible values:\n* `card` - card payment\n* `privat24` - with privat24 account\n* `moment_part` - installments\n* `cash` - cash\n* `invoice` - to email\n* `qr` - qr code scanning",
                      "example": "card",
                      "examples": [
                        "card"
                      ]
                    },
                    "public_key": {
                      "type": "string",
                      "description": "Shop public key",
                      "example": "i000000000",
                      "examples": [
                        "i000000000"
                      ]
                    },
                    "receiver_commission": {
                      "type": "number",
                      "description": "Receiver comission in payment currency",
                      "example": 0.0,
                      "examples": [
                        0.0
                      ]
                    },
                    "rrn_credit": {
                      "type": "string",
                      "description": "Unique transaction ID in authorization and settlement system of issuer bank `Retrieval Reference number`",
                      "example": "000663740472",
                      "examples": [
                        "000663740472"
                      ]
                    },
                    "rrn_debit": {
                      "type": "string",
                      "description": "Unique transaction ID in authorization and settlement system of issuer bank `Retrieval Reference number`",
                      "example": "000663740464",
                      "examples": [
                        "000663740464"
                      ]
                    },
                    "sender_bonus": {
                      "type": "number",
                      "description": "Sender's bonus in the payment currency",
                      "example": 0.0,
                      "examples": [
                        0.0
                      ]
                    },
                    "sender_card_bank": {
                      "type": "string",
                      "description": "Sender's card bank",
                      "example": "pb",
                      "examples": [
                        "pb"
                      ]
                    },
                    "sender_card_country": {
                      "type": "string",
                      "description": "Sender's card country. Digital [ISO 3166-1 code](https://en.wikipedia.org/wiki/ISO_3166-1)",
                      "example": 804,
                      "examples": [
                        804
                      ]
                    },
                    "sender_card_mask2": {
                      "type": "string",
                      "description": "Sender's card",
                      "example": "414961*99",
                      "examples": [
                        "414961*99"
                      ]
                    },
                    "sender_card_type": {
                      "type": "string",
                      "description": "Sender's card type MC/Visa",
                      "example": "visa",
                      "examples": [
                        "visa"
                      ]
                    },
                    "sender_commission": {
                      "type": "number",
                      "description": "Commission from the sender in the payment currency",
                      "example": 0.0,
                      "examples": [
                        0.0
                      ]
                    },
                    "sender_phone": {
                      "type": "string",
                      "description": "Sender's phone number",
                      "example": "380950000001",
                      "examples": [
                        "380950000001"
                      ]
                    },
                    "status": {
                      "type": "string",
                      "enum": [
                        "error",
                        "failure",
                        "reversed",
                        "success",
                        "wait_accept",
                        "wait_secure"
                      ],
                      "description": "Payment status.\nAvailable values:\nFinal payment statuses\n* `error` - Failed payment. Data is incorrect\n* `failure` - Failed payment\n* `reversed` - Payment refunded\n* `success` - Successful payment\nOther payment statuses\n* `wait_accept` - Money are withdrawn from client but the store is still not verified. If the store is not activated for 60 days, payment will be automatically cancelled\n* `wait_secure` - Payment is verified",
                      "example": "success",
                      "examples": [
                        "success"
                      ]
                    },
                    "transaction_id": {
                      "type": "number",
                      "description": "Id transactions in the LiqPay system",
                      "example": 165167,
                      "examples": [
                        165167
                      ]
                    },
                    "type": {
                      "type": "string",
                      "description": "Payment type",
                      "example": "buy",
                      "examples": [
                        "buy"
                      ]
                    },
                    "version": {
                      "type": "integer",
                      "enum": [
                        3
                      ],
                      "default": 3,
                      "description": "Version API",
                      "example": 3,
                      "examples": [
                        3
                      ]
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/request?path=internet_acquiring.cash": {
      "post": {
        "summary": "Internet acquiring. Cash payment",
        "operationId": "internet_acquiring/cash",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "version": {
                    "type": "integer",
                    "enum": [
                      3
                    ],
                    "default": 3,
                    "description": "Version API",
                    "example": 3,
                    "examples": [
                      3
                    ]
                  },
                  "public_key": {
                    "type": "string",
                    "description": "Public key - the store identifier. You can get the key in the [store settings](https://www.liqpay.ua/en/adminbusiness)"
                  },
                  "action": {
                    "type": "string",
                    "enum": [
                      "paycash"
                    ],
                    "default": "paycash",
                    "example": "paycash",
                    "examples": [
                      "paycash"
                    ]
                  },
                  "amount": {
                    "type": "number",
                    "description": "Payment amount",
                    "example": 5.0,
                    "examples": [
                      5.0,
                      7.34,
                      1.0
                    ]
                  },
                  "currency": {
                    "type": "string",
                    "enum": [
                      "USD",
                      "EUR",
                      "UAH"
                    ],
                    "description": "Payment currency",
                    "example": "USD",
                    "examples": [
                      "USD"
                    ]
                  },
                  "description": {
                    "type": "string",
                    "description": "Payment description",
                    "example": "description text",
                    "examples": [
                      "description text"
                    ]
                  },
                  "ip": {
                    "type": "string",
                    "description": "Client IP"
                  },
                  "order_id": {
                    "type": "string",
                    "maxLength": 255,
                    "description": "Unique purchase ID in your shop",
                    "example": "order_id_1",
                    "examples": [
                      "order_id_1"
                    ]
                  },
                  "phone": {
                    "type": "string",
                    "description": "Payer's phone number. The OTP-password will be sent to this telephone number to confirm your payment, and the linked payer's LiqPay cabinet. The telephone number should be indicated in the international format (Ukraine `+380`)",
                    "example": "+380950000001",
                    "examples": [
                      "+380950000001",
                      "380950000001"
                    ]
                  },
                  "expired_date": {
                    "type": "string",
                    "format": "date-time-liqpay",
                    "description": "Date and time until which customer is able to pay invoice by `UTC`. Should be sent in the following format `2016-04-24 00:00:00`"
                  },
                  "language": {
                    "type": "string",
                    "enum": [
                      "uk",
                      "en"
                    ],
                    "default": "uk",
                    "description": "Customer's language"
                  },
                  "prepare": {
                    "type": "string",
                    "format": "boolean-integer",
                    "enum": [
                      "1"
                    ],
                    "default": "1",
                    "description": "The preliminary preparation of the payment. This mode allows you to determine whether all data is complete, whether 3DS is required to check the card, whether the limit is exceeded. The funds are not debited from the payer's card. To activate the mode, you need to transfer the value of `1`"
                  },
                  "server_url": {
                    "type": "string",
                    "format": "uri",
                    "maxLength": 510,
                    "description": "URL API in your store for notifications of payment status change (`server` -> `server`). [Learn more](https://www.liqpay.ua/en/doc/api/callback)"
                  },
                  "split_rules": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "public_key": {
                          "type": "string",
                          "description": "Public key - the store identifier",
                          "example": "i000000001",
                          "examples": [
                            "i000000001",
                            "i000000002"
                          ]
                        },
                        "amount": {
                          "type": "number",
                          "description": "Payment amount",
                          "example": 1,
                          "examples": [
                            1,
                            2
                          ]
                        },
                        "commission_payer": {
                          "type": "string",
                          "enum": [
                            "sender",
                            "receiver"
                          ],
                          "default": "sender",
                          "description": "Commission payer",
                          "example": "sender",
                          "examples": [
                            "sender",
                            "receiver"
                          ]
                        },
                        "server_url": {
                          "type": "string",
                          "format": "uri",
                          "maxLength": 510,
                          "description": "URL API in your store for notifications of payment status change (`server` -> `server`)",
                          "example": "https://server1/callback",
                          "examples": [
                            "https://server1/callback",
                            "https://server2/callback"
                          ]
                        },
                        "description": {
                          "type": "string",
                          "description": "Payment description"
                        }
                      },
                      "required": [
                        "amount"
                      ]
                    },
                    "description": "Payment with split amount for a few receivers. This parameter is a `JSON` array containing split rules. While using `split_rules` parameter, card is being charged and amount is split and credited to a few receivers. If you need to convey your purpose for each amount use the parameter `description`. Acquiring fee is being charged from each shop in the `split_rules`"
                  },
                  "customer": {
                    "type": "string",
                    "maxLength": 100,
                    "description": "Unique customer ID in your shop"
                  },
                  "dae": {
                    "type": "string",
                    "description": "Detail Addenda.\n\nPossible `JSON` object:\n```\n{\n  \"airLine\": \"Avia\", // airline abbreviation, max 4 symbols.\n  \"ticketNumber\": \"ACSFD12354SA\", // ticket number, max 15 symbols. \n  \"passengerName\": \"John Doe\", // passenger name, max 29 symbols.\n  \"flightNumber\": \"742\", // flight number, max 5 number.\n  \"originCity\": \"DP\", // departure city/airport code, max 5 symbols.\n  \"destinationCity\": \"NY\", // arrival city/airport code, max 5 symbols.\n  \"departureDate\": \"100514\" // departure date in format YYMMDD, max 6 number.\n}\n```"
                  },
                  "info": {
                    "type": "string",
                    "description": "Information to add details to payment",
                    "example": "External information for payments",
                    "examples": [
                      "External information for payments"
                    ]
                  },
                  "product_category": {
                    "type": "string",
                    "maxLength": 25,
                    "description": "Product category in your shop"
                  },
                  "product_description": {
                    "type": "string",
                    "maxLength": 500,
                    "description": "Product description in your shop"
                  },
                  "product_name": {
                    "type": "string",
                    "maxLength": 100,
                    "description": "Product name in your shop"
                  },
                  "product_url": {
                    "type": "string",
                    "format": "uri",
                    "maxLength": 2000,
                    "description": "Product page address"
                  }
                },
                "required": [
                  "version",
                  "public_key",
                  "action",
                  "amount",
                  "currency",
                  "description",
                  "ip",
                  "order_id",
                  "phone"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "acq_id": {
                      "type": "number",
                      "description": "Acquirer ID",
                      "example": 414963,
                      "examples": [
                        414963
                      ]
                    },
                    "action": {
                      "type": "string",
                      "enum": [
                        "pay",
                        "hold",
                        "paysplit",
                        "subscribe",
                        "paydonate",
                        "auth",
                        "regular"
                      ],
                      "description": "Transaction type. Possible values:\n* `pay` - payment\n* `hold` - amount of hold on sender's account\n* `paysplit` - splitting payments\n* `subscribe` - creation of a regular payment\n* `paydonate` - donation\n* `auth` - card preauth\n* `regular` - regular payment",
                      "example": "paycash",
                      "examples": [
                        "paycash"
                      ]
                    },
                    "agent_commission": {
                      "type": "number",
                      "description": "Agent comission in payment currency",
                      "example": 0.0,
                      "examples": [
                        0.0
                      ]
                    },
                    "amount": {
                      "type": "number",
                      "description": "Payment amount",
                      "example": 0.1,
                      "examples": [
                        0.1
                      ]
                    },
                    "amount_bonus": {
                      "type": "number",
                      "description": "Payer bonus amount in payment currency debit",
                      "example": 0.0,
                      "examples": [
                        0.0
                      ]
                    },
                    "amount_credit": {
                      "type": "number",
                      "description": "Payment amount for credit in currency of `currency_credit`",
                      "example": 0.1,
                      "examples": [
                        0.1
                      ]
                    },
                    "amount_debit": {
                      "type": "number",
                      "description": "Payment amount for debit in currency of `currency_debit`",
                      "example": 0.1,
                      "examples": [
                        0.1
                      ]
                    },
                    "commission_credit": {
                      "type": "number",
                      "description": "Commission from the receiver in `currency_credit`",
                      "example": 0.0,
                      "examples": [
                        0.0
                      ]
                    },
                    "commission_debit": {
                      "type": "number",
                      "description": "Commission from the sender in `currency_debit`",
                      "example": 0.0,
                      "examples": [
                        0.0
                      ]
                    },
                    "currency": {
                      "type": "string",
                      "description": "Payment currency",
                      "example": "UAH",
                      "examples": [
                        "UAH"
                      ]
                    },
                    "currency_credit": {
                      "type": "string",
                      "description": "Transaction currency of credit",
                      "example": "UAH",
                      "examples": [
                        "UAH"
                      ]
                    },
                    "currency_debit": {
                      "type": "string",
                      "description": "Transaction currency of debit",
                      "example": "UAH",
                      "examples": [
                        "UAH"
                      ]
                    },
                    "description": {
                      "type": "string",
                      "description": "Payment description",
                      "example": "description",
                      "examples": [
                        "description"
                      ]
                    },
                    "end_date": {
                      "type": "integer",
                      "format": "timestamp-ms",
                      "description": "Date of payment edition/end"
                    },
                    "ip": {
                      "type": "string",
                      "description": "Sender's IP address"
                    },
                    "is_3ds": {
                      "type": "boolean",
                      "description": "Possible values:\n* `true` - transaction passed with 3DS\n* `false` - transaction passed without 3DS"
                    },
                    "liqpay_order_id": {
                      "type": "string",
                      "description": "Payment order_id in LiqPay system",
                      "example": "NYMK3AE61501685438251925",
                      "examples": [
                        "NYMK3AE61501685438251925"
                      ]
                    },
                    "mpi_eci": {
                      "type": "integer",
                      "enum": [
                        5,
                        6,
                        7
                      ],
                      "description": "Possible values:\n* `5` - the transaction passed with 3DS (issuer and acquirer support 3d Secure technology)\n* `6` - the issuer of the payer card does not support 3d Secure technology\n* `7` - the operation passed without 3d Secure",
                      "example": 7,
                      "examples": [
                        7
                      ]
                    },
                    "order_id": {
                      "type": "string",
                      "description": "Order_id payment",
                      "example": "98R1U1OV1485849059893399",
                      "examples": [
                        "98R1U1OV1485849059893399"
                      ]
                    },
                    "payment_id": {
                      "type": "number",
                      "description": "Payment id in LiqPay system",
                      "example": 165168,
                      "examples": [
                        165168
                      ]
                    },
                    "public_key": {
                      "type": "string",
                      "description": "Shop public key",
                      "example": "i000000000",
                      "examples": [
                        "i000000000"
                      ]
                    },
                    "receiver_commission": {
                      "type": "number",
                      "description": "Receiver comission in payment currency",
                      "example": 0.0,
                      "examples": [
                        0.0
                      ]
                    },
                    "sender_bonus": {
                      "type": "number",
                      "description": "Sender's bonus in the payment currency",
                      "example": 0.0,
                      "examples": [
                        0.0
                      ]
                    },
                    "sender_commission": {
                      "type": "number",
                      "description": "Commission from the sender in the payment currency",
                      "example": 0.0,
                      "examples": [
                        0.0
                      ]
                    },
                    "sender_first_name": {
                      "type": "string",
                      "description": "Sender's first name",
                      "example": "first name",
                      "examples": [
                        "first name"
                      ]
                    },
                    "sender_last_name": {
                      "type": "string",
                      "description": "Sender's last name",
                      "example": "last name",
                      "examples": [
                        "last name"
                      ]
                    },
                    "sender_phone": {
                      "type": "string",
                      "description": "Sender's phone number",
                      "example": "380950000001",
                      "examples": [
                        "380950000001"
                      ]
                    },
                    "status": {
                      "type": "string",
                      "enum": [
                        "error",
                        "failure",
                        "success",
                        "cash_wait"
                      ],
                      "description": "Payment status.\nAvailable values:\n\nFinal payment statuses\n* `error` - Failed payment. Data is incorrect\n* `failure` - Failed payment\n* `success` - Successful payment\n\nStatuses that required payment confirmation\n* `cash_wait` - Waiting for payment in self-service terminal",
                      "example": "cash_wait",
                      "examples": [
                        "cash_wait"
                      ]
                    },
                    "transaction_id": {
                      "type": "number",
                      "description": "Id transactions in the LiqPay system",
                      "example": 165168,
                      "examples": [
                        165168
                      ]
                    },
                    "type": {
                      "type": "string",
                      "description": "Payment type",
                      "example": "cash",
                      "examples": [
                        "cash"
                      ]
                    },
                    "version": {
                      "type": "integer",
                      "enum": [
                        3
                      ],
                      "default": 3,
                      "description": "Version API",
                      "example": 3,
                      "examples": [
                        3
                      ]
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/request?path=internet_acquiring.two_step.block": {
      "post": {
        "summary": "Internet acquiring. Two-step payment. Funds blocking",
        "operationId": "internet_acquiring/two_step/block",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "version": {
                    "type": "integer",
                    "enum": [
                      3
                    ],
                    "default": 3,
                    "description": "Version API",
                    "example": 3,
                    "examples": [
                      3
                    ]
                  },
                  "public_key": {
                    "type": "string",
                    "description": "Public key - the store identifier. You can get the key in the [store settings](https://www.liqpay.ua/en/adminbusiness)"
                  },
                  "action": {
                    "type": "string",
                    "enum": [
                      "hold"
                    ],
                    "default": "hold",
                    "example": "hold",
                    "examples": [
                      "hold"
                    ]
                  },
                  "amount": {
                    "type": "number",
                    "description": "Payment amount",
                    "example": 5.0,
                    "examples": [
                      5.0,
                      7.34,
                      1.0
                    ]
                  },
                  "apay_token": {
                    "type": "string",
                    "description": "JSON string from token parameter (obtained from Apple) encoded with base64 function. The parameter is optional if parameter is being passed `card` or `gpay_token`"
                  },
                  "card": {
                    "type": "string",
                    "description": "The client's card number or unencrypted token of Apple, Google, international payment systems (MasterCard, Visa). The parameter is optional if parameter is being passed `gpay_token` or `apay_token`",
                    "example": "4731195301524634",
                    "examples": [
                      "4731195301524634"
                    ]
                  },
                  "card_cvv": {
                    "type": "string",
                    "description": "CVV/CVV2. The parameter is required if the card number is being passed",
                    "example": "111",
                    "examples": [
                      "111"
                    ]
                  },
                  "card_exp_month": {
                    "type": "string",
                    "description": "Expiry month of the payer's card. This parameter is required if the card number or an unencrypted token is being passed",
                    "example": "08",
                    "examples": [
                      "08",
                      "03"
                    ]
                  },
                  "card_exp_year": {
                    "type": "string",
                    "description": "Expiry year of the payer's card. This parameter is required if the card number or an unencrypted token is being passed",
                    "example": "19",
                    "examples": [
                      "19",
                      "22"
                    ]
                  },
                  "currency": {
                    "type": "string",
                    "enum": [
                      "USD",
                      "EUR",
                      "UAH"
                    ],
                    "description": "Payment currency",
                    "example": "USD",
                    "examples": [
                      "USD"
                    ]
                  },
                  "description": {
                    "type": "string",
                    "description": "Payment description",
                    "example": "description text",
                    "examples": [
                      "description text"
                    ]
                  },
                  "gpay_token": {
                    "type": "string",
                    "description": "JSON string from token parameter (obtained from Google) encoded with base64 function. The parameter is optional if parameter is being passed `card` або `apay_token`"
                  },
                  "ip": {
                    "type": "string",
                    "description": "Client IP"
                  },
                  "order_id": {
                    "type": "string",
                    "maxLength": 255,
                    "description": "Unique purchase ID in your shop",
                    "example": "order_id_1",
                    "examples": [
                      "order_id_1"
                    ]
                  },
                  "phone": {
                    "type": "string",
                    "description": "Payer's phone number. The OTP-password will be sent to this telephone number to confirm your payment, and the linked payer's LiqPay cabinet. The telephone number should be indicated in the international format (Ukraine `+380`)",
                    "example": "+380950000001",
                    "examples": [
                      "+380950000001",
                      "380950000001"
                    ]
                  },
                  "paytype": {
                    "type": "string",
                    "enum": [
                      "apay",
                      "gpay",
                      "apay_tavv",
                      "gpay_tavv",
                      "tavv"
                    ],
                    "description": "Payment type. Possible values:\n* `apay` - payment using an encrypted Apple token\n* `gpay` - payment using an encrypted Google token\n* `apay_tavv` - payment using an unencrypted Apple token\n* `gpay_tavv` - payment using an unencrypted Google token\n* `tavv` - payment using an unencrypted token of international payment systems (MasterCard, Visa). This parameter is required for payments using encrypted and unencrypted tokens"
                  },
                  "tid": {
                    "type": "string",
                    "description": "Previous transaction ID. For recurring payments using tokens of Visa international payment system"
                  },
                  "language": {
                    "type": "string",
                    "enum": [
                      "uk",
                      "en"
                    ],
                    "default": "uk",
                    "description": "Customer's language"
                  },
                  "prepare": {
                    "type": "string",
                    "format": "boolean-integer",
                    "enum": [
                      "1"
                    ],
                    "default": "1",
                    "description": "The preliminary preparation of the payment. This mode allows you to determine whether all data is complete, whether 3DS is required to check the card, whether the limit is exceeded. The funds are not debited from the payer's card. To activate the mode, you need to transfer the value of `1`"
                  },
                  "recurringbytoken": {
                    "type": "string",
                    "format": "boolean-integer",
                    "enum": [
                      "1"
                    ],
                    "default": "1",
                    "description": "This parameter allows to generate payer `card_token` which you receive in callback request to `server_url`. `card_token` allows to make recurring payments without payer card requisites using API [paytoken](https://www.liqpay.ua/en/doc/api/internet_acquiring/token). To receive `card_token` please send in request value `1`"
                  },
                  "recurring": {
                    "type": "boolean",
                    "description": "Token recurring payment flag. Used for payments with tokens of international payment systems (MasterCard, Visa). Possible values:\n* `true` - the operation is performed without the participation of the client\n* `false` - the operation is performed by the client"
                  },
                  "server_url": {
                    "type": "string",
                    "format": "uri",
                    "maxLength": 510,
                    "description": "URL API in your store for notifications of payment status change (`server` -> `server`). [Learn more](https://www.liqpay.ua/en/doc/api/callback)"
                  },
                  "tavv": {
                    "type": "string",
                    "description": "Token reference received from decrypting apple device data"
                  },
                  "sender": {
                    "type": "object",
                    "properties": {
                      "sender_first_name": {
                        "type": "string",
                        "description": "Sender's first name"
                      },
                      "sender_last_name": {
                        "type": "string",
                        "description": "Sender's last name"
                      },
                      "phone": {
                        "type": "string",
                        "description": "Payer's phone number"
                      },
                      "sender_email": {
                        "type": "string",
                        "description": "E-mail address"
                      },
                      "sender_country_code": {
                        "type": "string",
                        "description": "Country code of the sender. Digital [ISO 3166-1 code](https://en.wikipedia.org/wiki/ISO_3166-1)"
                      },
                      "sender_city": {
                        "type": "string",
                        "description": "Sender's city"
                      },
                      "sender_address": {
                        "type": "string",
                        "description": "Sender's address"
                      },
                      "sender_state": {
                        "type": "string",
                        "description": "Payment address. Sender's region code. Digital [ISO 3166-2 code.](https://en.wikipedia.org/wiki/ISO_3166-2)For Ukraine [ISO 3166-2:UA](https://en.wikipedia.org/wiki/ISO_3166-2:UA)"
                      },
                      "sender_shipping_state": {
                        "type": "string",
                        "description": "Shipping address. Sender's region code. Digital [ISO 3166-2 code.](https://en.wikipedia.org/wiki/ISO_3166-2)For Ukraine [ISO 3166-2:UA](https://en.wikipedia.org/wiki/ISO_3166-2:UA)"
                      },
                      "sender_postal_code": {
                        "type": "string",
                        "description": "Sender's zip code"
                      }
                    },
                    "required": [
                      "phone",
                      "sender_country_code",
                      "sender_city",
                      "sender_address",
                      "sender_postal_code"
                    ],
                    "description": "Sender parameters"
                  },
                  "split_rules": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "public_key": {
                          "type": "string",
                          "description": "Public key - the store identifier",
                          "example": "i000000001",
                          "examples": [
                            "i000000001",
                            "i000000002"
                          ]
                        },
                        "amount": {
                          "type": "number",
                          "description": "Payment amount",
                          "example": 1,
                          "examples": [
                            1,
                            2
                          ]
                        },
                        "commission_payer": {
                          "type": "string",
                          "enum": [
                            "sender",
                            "receiver"
                          ],
                          "default": "sender",
                          "description": "Commission payer",
                          "example": "sender",
                          "examples": [
                            "sender",
                            "receiver"
                          ]
                        },
                        "server_url": {
                          "type": "string",
                          "format": "uri",
                          "maxLength": 510,
                          "description": "URL API in your store for notifications of payment status change (`server` -> `server`)",
                          "example": "https://server1/callback",
                          "examples": [
                            "https://server1/callback",
                            "https://server2/callback"
                          ]
                        },
                        "description": {
                          "type": "string",
                          "description": "Payment description"
                        }
                      },
                      "required": [
                        "amount"
                      ]
                    },
                    "description": "Payment with split amount for a few receivers. This parameter is a `JSON` array containing split rules. While using `split_rules` parameter, card is being charged and amount is split and credited to a few receivers. If you need to convey your purpose for each amount use the parameter `description`. Acquiring fee is being charged from each shop in the `split_rules`"
                  },
                  "customer": {
                    "type": "string",
                    "maxLength": 100,
                    "description": "Unique customer ID in your shop"
                  },
                  "dae": {
                    "type": "string",
                    "description": "Detail Addenda.\n\nPossible `JSON` object:\n```\n{\n  \"airLine\": \"Avia\", // airline abbreviation, max 4 symbols.\n  \"ticketNumber\": \"ACSFD12354SA\", // ticket number, max 15 symbols. \n  \"passengerName\": \"John Doe\", // passenger name, max 29 symbols.\n  \"flightNumber\": \"742\", // flight number, max 5 number.\n  \"originCity\": \"DP\", // departure city/airport code, max 5 symbols.\n  \"destinationCity\": \"NY\", // arrival city/airport code, max 5 symbols.\n  \"departureDate\": \"100514\" // departure date in format YYMMDD, max 6 number.\n}\n```"
                  },
                  "info": {
                    "type": "string",
                    "description": "Information to add details to payment",
                    "example": "External information for payments",
                    "examples": [
                      "External information for payments"
                    ]
                  }
                },
                "required": [
                  "version",
                  "public_key",
                  "action",
                  "amount",
                  "currency",
                  "description",
                  "ip",
                  "order_id",
                  "phone",
                  "tavv"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "acq_id": {
                      "type": "number",
                      "description": "Acquirer ID",
                      "example": 414963,
                      "examples": [
                        414963
                      ]
                    },
                    "action": {
                      "type": "string",
                      "enum": [
                        "pay",
                        "hold",
                        "paysplit",
                        "subscribe",
                        "paydonate",
                        "auth",
                        "regular"
                      ],
                      "description": "Transaction type. Possible values:\n* `pay` - payment\n* `hold` - amount of hold on sender's account\n* `paysplit` - splitting payments\n* `subscribe` - creation of a regular payment\n* `paydonate` - donation\n* `auth` - card preauth\n* `regular` - regular payment",
                      "example": "hold",
                      "examples": [
                        "hold"
                      ]
                    },
                    "agent_commission": {
                      "type": "number",
                      "description": "Agent comission in payment currency",
                      "example": 0.0,
                      "examples": [
                        0.0
                      ]
                    },
                    "amount": {
                      "type": "number",
                      "description": "Payment amount",
                      "example": 0.02,
                      "examples": [
                        0.02
                      ]
                    },
                    "amount_bonus": {
                      "type": "number",
                      "description": "Payer bonus amount in payment currency debit",
                      "example": 0.0,
                      "examples": [
                        0.0
                      ]
                    },
                    "amount_credit": {
                      "type": "number",
                      "description": "Payment amount for credit in currency of `currency_credit`",
                      "example": 0.02,
                      "examples": [
                        0.02
                      ]
                    },
                    "amount_debit": {
                      "type": "number",
                      "description": "Payment amount for debit in currency of `currency_debit`",
                      "example": 0.02,
                      "examples": [
                        0.02
                      ]
                    },
                    "authcode_debit": {
                      "type": "string",
                      "description": "Authorization code for transaction of debit",
                      "example": "542284",
                      "examples": [
                        "542284"
                      ]
                    },
                    "card_token": {
                      "type": "string",
                      "description": "Sender's card token",
                      "example": "2DFBFE626B734164830DE81E971E90026F260",
                      "examples": [
                        "2DFBFE626B734164830DE81E971E90026F260"
                      ]
                    },
                    "commission_credit": {
                      "type": "number",
                      "description": "Commission from the receiver in `currency_credit`",
                      "example": 0.0,
                      "examples": [
                        0.0
                      ]
                    },
                    "commission_debit": {
                      "type": "number",
                      "description": "Commission from the sender in `currency_debit`",
                      "example": 0.0,
                      "examples": [
                        0.0
                      ]
                    },
                    "create_date": {
                      "type": "integer",
                      "format": "timestamp-ms",
                      "description": "Date of payment creation"
                    },
                    "currency": {
                      "type": "string",
                      "description": "Payment currency",
                      "example": "UAH",
                      "examples": [
                        "UAH"
                      ]
                    },
                    "currency_credit": {
                      "type": "string",
                      "description": "Transaction currency of credit",
                      "example": "UAH",
                      "examples": [
                        "UAH"
                      ]
                    },
                    "currency_debit": {
                      "type": "string",
                      "description": "Transaction currency of debit",
                      "example": "UAH",
                      "examples": [
                        "UAH"
                      ]
                    },
                    "description": {
                      "type": "string",
                      "description": "Payment description",
                      "example": "test",
                      "examples": [
                        "test"
                      ]
                    },
                    "end_date": {
                      "type": "integer",
                      "format": "timestamp-ms",
                      "description": "Date of payment edition/end"
                    },
                    "ip": {
                      "type": "string",
                      "description": "Sender's IP address"
                    },
                    "is_3ds": {
                      "type": "boolean",
                      "description": "Possible values:\n* `true` - transaction passed with 3DS\n* `false` - transaction passed without 3DS"
                    },
                    "liqpay_order_id": {
                      "type": "string",
                      "description": "Payment order_id in LiqPay system",
                      "example": "NYMK3AE61501685438251925",
                      "examples": [
                        "NYMK3AE61501685438251925"
                      ]
                    },
                    "mpi_eci": {
                      "type": "integer",
                      "enum": [
                        5,
                        6,
                        7
                      ],
                      "description": "Possible values:\n* `5` - the transaction passed with 3DS (issuer and acquirer support 3d Secure technology)\n* `6` - the issuer of the payer card does not support 3d Secure technology\n* `7` - the operation passed without 3d Secure",
                      "example": 7,
                      "examples": [
                        7
                      ]
                    },
                    "order_id": {
                      "type": "string",
                      "description": "Order_id payment",
                      "example": "98R1U1OV1485849059893399",
                      "examples": [
                        "98R1U1OV1485849059893399"
                      ]
                    },
                    "payment_id": {
                      "type": "number",
                      "description": "Payment id in LiqPay system",
                      "example": 165162,
                      "examples": [
                        165162
                      ]
                    },
                    "paytype": {
                      "type": "string",
                      "enum": [
                        "card",
                        "privat24",
                        "moment_part",
                        "cash",
                        "invoice",
                        "qr"
                      ],
                      "description": "Methods of payment. Possible values:\n* `card` - card payment\n* `privat24` - with privat24 account\n* `moment_part` - installments\n* `cash` - cash\n* `invoice` - to email\n* `qr` - qr code scanning",
                      "example": "card",
                      "examples": [
                        "card"
                      ]
                    },
                    "public_key": {
                      "type": "string",
                      "description": "Shop public key",
                      "example": "i000000000",
                      "examples": [
                        "i000000000"
                      ]
                    },
                    "receiver_commission": {
                      "type": "number",
                      "description": "Receiver comission in payment currency",
                      "example": 0.0,
                      "examples": [
                        0.0
                      ]
                    },
                    "rrn_debit": {
                      "type": "string",
                      "description": "Unique transaction ID in authorization and settlement system of issuer bank `Retrieval Reference number`",
                      "example": "0006637102400",
                      "examples": [
                        "0006637102400"
                      ]
                    },
                    "sender_bonus": {
                      "type": "number",
                      "description": "Sender's bonus in the payment currency",
                      "example": 0.0,
                      "examples": [
                        0.0
                      ]
                    },
                    "sender_card_bank": {
                      "type": "string",
                      "description": "Sender's card bank",
                      "example": "pb",
                      "examples": [
                        "pb"
                      ]
                    },
                    "sender_card_country": {
                      "type": "string",
                      "description": "Sender's card country. Digital [ISO 3166-1 code](https://en.wikipedia.org/wiki/ISO_3166-1)",
                      "example": 804,
                      "examples": [
                        804
                      ]
                    },
                    "sender_card_mask2": {
                      "type": "string",
                      "description": "Sender's card",
                      "example": "414961*99",
                      "examples": [
                        "414961*99"
                      ]
                    },
                    "sender_card_type": {
                      "type": "string",
                      "description": "Sender's card type MC/Visa",
                      "example": "visa",
                      "examples": [
                        "visa"
                      ]
                    },
                    "sender_commission": {
                      "type": "number",
                      "description": "Commission from the sender in the payment currency",
                      "example": 0.0,
                      "examples": [
                        0.0
                      ]
                    },
                    "sender_first_name": {
                      "type": "string",
                      "description": "The name of the sender",
                      "example": "first name",
                      "examples": [
                        "first name"
                      ]
                    },
                    "sender_last_name": {
                      "type": "string",
                      "description": "Sender's last name",
                      "example": "last name",
                      "examples": [
                        "last name"
                      ]
                    },
                    "sender_phone": {
                      "type": "string",
                      "description": "Sender's phone number",
                      "example": "380950000001",
                      "examples": [
                        "380950000001"
                      ]
                    },
                    "status": {
                      "type": "string",
                      "enum": [
                        "error",
                        "failure",
                        "reversed",
                        "success",
                        "3ds_verify",
                        "cvv_verify",
                        "receiver_verify",
                        "sender_verify",
                        "hold_wait",
                        "wait_accept",
                        "wait_secure"
                      ],
                      "description": "Payment status.\nAvailable values:\nFinal payment statuses\n* `error` - Failed payment. Data is incorrect\n* `failure` - Failed payment\n* `reversed` - Payment refunded\n* `success` - Successful payment\nStatuses that required payment confirmation\n* `3ds_verify` - 3DS verification is required.\n To finish the payment you will require a [3ds_verify](https://www.liqpay.ua/en/doc/api/confirmation/3ds)\n* `cvv_verify` - Sender's card CVV is required. To finish the payment you will require a [cvv_verify](https://www.liqpay.ua/en/doc/api/confirmation/CVV)\n`otp_verify` OTP confirmation is required. OTP is sent to a customer phone number.\n To finish the payment you will require a [otp_verify](https://www.liqpay.ua/en/doc/api/confirmation/OTP)\n* `receiver_verify` - Receiver additional data is required. To finish the payment you will require a [receiver_verify](https://www.liqpay.ua/en/doc/api/confirmation/receiver_verify)\n* `sender_verify` - Sender's additional data is required.\n To finish the payment you will require a [sender_verify](https://www.liqpay.ua/en/doc/api/confirmation/sender_verify)\nOther payment statuses\n* `hold_wait` - Amount was successfully blocked on the sender's account\n* `wait_accept` - Money are withdrawn from client but the store is still not verified. If the store is not activated for 60 days, payment will be automatically cancelled\n* `wait_secure` - Payment is verified",
                      "example": "hold_wait",
                      "examples": [
                        "hold_wait"
                      ]
                    },
                    "transaction_id": {
                      "type": "number",
                      "description": "Id transactions in the LiqPay system",
                      "example": 165162,
                      "examples": [
                        165162
                      ]
                    },
                    "type": {
                      "type": "string",
                      "description": "Payment type",
                      "example": "hold",
                      "examples": [
                        "hold"
                      ]
                    },
                    "version": {
                      "type": "integer",
                      "enum": [
                        3
                      ],
                      "default": 3,
                      "description": "Version API",
                      "example": 3,
                      "examples": [
                        3
                      ]
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/request?path=internet_acquiring.two_step.complete": {
      "post": {
        "summary": "Internet acquiring. Two-step payment. Completion of payment",
        "operationId": "internet_acquiring/two_step/complete",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "version": {
                    "type": "integer",
                    "enum": [
                      3
                    ],
                    "default": 3,
                    "description": "Version API",
                    "example": 3,
                    "examples": [
                      3
                    ]
                  },
                  "public_key": {
                    "type": "string",
                    "description": "Public key - the store identifier. You can get the key in the [store settings](https://www.liqpay.ua/en/adminbusiness)"
                  },
                  "action": {
                    "type": "string",
                    "enum": [
                      "hold_completion"
                    ],
                    "default": "hold_completion",
                    "example": "hold_completion",
                    "examples": [
                      "hold_completion"
                    ]
                  },
                  "amount": {
                    "type": "number",
                    "description": "Payment amount",
                    "example": 5.0,
                    "examples": [
                      5.0,
                      7.34
                    ]
                  },
                  "order_id": {
                    "type": "string",
                    "maxLength": 255,
                    "description": "Unique purchase ID in your shop",
                    "example": "order_id_1",
                    "examples": [
                      "order_id_1"
                    ]
                  },
                  "rro_info": {
                    "type": "object",
                    "properties": {
                      "items": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "amount": {
                              "type": "number",
                              "description": "Quantity/volume",
                              "example": 2,
                              "examples": [
                                2
                              ]
                            },
                            "cost": {
                              "type": "number",
                              "description": "The cost of all units of the specified product in the receipt (number of units * unit cost)",
                              "example": 404,
                              "examples": [
                                404
                              ]
                            },
                            "id": {
                              "type": "integer",
                              "description": "Item ID. You can get it in the Liqpay account - SCR - Kasa - Goods",
                              "example": 123456,
                              "examples": [
                                123456
                              ]
                            },
                            "price": {
                              "type": "number",
                              "description": "Unit cost of goods",
                              "example": 202,
                              "examples": [
                                202
                              ]
                            }
                          },
                          "required": [
                            "amount",
                            "cost",
                            "id",
                            "price"
                          ]
                        },
                        "description": "Data about products for which payment is performed"
                      },
                      "delivery_emails": {
                        "type": "array",
                        "items": {
                          "type": "string",
                          "format": "email",
                          "example": "email1@email.com",
                          "examples": [
                            "email1@email.com",
                            "email2@email.com"
                          ]
                        },
                        "description": "List of e-mails to which receipts should be sent after fiscalization"
                      }
                    },
                    "description": "Data for fiscalization"
                  }
                },
                "required": [
                  "version",
                  "public_key",
                  "action",
                  "amount",
                  "order_id"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "acq_id": {
                      "type": "number",
                      "description": "Acquirer ID",
                      "example": 414963,
                      "examples": [
                        414963
                      ]
                    },
                    "action": {
                      "type": "string",
                      "enum": [
                        "pay",
                        "hold",
                        "paysplit",
                        "subscribe",
                        "paydonate",
                        "auth",
                        "regular"
                      ],
                      "description": "Transaction type. Possible values:\n* `pay` - payment\n* `hold` - amount of hold on sender's account\n* `paysplit` - splitting payments\n* `subscribe` - creation of a regular payment\n* `paydonate` - donation\n* `auth` - card preauth\n* `regular` - regular payment",
                      "example": "hold",
                      "examples": [
                        "hold"
                      ]
                    },
                    "agent_commission": {
                      "type": "number",
                      "description": "Agent comission in payment currency",
                      "example": 0.0,
                      "examples": [
                        0.0
                      ]
                    },
                    "amount": {
                      "type": "number",
                      "description": "Payment amount",
                      "example": 0.02,
                      "examples": [
                        0.02
                      ]
                    },
                    "amount_bonus": {
                      "type": "number",
                      "description": "Payer bonus amount in payment currency debit",
                      "example": 0.0,
                      "examples": [
                        0.0
                      ]
                    },
                    "amount_credit": {
                      "type": "number",
                      "description": "Payment amount for credit in currency of `currency_credit`",
                      "example": 0.02,
                      "examples": [
                        0.02
                      ]
                    },
                    "amount_debit": {
                      "type": "number",
                      "description": "Payment amount for debit in currency of `currency_debit`",
                      "example": 0.02,
                      "examples": [
                        0.02
                      ]
                    },
                    "authcode_credit": {
                      "type": "string",
                      "description": "Authorization code for transaction of credit",
                      "example": "002970",
                      "examples": [
                        "002970"
                      ]
                    },
                    "authcode_debit": {
                      "type": "string",
                      "description": "Authorization code for transaction of debit",
                      "example": "751279",
                      "examples": [
                        "751279"
                      ]
                    },
                    "card_token": {
                      "type": "string",
                      "description": "Sender's card token",
                      "example": "2DFBFE626B734161130DE81E971E948D6F260",
                      "examples": [
                        "2DFBFE626B734161130DE81E971E948D6F260"
                      ]
                    },
                    "commission_credit": {
                      "type": "number",
                      "description": "Commission from the receiver in `currency_credit`",
                      "example": 0.0,
                      "examples": [
                        0.0
                      ]
                    },
                    "commission_debit": {
                      "type": "number",
                      "description": "Commission from the sender in `currency_debit`",
                      "example": 0.0,
                      "examples": [
                        0.0
                      ]
                    },
                    "completion_date": {
                      "type": "integer",
                      "format": "timestamp-ms",
                      "description": "Charge date",
                      "example": 1501681656973,
                      "examples": [
                        1501681656973
                      ]
                    },
                    "create_date": {
                      "type": "integer",
                      "format": "timestamp-ms",
                      "description": "Date of payment creation",
                      "example": 1501681569734,
                      "examples": [
                        1501681569734
                      ]
                    },
                    "currency": {
                      "type": "string",
                      "description": "Payment currency",
                      "example": "UAH",
                      "examples": [
                        "UAH"
                      ]
                    },
                    "currency_credit": {
                      "type": "string",
                      "description": "Transaction currency of credit",
                      "example": "UAH",
                      "examples": [
                        "UAH"
                      ]
                    },
                    "currency_debit": {
                      "type": "string",
                      "description": "Transaction currency of debit",
                      "example": "UAH",
                      "examples": [
                        "UAH"
                      ]
                    },
                    "description": {
                      "type": "string",
                      "description": "Payment description",
                      "example": "test",
                      "examples": [
                        "test"
                      ]
                    },
                    "end_date": {
                      "type": "integer",
                      "format": "timestamp-ms",
                      "description": "Date of payment edition/end",
                      "example": 1501681657732,
                      "examples": [
                        1501681657732
                      ]
                    },
                    "is_3ds": {
                      "type": "boolean",
                      "description": "Possible values:\n* `true` - transaction passed with 3DS\n* `false` - transaction passed without 3DS"
                    },
                    "liqpay_order_id": {
                      "type": "string",
                      "description": "Payment order_id in LiqPay system",
                      "example": "NYMK3AE61501685438251925",
                      "examples": [
                        "NYMK3AE61501685438251925"
                      ]
                    },
                    "mpi_eci": {
                      "type": "integer",
                      "enum": [
                        5,
                        6,
                        7
                      ],
                      "description": "Possible values:\n* `5` - the transaction passed with 3DS (issuer and acquirer support 3d Secure technology)\n* `6` - the issuer of the payer card does not support 3d Secure technology\n* `7` - the operation passed without 3d Secure",
                      "example": 7,
                      "examples": [
                        7
                      ]
                    },
                    "order_id": {
                      "type": "string",
                      "description": "Order_id payment",
                      "example": "98R1U1OV1485849059893399",
                      "examples": [
                        "98R1U1OV1485849059893399"
                      ]
                    },
                    "payment_id": {
                      "type": "number",
                      "description": "Payment id in LiqPay system",
                      "example": 165160,
                      "examples": [
                        165160
                      ]
                    },
                    "paytype": {
                      "type": "string",
                      "enum": [
                        "card",
                        "privat24",
                        "moment_part",
                        "cash",
                        "invoice",
                        "qr"
                      ],
                      "description": "Methods of payment. Possible values:\n* `card` - card payment\n* `privat24` - with privat24 account\n* `moment_part` - installments\n* `cash` - cash\n* `invoice` - to email\n* `qr` - qr code scanning",
                      "example": "card",
                      "examples": [
                        "card"
                      ]
                    },
                    "public_key": {
                      "type": "string",
                      "description": "Shop public key",
                      "example": "i000000000",
                      "examples": [
                        "i000000000"
                      ]
                    },
                    "receiver_commission": {
                      "type": "number",
                      "description": "Receiver comission in payment currency",
                      "example": 0.0,
                      "examples": [
                        0.0
                      ]
                    },
                    "rrn_credit": {
                      "type": "string",
                      "description": "Unique transaction ID in authorization and settlement system of issuer bank `Retrieval Reference number`",
                      "example": "000663205525",
                      "examples": [
                        "000663205525"
                      ]
                    },
                    "rrn_debit": {
                      "type": "string",
                      "description": "Unique transaction ID in authorization and settlement system of issuer bank `Retrieval Reference number`",
                      "example": "000663204729",
                      "examples": [
                        "000663204729"
                      ]
                    },
                    "sender_bonus": {
                      "type": "number",
                      "description": "Sender's bonus in the payment currency",
                      "example": 0.0,
                      "examples": [
                        0.0
                      ]
                    },
                    "sender_card_bank": {
                      "type": "string",
                      "description": "Sender's card bank",
                      "example": "pb",
                      "examples": [
                        "pb"
                      ]
                    },
                    "sender_card_country": {
                      "type": "string",
                      "description": "Sender's card country. Digital [ISO 3166-1 code](https://en.wikipedia.org/wiki/ISO_3166-1)",
                      "example": 804,
                      "examples": [
                        804
                      ]
                    },
                    "sender_card_mask2": {
                      "type": "string",
                      "description": "Sender's card",
                      "example": "414961*99",
                      "examples": [
                        "414961*99"
                      ]
                    },
                    "sender_card_type": {
                      "type": "string",
                      "description": "Sender's card type MC/Visa",
                      "example": "visa",
                      "examples": [
                        "visa"
                      ]
                    },
                    "sender_commission": {
                      "type": "number",
                      "description": "Commission from the sender in the payment currency",
                      "example": 0.0,
                      "examples": [
                        0.0
                      ]
                    },
                    "sender_first_name": {
                      "type": "string",
                      "description": "The name of the sender",
                      "example": "first name",
                      "examples": [
                        "first name"
                      ]
                    },
                    "sender_last_name": {
                      "type": "string",
                      "description": "Sender's last name",
                      "example": "last name",
                      "examples": [
                        "last name"
                      ]
                    },
                    "sender_phone": {
                      "type": "string",
                      "description": "Sender's phone number",
                      "example": "380950000001",
                      "examples": [
                        "380950000001"
                      ]
                    },
                    "status": {
                      "type": "string",
                      "enum": [
                        "error",
                        "failure",
                        "success"
                      ],
                      "description": "Payment status.\nAvailable values:\nFinal payment statuses\n* `error` - Failed payment. Data is incorrect\n* `failure` - Failed payment\n* `success` - Successful payment",
                      "example": "success",
                      "examples": [
                        "success"
                      ]
                    },
                    "transaction_id": {
                      "type": "number",
                      "description": "Id transactions in the LiqPay system",
                      "example": 165160,
                      "examples": [
                        165160
                      ]
                    },
                    "type": {
                      "type": "string",
                      "description": "Payment type",
                      "example": "hold",
                      "examples": [
                        "hold"
                      ]
                    },
                    "version": {
                      "type": "integer",
                      "enum": [
                        3
                      ],
                      "default": 3,
                      "description": "Version API",
                      "example": 3,
                      "examples": [
                        3
                      ]
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/request?path=internet_acquiring.invoice.units": {
      "post": {
        "summary": "Internet acquiring. Invoice. ",
        "operationId": "internet_acquiring/invoice/units",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "version": {
                    "type": "integer",
                    "enum": [
                      3
                    ],
                    "default": 3,
                    "description": "Version API"
                  },
                  "action": {
                    "type": "string",
                    "enum": [
                      "invoice_units_get_list",
                      "invoice_units_get_list_by_lang"
                    ],
                    "description": "`invoice_units_get_list`: if `language` is NOT specified, returns the list in the form - `id`, `full_name_en`, `short_name_en`, `full_name_uk`, `short_name_uk` if `language` is specified, returns only for the specified locale if `language` is specified and `hide_name_lang` = true, it returns in the form - `id`, `full_name`, `short_name`\n`invoice_units_get_list_by_lang`: returns a list of units in the form (`id`, `full_name`, `short_name`)"
                  },
                  "hide_name_lang": {
                    "type": "boolean",
                    "description": "`true`, `false` - only as `language` is passed"
                  },
                  "language": {
                    "type": "string",
                    "enum": [
                      "uk",
                      "en"
                    ],
                    "default": "uk",
                    "description": "Customer's language"
                  }
                },
                "required": [
                  "version",
                  "action"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string",
                          "description": "unique number"
                        },
                        "full_name_uk": {
                          "type": "string",
                          "description": "full name in Ukrainian"
                        },
                        "full_name_en": {
                          "type": "string",
                          "description": "full name in English"
                        },
                        "short_name_uk": {
                          "type": "string",
                          "description": "short name in Ukrainian"
                        },
                        "short_name_en": {
                          "type": "string",
                          "description": "short name in English"
                        }
                      }
                    },
                    {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string",
                          "description": "unique number"
                        },
                        "full_name": {
                          "type": "string",
                          "description": "full name"
                        },
                        "short_name": {
                          "type": "string",
                          "description": "short name"
                        }
                      }
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/api/request?path=internet_acquiring.invoice.issue": {
      "post": {
        "summary": "Internet acquiring. Invoice. Issuing the invoice",
        "operationId": "internet_acquiring/invoice/issue",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "version": {
                    "type": "integer",
                    "enum": [
                      3
                    ],
                    "default": 3,
                    "description": "Version API",
                    "example": 3,
                    "examples": [
                      3
                    ]
                  },
                  "public_key": {
                    "type": "string",
                    "description": "Public key - the store identifier. You can get the key in the [store settings](https://www.liqpay.ua/en/adminbusiness)"
                  },
                  "action": {
                    "type": "string",
                    "enum": [
                      "invoice_send"
                    ],
                    "default": "invoice_send",
                    "example": "invoice_send",
                    "examples": [
                      "invoice_send"
                    ]
                  },
                  "amount": {
                    "type": "number",
                    "description": "Payment amount",
                    "example": 5.0,
                    "examples": [
                      5.0,
                      7.34,
                      1.0
                    ]
                  },
                  "currency": {
                    "type": "string",
                    "enum": [
                      "USD",
                      "EUR",
                      "UAH"
                    ],
                    "description": "Payment currency",
                    "example": "USD",
                    "examples": [
                      "USD"
                    ]
                  },
                  "description": {
                    "type": "string",
                    "description": "Payment description"
                  },
                  "email": {
                    "type": "string",
                    "description": "Customer's e-mail to send invoice (`phone` or `email` required parameters for transmission)",
                    "example": "client-email@gmail.com",
                    "examples": [
                      "client-email@gmail.com"
                    ]
                  },
                  "order_id": {
                    "type": "string",
                    "maxLength": 255,
                    "description": "Unique purchase ID in your shop",
                    "example": "order_id_1",
                    "examples": [
                      "order_id_1"
                    ]
                  },
                  "phone": {
                    "type": "string",
                    "description": "The phone number to which the invoice will be sent as a push notification to the Privat24 mobile application (`phone` or `email` required parameters for transmission)",
                    "example": "+380950000001",
                    "examples": [
                      "+380950000001",
                      "380950000001"
                    ]
                  },
                  "action_payment": {
                    "type": "string",
                    "enum": [
                      "pay",
                      "hold",
                      "subscribe",
                      "paydonate"
                    ],
                    "description": "Transaction type. Possible values:\n* `pay` - payment\n* `hold` - amount of hold on sender's account\n* `subscribe` - regular [payment](https://www.liqpay.ua/en/doc/api/internet_acquiring/subscription)\n* `paydonate` - donation"
                  },
                  "expired_date": {
                    "type": "string",
                    "format": "date-time-liqpay",
                    "description": "Date and time until which customer is able to pay invoice by `UTC`. Should be sent in the following format `2016-04-24 00:00:00`"
                  },
                  "goods": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "amount": {
                          "type": "number",
                          "description": "Quantity/volume",
                          "example": 1,
                          "examples": [
                            1,
                            10,
                            100
                          ]
                        },
                        "count": {
                          "type": "integer",
                          "description": "Count",
                          "example": 2,
                          "examples": [
                            2,
                            1
                          ]
                        },
                        "unit": {
                          "type": "string",
                          "description": "Unit",
                          "example": "pcs.",
                          "examples": [
                            "pcs.",
                            "шт."
                          ]
                        },
                        "name": {
                          "type": "string",
                          "description": "Name",
                          "example": "USB",
                          "examples": [
                            "USB",
                            "Phone",
                            "телефон"
                          ]
                        }
                      },
                      "required": [
                        "amount",
                        "count",
                        "unit",
                        "price"
                      ]
                    },
                    "description": "Units of measurement can be passed in two ways: independently through the `unit` parameter, or using the invoice_units API reference"
                  },
                  "language": {
                    "type": "string",
                    "enum": [
                      "uk",
                      "en"
                    ],
                    "default": "uk",
                    "description": "Customer's language"
                  },
                  "result_url": {
                    "type": "string",
                    "format": "uri",
                    "maxLength": 510,
                    "description": "URL of your shop where the buyer would be redirected after completion of the purchase"
                  },
                  "server_url": {
                    "type": "string",
                    "format": "uri",
                    "maxLength": 510,
                    "description": "URL API in your store for notifications of payment status change (`server` -> `server`). [Learn more](https://www.liqpay.ua/en/doc/api/callback)"
                  }
                },
                "required": [
                  "version",
                  "public_key",
                  "action",
                  "amount",
                  "currency",
                  "description",
                  "email",
                  "order_id",
                  "phone"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "action": {
                      "type": "string",
                      "enum": [
                        "pay",
                        "hold",
                        "paysplit",
                        "subscribe",
                        "paydonate",
                        "auth",
                        "regular"
                      ],
                      "description": "Transaction type. Possible values:\n* `pay` - payment\n* `hold` - amount of hold on sender's account\n* `paysplit` - splitting payments\n* `subscribe` - creation of a regular payment\n* `paydonate` - donation\n* `auth` - card preauth\n* `regular` - regular payment",
                      "example": "pay",
                      "examples": [
                        "pay"
                      ]
                    },
                    "amount": {
                      "type": "number",
                      "description": "Payment amount",
                      "example": 0.03,
                      "examples": [
                        0.03
                      ]
                    },
                    "currency": {
                      "type": "string",
                      "description": "Payment currency",
                      "example": "UAH",
                      "examples": [
                        "UAH"
                      ]
                    },
                    "description": {
                      "type": "string",
                      "description": "Payment description",
                      "example": "Invoice",
                      "examples": [
                        "Invoice"
                      ]
                    },
                    "href": {
                      "type": "string",
                      "description": "Link to invoice",
                      "example": "https://liqpay.ua/apipay/invoice/150112455893001_6480_GBe3Mxwnq2O7G0MLX4gkQLtZf2",
                      "examples": [
                        "https://liqpay.ua/apipay/invoice/150112455893001_6480_GBe3Mxwnq2O7G0MLX4gkQLtZf2"
                      ]
                    },
                    "id": {
                      "type": "number",
                      "description": "Payment id in LiqPay system",
                      "example": 6173,
                      "examples": [
                        6173
                      ]
                    },
                    "order_id": {
                      "type": "string",
                      "description": "Order_id payment",
                      "example": "98R1U1OV1485849059893399",
                      "examples": [
                        "98R1U1OV1485849059893399"
                      ]
                    },
                    "receiver_type": {
                      "type": "string",
                      "description": "Receive channel type",
                      "example": "email",
                      "examples": [
                        "email"
                      ]
                    },
                    "receiver_value": {
                      "type": "string",
                      "description": "The value obtained in the parameter `receiver_type`",
                      "example": "test@gmail.com",
                      "examples": [
                        "test@gmail.com"
                      ]
                    },
                    "status": {
                      "type": "string",
                      "enum": [
                        "error",
                        "failure",
                        "success",
                        "invoice_wait"
                      ],
                      "description": "Payment status.\nAvailable values:\nFinal payment statuses\n* `error` - Failed payment. Data is incorrect\n* `failure` - Failed payment\n* `success` - Successful payment\nOther payment statuses\n* `invoice_wait` - Invoice is created successfully, waiting for a payment",
                      "example": "invoice_wait",
                      "examples": [
                        "invoice_wait"
                      ]
                    },
                    "token": {
                      "type": "string",
                      "description": "Payment token",
                      "example": "150112455893001_6480_GBe3Mxwnq2O7G0MLX4gkQLtZf2",
                      "examples": [
                        "150112455893001_6480_GBe3Mxwnq2O7G0MLX4gkQLtZf2"
                      ]
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/request?path=internet_acquiring.invoice.cancel": {
      "post": {
        "summary": "Internet acquiring. Invoice. Invoice cancelation",
        "operationId": "internet_acquiring/invoice/cancel",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "version": {
                    "type": "integer",
                    "enum": [
                      3
                    ],
                    "default": 3,
                    "description": "Version API",
                    "example": 3,
                    "examples": [
                      3
                    ]
                  },
                  "public_key": {
                    "type": "string",
                    "description": "Public key - the store identifier. You can get the key in the [store settings](https://www.liqpay.ua/en/adminbusiness)"
                  },
                  "action": {
                    "type": "string",
                    "enum": [
                      "invoice_cancel"
                    ],
                    "default": "invoice_cancel",
                    "example": "invoice_cancel",
                    "examples": [
                      "invoice_cancel"
                    ]
                  },
                  "order_id": {
                    "type": "string",
                    "maxLength": 255,
                    "description": "Unique purchase ID in your shop",
                    "example": "order_id_1",
                    "examples": [
                      "order_id_1"
                    ]
                  }
                },
                "required": [
                  "version",
                  "public_key",
                  "action",
                  "order_id"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "invoice_id": {
                      "type": "number",
                      "description": "Unique identifier of the invoice",
                      "example": 6173,
                      "examples": [
                        6173
                      ]
                    },
                    "result": {
                      "type": "string",
                      "enum": [
                        "ok",
                        "error"
                      ],
                      "description": "The result of a request",
                      "example": "ok",
                      "examples": [
                        "ok"
                      ]
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/request?path=internet_acquiring.dcc": {
      "post": {
        "summary": "Internet acquiring. DCC",
        "operationId": "internet_acquiring/dcc",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "version": {
                    "type": "integer",
                    "enum": [
                      3
                    ],
                    "default": 3,
                    "description": "Version API"
                  },
                  "public_key": {
                    "type": "string",
                    "description": "Public key - the store identifier. You can get the key in the [store settings](https://www.liqpay.ua/en/adminbusiness)"
                  },
                  "action": {
                    "type": "string",
                    "enum": [
                      "pay"
                    ],
                    "default": "pay"
                  },
                  "amount": {
                    "type": "number",
                    "description": "Payment amount",
                    "example": 5.0,
                    "examples": [
                      5.0,
                      7.34
                    ]
                  },
                  "card": {
                    "type": "string",
                    "description": "Card number of the payer"
                  },
                  "card_cvv": {
                    "type": "string",
                    "description": "CVV/CVV2"
                  },
                  "card_exp_month": {
                    "type": "string",
                    "description": "Expiry month of the payer's card",
                    "example": "08",
                    "examples": [
                      "08"
                    ]
                  },
                  "card_exp_year": {
                    "type": "string",
                    "description": "Expiry year of the payer's card",
                    "example": "19",
                    "examples": [
                      "19"
                    ]
                  },
                  "card_token": {
                    "type": "string",
                    "description": "Sender's [card token](https://www.liqpay.ua/en/doc/api/internet_acquiring/token?tab=1). You don't need to transmit card data, when using a token",
                    "example": "B5BВB0D00B88B00ED00A00D0D",
                    "examples": [
                      "B5BВB0D00B88B00ED00A00D0D"
                    ]
                  },
                  "currency": {
                    "type": "string",
                    "enum": [
                      "USD",
                      "EUR",
                      "UAH"
                    ],
                    "description": "Payment currency"
                  },
                  "description": {
                    "type": "string",
                    "description": "Payment description"
                  },
                  "order_id": {
                    "type": "string",
                    "maxLength": 255,
                    "description": "Unique purchase ID in your shop"
                  },
                  "phone": {
                    "type": "string",
                    "description": "Payer's phone number. The OTP-password will be sent to this telephone number to confirm your payment, and the linked payer's LiqPay cabinet. The telephone number should be indicated in the international format (Ukraine `+380`)",
                    "example": "+380950000001",
                    "examples": [
                      "+380950000001",
                      "380950000001"
                    ]
                  },
                  "language": {
                    "type": "string",
                    "enum": [
                      "uk",
                      "en"
                    ],
                    "default": "uk",
                    "description": "Customer's language"
                  },
                  "recurringbytoken": {
                    "type": "string",
                    "format": "boolean-integer",
                    "enum": [
                      "1"
                    ],
                    "default": "1",
                    "description": "This parameter allows to generate payer `card_token` which you receive in callback request to `server_url`. `card_token` allows to make recurring payments without payer card requisites using API [paytoken](https://www.liqpay.ua/en/doc/api/internet_acquiring/token). To receive `card_token` please send in request value `1`"
                  },
                  "result_url": {
                    "type": "string",
                    "format": "uri",
                    "maxLength": 510,
                    "description": "URL of your shop where the buyer would be redirected after completion of the purchase"
                  },
                  "server_url": {
                    "type": "string",
                    "format": "uri",
                    "maxLength": 510,
                    "description": "URL API in your store for notifications of payment status change (`server` -> `server`). [Learn more](https://www.liqpay.ua/en/doc/api/callback)"
                  },
                  "sandbox": {
                    "type": "string",
                    "format": "boolean-integer",
                    "enum": [
                      "1"
                    ],
                    "default": "1",
                    "description": "Enables the testing environment for developers. Payer card will not be charged. To enable testing environment you will need to transmit value `1`. All test payments will have the status `sandbox` - successful test payment"
                  },
                  "is_dcc_debit": {
                    "type": "boolean",
                    "description": "* `true` - the transaction will be carried out using an alternative DCC amount.\n* `false` - the transaction will be carried out without DCC"
                  },
                  "prepare": {
                    "type": "string",
                    "format": "boolean-integer",
                    "enum": [
                      "tariffs"
                    ],
                    "default": "tariffs",
                    "description": "* `tariffs` - get DCC rate and alternative currency"
                  },
                  "sender": {
                    "type": "object",
                    "properties": {
                      "sender_first_name": {
                        "type": "string",
                        "description": "Sender's first name"
                      },
                      "sender_last_name": {
                        "type": "string",
                        "description": "Sender's last name"
                      },
                      "sender_country_code": {
                        "type": "string",
                        "description": "Country code of the sender. Digital [ISO 3166-1 code](https://en.wikipedia.org/wiki/ISO_3166-1)"
                      },
                      "sender_city": {
                        "type": "string",
                        "description": "Sender's city"
                      },
                      "sender_address": {
                        "type": "string",
                        "description": "Sender's address"
                      },
                      "sender_postal_code": {
                        "type": "string",
                        "description": "Sender's zip code"
                      }
                    },
                    "description": "Sender parameters"
                  }
                },
                "required": [
                  "version",
                  "public_key",
                  "action",
                  "amount",
                  "card",
                  "card_cvv",
                  "card_exp_month",
                  "card_exp_year",
                  "card_token",
                  "currency",
                  "description",
                  "order_id",
                  "phone",
                  "sandbox"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "acq_id": {
                      "type": "number",
                      "description": "Acquirer ID",
                      "example": 414963,
                      "examples": [
                        414963
                      ]
                    },
                    "action": {
                      "type": "string",
                      "enum": [
                        "pay",
                        "hold",
                        "paysplit",
                        "subscribe",
                        "paydonate",
                        "auth",
                        "regular"
                      ],
                      "description": "Transaction type. Possible values:\n* `pay` - payment\n* `hold` - amount of hold on sender's account\n* `paysplit` - splitting payments\n* `subscribe` - creation of a regular payment\n* `paydonate` - donation\n* `auth` - card preauth\n* `regular` - regular payment",
                      "example": "pay",
                      "examples": [
                        "pay"
                      ]
                    },
                    "agent_commission": {
                      "type": "number",
                      "description": "Agent comission in payment currency",
                      "example": 0.0,
                      "examples": [
                        0.0
                      ]
                    },
                    "amount": {
                      "type": "number",
                      "description": "Payment amount",
                      "example": 100.0,
                      "examples": [
                        100.0
                      ]
                    },
                    "amount_bonus": {
                      "type": "number",
                      "description": "Payer bonus amount in payment currency debit",
                      "example": 0.0,
                      "examples": [
                        0.0
                      ]
                    },
                    "amount_credit": {
                      "type": "number",
                      "description": "Payment amount for credit in currency of `currency_credit`",
                      "example": 100.0,
                      "examples": [
                        100.0
                      ]
                    },
                    "amount_debit": {
                      "type": "number",
                      "description": "Payment amount for debit in currency of `currency_debit`",
                      "example": 100.0,
                      "examples": [
                        100.0
                      ]
                    },
                    "authcode_credit": {
                      "type": "string",
                      "description": "Authorization code for transaction of credit",
                      "example": "329007",
                      "examples": [
                        "329007"
                      ]
                    },
                    "authcode_debit": {
                      "type": "string",
                      "description": "Authorization code for transaction of debit",
                      "example": "388000",
                      "examples": [
                        "388000"
                      ]
                    },
                    "bonus_procent": {
                      "type": "number",
                      "description": "Discount rate in percent",
                      "example": 0.0,
                      "examples": [
                        0.0
                      ]
                    },
                    "bonus_type": {
                      "type": "string",
                      "enum": [
                        "bonusplus",
                        "discount_club",
                        "personal",
                        "promo"
                      ],
                      "description": "Bonus type, ",
                      "example": "bonusplus",
                      "examples": [
                        "bonusplus"
                      ]
                    },
                    "card_token": {
                      "type": "string",
                      "description": "Sender's card token",
                      "example": "CDRES215658546306B200061FCC53A86B",
                      "examples": [
                        "CDRES215658546306B200061FCC53A86B"
                      ]
                    },
                    "commission_credit": {
                      "type": "number",
                      "description": "Commission from the receiver in `currency_credit`",
                      "example": 0.0,
                      "examples": [
                        0.0
                      ]
                    },
                    "commission_debit": {
                      "type": "number",
                      "description": "Commission from the sender in `currency_debit`",
                      "example": 0.0,
                      "examples": [
                        0.0
                      ]
                    },
                    "create_date": {
                      "type": "integer",
                      "format": "timestamp-ms",
                      "description": "Date of payment creation",
                      "example": 1501685446633,
                      "examples": [
                        1501685446633
                      ]
                    },
                    "currency": {
                      "type": "string",
                      "description": "Payment currency",
                      "example": "UAH",
                      "examples": [
                        "UAH"
                      ]
                    },
                    "currency_credit": {
                      "type": "string",
                      "description": "Transaction currency of credit",
                      "example": "UAH",
                      "examples": [
                        "UAH"
                      ]
                    },
                    "currency_debit": {
                      "type": "string",
                      "description": "Transaction currency of debit",
                      "example": "UAH",
                      "examples": [
                        "UAH"
                      ]
                    },
                    "description": {
                      "type": "string",
                      "description": "Payment description",
                      "example": "description",
                      "examples": [
                        "description"
                      ]
                    },
                    "end_date": {
                      "type": "integer",
                      "format": "timestamp-ms",
                      "description": "Date of payment edition/end",
                      "example": 1501685446633,
                      "examples": [
                        1501685446633
                      ]
                    },
                    "ip": {
                      "type": "string",
                      "description": "Sender's IP address",
                      "example": "8.8.8.8",
                      "examples": [
                        "8.8.8.8"
                      ]
                    },
                    "is_3ds": {
                      "type": "boolean",
                      "description": "Possible values:\n* `true` - transaction passed with 3DS\n* `false` - transaction passed without 3DS"
                    },
                    "liqpay_order_id": {
                      "type": "string",
                      "description": "Payment order_id in LiqPay system",
                      "example": "NYMK3AE61501685438251925",
                      "examples": [
                        "NYMK3AE61501685438251925"
                      ]
                    },
                    "mpi_eci": {
                      "type": "integer",
                      "enum": [
                        5,
                        6,
                        7
                      ],
                      "description": "Possible values:\n* `5` - the transaction passed with 3DS (issuer and acquirer support 3d Secure technology)\n* `6` - the issuer of the payer card does not support 3d Secure technology\n* `7` - the operation passed without 3d Secure",
                      "example": 7,
                      "examples": [
                        7
                      ]
                    },
                    "mpi_cres": {
                      "type": "string",
                      "description": "The value returned to ACS by the issuer's page after cardholder authentication"
                    },
                    "order_id": {
                      "type": "string",
                      "description": "Order_id payment",
                      "example": "98R1U1OV1485849059893399",
                      "examples": [
                        "98R1U1OV1485849059893399"
                      ]
                    },
                    "payment_id": {
                      "type": "number",
                      "description": "Payment id in LiqPay system",
                      "example": 165172,
                      "examples": [
                        165172
                      ]
                    },
                    "paytype": {
                      "type": "string",
                      "enum": [
                        "card",
                        "privat24",
                        "moment_part",
                        "cash",
                        "invoice",
                        "qr"
                      ],
                      "description": "Methods of payment. Possible values:\n* `card` - card payment\n* `privat24` - with privat24 account\n* `moment_part` - installments\n* `cash` - cash\n* `invoice` - to email\n* `qr` - qr code scanning",
                      "example": "card",
                      "examples": [
                        "card"
                      ]
                    },
                    "public_key": {
                      "type": "string",
                      "description": "Shop public key",
                      "example": "i000000000",
                      "examples": [
                        "i000000000"
                      ]
                    },
                    "receiver_commission": {
                      "type": "number",
                      "description": "Receiver comission in payment currency",
                      "example": 0.0,
                      "examples": [
                        0.0
                      ]
                    },
                    "status": {
                      "type": "string",
                      "enum": [
                        "activated",
                        "wait_accept"
                      ],
                      "description": "Possible values:\n* `activated` - the store is activated with refund\n* `wait_accept` - the store is activated without refund",
                      "example": "success",
                      "examples": [
                        "success"
                      ]
                    },
                    "rrn_credit": {
                      "type": "string",
                      "description": "Unique transaction ID in authorization and settlement system of issuer bank `Retrieval Reference number`",
                      "example": "000663747003",
                      "examples": [
                        "000663747003"
                      ]
                    },
                    "rrn_debit": {
                      "type": "string",
                      "description": "Unique transaction ID in authorization and settlement system of issuer bank `Retrieval Reference number`",
                      "example": "000663747000",
                      "examples": [
                        "000663747000"
                      ]
                    },
                    "sender_bonus": {
                      "type": "number",
                      "description": "Sender's bonus in the payment currency",
                      "example": 0.0,
                      "examples": [
                        0.0
                      ]
                    },
                    "sender_card_bank": {
                      "type": "string",
                      "description": "Sender's card bank",
                      "example": "pb",
                      "examples": [
                        "pb"
                      ]
                    },
                    "sender_card_country": {
                      "type": "string",
                      "description": "Sender's card country. Digital [ISO 3166-1 code](https://en.wikipedia.org/wiki/ISO_3166-1)",
                      "example": 804,
                      "examples": [
                        804
                      ]
                    },
                    "sender_card_mask2": {
                      "type": "string",
                      "description": "Sender's card",
                      "example": "473118*50",
                      "examples": [
                        "473118*50"
                      ]
                    },
                    "sender_card_type": {
                      "type": "string",
                      "description": "Sender's card type MC/Visa",
                      "example": "visa",
                      "examples": [
                        "visa"
                      ]
                    },
                    "sender_commission": {
                      "type": "number",
                      "description": "Commission from the sender in the payment currency",
                      "example": 0.0,
                      "examples": [
                        0.0
                      ]
                    },
                    "sender_first_name": {
                      "type": "string",
                      "description": "The name of the sender",
                      "example": "first_name",
                      "examples": [
                        "first_name"
                      ]
                    },
                    "sender_last_name": {
                      "type": "string",
                      "description": "Sender's last name",
                      "example": "last_name",
                      "examples": [
                        "last_name"
                      ]
                    },
                    "sender_phone": {
                      "type": "string",
                      "description": "Sender's phone number",
                      "example": "380950000001",
                      "examples": [
                        "380950000001"
                      ]
                    },
                    "status": {
                      "type": "string",
                      "enum": [
                        "error",
                        "failure",
                        "reversed",
                        "success",
                        "3ds_verify",
                        "cvv_verify",
                        "receiver_verify",
                        "sender_verify",
                        "wait_accept",
                        "wait_secure"
                      ],
                      "description": "Payment status.\nAvailable values:\nFinal payment statuses\n* `error` - Failed payment. Data is incorrect\n* `failure` - Failed payment\n* `reversed` - Payment refunded\n* `success` - Successful payment\nStatuses that required payment confirmation\n* `3ds_verify` - 3DS verification is required.\n To finish the payment you will require a [3ds_verify](https://www.liqpay.ua/en/doc/api/confirmation/3ds)\n* `cvv_verify` - Sender's card CVV is required. To finish the payment you will require a [cvv_verify](https://www.liqpay.ua/en/doc/api/confirmation/CVV)\n`otp_verify` OTP confirmation is required. OTP is sent to a customer phone number.\n To finish the payment you will require a [otp_verify](https://www.liqpay.ua/en/doc/api/confirmation/OTP)\n* `receiver_verify` - Receiver additional data is required. To finish the payment you will require a [receiver_verify](https://www.liqpay.ua/en/doc/api/confirmation/receiver_verify)\n* `sender_verify` - Sender's additional data is required.\n To finish the payment you will require a [sender_verify](https://www.liqpay.ua/en/doc/api/confirmation/sender_verify)\nOther payment statuses\n* `wait_accept` - Money are withdrawn from client but the store is still not verified. If the store is not activated for 60 days, payment will be automatically cancelled\n* `wait_secure` - Payment is verified"
                    },
                    "transaction_id": {
                      "type": "number",
                      "description": "Id transactions in the LiqPay system",
                      "example": 165172,
                      "examples": [
                        165172
                      ]
                    },
                    "type": {
                      "type": "string",
                      "description": "Payment type",
                      "example": "buy",
                      "examples": [
                        "buy"
                      ]
                    },
                    "version": {
                      "type": "integer",
                      "enum": [
                        3
                      ],
                      "default": 3,
                      "description": "Version API",
                      "example": 3,
                      "examples": [
                        3
                      ]
                    },
                    "dcc_allowed": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "amount": {
                            "type": "number",
                            "description": "Amount of payment in alternative currency",
                            "example": 3.5984,
                            "examples": [
                              3.5984
                            ]
                          },
                          "commission": {
                            "type": "number",
                            "description": "Commission on payment in alternative currency",
                            "example": 0.0,
                            "examples": [
                              0.0
                            ]
                          },
                          "currency": {
                            "type": "string",
                            "description": "Alternative currency",
                            "example": "USD",
                            "examples": [
                              "USD"
                            ]
                          },
                          "rate": {
                            "type": "number",
                            "description": "Conversion rate",
                            "example": 27.7905,
                            "examples": [
                              27.7905
                            ]
                          }
                        }
                      },
                      "description": "Data of alternative amount for payment with DCC"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/request?path=transferring_to_card": {
      "post": {
        "summary": "Transfer of funds from account to card",
        "operationId": "transferring_to_card",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "version": {
                    "type": "integer",
                    "enum": [
                      3
                    ],
                    "default": 3,
                    "description": "Version API",
                    "example": 3,
                    "examples": [
                      3
                    ]
                  },
                  "public_key": {
                    "type": "string",
                    "description": "Public key - the store identifier. You can get the key in the [store settings](https://www.liqpay.ua/en/adminbusiness)"
                  },
                  "action": {
                    "type": "string",
                    "enum": [
                      "p2pcredit"
                    ],
                    "default": "p2pcredit",
                    "example": "p2pcredit",
                    "examples": [
                      "p2pcredit"
                    ]
                  },
                  "amount": {
                    "type": "number",
                    "description": "Payment amount",
                    "example": 5.0,
                    "examples": [
                      5.0,
                      7.34,
                      1.0
                    ]
                  },
                  "currency": {
                    "type": "string",
                    "enum": [
                      "USD",
                      "EUR",
                      "UAH"
                    ],
                    "description": "Payment currency",
                    "example": "USD",
                    "examples": [
                      "USD"
                    ]
                  },
                  "description": {
                    "type": "string",
                    "description": "Payment description",
                    "example": "description text",
                    "examples": [
                      "description text"
                    ]
                  },
                  "ip": {
                    "type": "string",
                    "description": "Client IP"
                  },
                  "order_id": {
                    "type": "string",
                    "maxLength": 255,
                    "description": "Unique purchase ID in your shop",
                    "example": "order_id_1",
                    "examples": [
                      "order_id_1"
                    ]
                  },
                  "language": {
                    "type": "string",
                    "enum": [
                      "uk",
                      "en"
                    ],
                    "default": "uk",
                    "description": "Customer's language"
                  },
                  "server_url": {
                    "type": "string",
                    "format": "uri",
                    "maxLength": 510,
                    "description": "URL API in your store for notifications of payment status change (`server` -> `server`). [Learn more](https://www.liqpay.ua/doc/api/callback/)"
                  },
                  "taxed": {
                    "type": "string",
                    "enum": [
                      "Income is not subject to tax"
                    ],
                    "default": "Income is not subject to tax",
                    "description": "Sign of payment of taxes from the payment"
                  },
                  "receiver_account": {
                    "type": "object",
                    "properties": {
                      "receiver_account": {
                        "type": "string",
                        "description": "Recipient's account number"
                      },
                      "receiver_mfo": {
                        "type": "string",
                        "description": "Recipient's account MFI"
                      },
                      "receiver_okpo": {
                        "type": "string",
                        "description": "Recipient's account OKPO"
                      },
                      "receiver_company": {
                        "type": "string",
                        "description": "Name of recipient's current account"
                      }
                    },
                    "required": [
                      "receiver_account",
                      "receiver_mfo",
                      "receiver_okpo",
                      "receiver_company"
                    ],
                    "description": "Parameters for transfer to the current account"
                  },
                  "receiver_card": {
                    "type": "string",
                    "description": "Recipient's card number",
                    "example": "4731195301524633",
                    "examples": [
                      "4731195301524633"
                    ]
                  },
                  "receiver_card_token": {
                    "type": "string",
                    "description": "Recipient's card token",
                    "example": "B5BВB0D00B88B00ED00A00D0D",
                    "examples": [
                      "B5BВB0D00B88B00ED00A00D0D"
                    ]
                  },
                  "sender": {
                    "type": "object",
                    "properties": {
                      "sender_first_name": {
                        "type": "string",
                        "description": "Sender's first name"
                      },
                      "sender_last_name": {
                        "type": "string",
                        "description": "Sender's last name"
                      },
                      "sender_country_code": {
                        "type": "string",
                        "description": "Country code of the sender. Digital [ISO 3166-1 code](https://en.wikipedia.org/wiki/ISO_3166-1)"
                      },
                      "sender_city": {
                        "type": "string",
                        "description": "Sender's city"
                      },
                      "sender_address": {
                        "type": "string",
                        "description": "Sender's address"
                      },
                      "sender_postal_code": {
                        "type": "string",
                        "description": "Sender's zip code"
                      }
                    },
                    "description": "Sender parameters"
                  },
                  "receiver_first_name": {
                    "type": "string",
                    "description": "Recipient first name",
                    "example": "FirstName",
                    "examples": [
                      "FirstName"
                    ]
                  },
                  "receiver_last_name": {
                    "type": "string",
                    "description": "Recipient last name",
                    "example": "LastName",
                    "examples": [
                      "LastName"
                    ]
                  },
                  "customer": {
                    "type": "string",
                    "maxLength": 100,
                    "description": "Unique customer ID in your shop"
                  },
                  "info": {
                    "type": "string",
                    "description": "Information to add details to payment",
                    "example": "External information for payments",
                    "examples": [
                      "External information for payments"
                    ]
                  }
                },
                "required": [
                  "version",
                  "public_key",
                  "action",
                  "amount",
                  "currency",
                  "description",
                  "ip",
                  "order_id",
                  "receiver_card",
                  "receiver_card_token"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "acq_id": {
                      "type": "number",
                      "description": "Acquirer ID",
                      "example": 414963,
                      "examples": [
                        414963
                      ]
                    },
                    "action": {
                      "type": "string",
                      "enum": [
                        "pay",
                        "hold",
                        "paysplit",
                        "subscribe",
                        "paydonate",
                        "auth",
                        "regular"
                      ],
                      "description": "Transaction type. Possible values:\n* `pay` - payment\n* `hold` - amount of hold on sender's account\n* `paysplit` - splitting payments\n* `subscribe` - creation of a regular payment\n* `paydonate` - donation\n* `auth` - card preauth\n* `regular` - regular payment",
                      "example": "p2pcredit",
                      "examples": [
                        "p2pcredit"
                      ]
                    },
                    "agent_commission": {
                      "type": "number",
                      "description": "Agent comission in payment currency",
                      "example": 0.0,
                      "examples": [
                        0.0
                      ]
                    },
                    "amount": {
                      "type": "number",
                      "description": "Payment amount",
                      "example": 0.1,
                      "examples": [
                        0.1
                      ]
                    },
                    "amount_bonus": {
                      "type": "number",
                      "description": "Payer bonus amount in payment currency debit",
                      "example": 0.0,
                      "examples": [
                        0.0
                      ]
                    },
                    "amount_credit": {
                      "type": "number",
                      "description": "Payment amount for credit in currency of `currency_credit`",
                      "example": 0.1,
                      "examples": [
                        0.1
                      ]
                    },
                    "amount_debit": {
                      "type": "number",
                      "description": "Payment amount for debit in currency of `currency_debit`",
                      "example": 0.1,
                      "examples": [
                        0.1
                      ]
                    },
                    "commission_credit": {
                      "type": "number",
                      "description": "Commission from the receiver in `currency_credit`",
                      "example": 0.0,
                      "examples": [
                        0.0
                      ]
                    },
                    "commission_debit": {
                      "type": "number",
                      "description": "Commission from the sender in `currency_debit`",
                      "example": 0.0,
                      "examples": [
                        0.0
                      ]
                    },
                    "create_date": {
                      "type": "integer",
                      "format": "timestamp-ms",
                      "description": "Date of payment creation",
                      "example": 1501687336377,
                      "examples": [
                        1501687336377
                      ]
                    },
                    "currency": {
                      "type": "string",
                      "description": "Payment currency",
                      "example": "UAH",
                      "examples": [
                        "UAH"
                      ]
                    },
                    "currency_credit": {
                      "type": "string",
                      "description": "Transaction currency of credit",
                      "example": "UAH",
                      "examples": [
                        "UAH"
                      ]
                    },
                    "currency_debit": {
                      "type": "string",
                      "description": "Transaction currency of debit",
                      "example": "UAH",
                      "examples": [
                        "UAH"
                      ]
                    },
                    "description": {
                      "type": "string",
                      "description": "Payment description",
                      "example": "description text",
                      "examples": [
                        "description text"
                      ]
                    },
                    "end_date": {
                      "type": "integer",
                      "format": "timestamp-ms",
                      "description": "Date of payment edition/end",
                      "example": 1501687336377,
                      "examples": [
                        1501687336377
                      ]
                    },
                    "is_3ds": {
                      "type": "boolean",
                      "description": "Possible values:\n* `true` - transaction passed with 3DS\n* `false` - transaction passed without 3DS"
                    },
                    "liqpay_order_id": {
                      "type": "string",
                      "description": "Payment order_id in LiqPay system",
                      "example": "NYMK3AE61501685438251925",
                      "examples": [
                        "NYMK3AE61501685438251925"
                      ]
                    },
                    "mpi_eci": {
                      "type": "integer",
                      "enum": [
                        5,
                        6,
                        7
                      ],
                      "description": "Possible values:\n* `5` - the transaction passed with 3DS (issuer and acquirer support 3d Secure technology)\n* `6` - the issuer of the payer card does not support 3d Secure technology\n* `7` - the operation passed without 3d Secure",
                      "example": 7,
                      "examples": [
                        7
                      ]
                    },
                    "order_id": {
                      "type": "string",
                      "description": "Order_id payment",
                      "example": "98R1U1OV1485849059893399",
                      "examples": [
                        "98R1U1OV1485849059893399"
                      ]
                    },
                    "payment_id": {
                      "type": "number",
                      "description": "Payment id in LiqPay system",
                      "example": 165189,
                      "examples": [
                        165189
                      ]
                    },
                    "public_key": {
                      "type": "string",
                      "description": "Shop public key",
                      "example": "i000000000",
                      "examples": [
                        "i000000000"
                      ]
                    },
                    "receiver_commission": {
                      "type": "number",
                      "description": "Receiver comission in payment currency",
                      "example": 0.0,
                      "examples": [
                        0.0
                      ]
                    },
                    "redirect_to": {
                      "type": "string",
                      "description": "The link to which a customer has to be redirected to confirm the payment with 3D-Secure"
                    },
                    "sender_bonus": {
                      "type": "number",
                      "description": "Sender's bonus in the payment currency",
                      "example": 0.0,
                      "examples": [
                        0.0
                      ]
                    },
                    "sender_commission": {
                      "type": "number",
                      "description": "Commission from the sender in the payment currency",
                      "example": 0.0,
                      "examples": [
                        0.0
                      ]
                    },
                    "status": {
                      "type": "string",
                      "enum": [
                        "error",
                        "failure",
                        "success"
                      ],
                      "description": "Payment status.\nAvailable values:\nFinal payment statuses\n* `error` - Failed payment. Data is incorrect\n* `failure` - Failed payment\n* `success` - Successful payment",
                      "example": "success",
                      "examples": [
                        "success"
                      ]
                    },
                    "transaction_id": {
                      "type": "number",
                      "description": "Id transactions in the LiqPay system",
                      "example": 165189,
                      "examples": [
                        165189
                      ]
                    },
                    "type": {
                      "type": "string",
                      "description": "Payment type",
                      "example": "p2pcredit",
                      "examples": [
                        "p2pcredit"
                      ]
                    },
                    "version": {
                      "type": "integer",
                      "enum": [
                        3
                      ],
                      "default": 3,
                      "description": "Version API",
                      "example": 3,
                      "examples": [
                        3
                      ]
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/request?path=p2pdebit": {
      "post": {
        "summary": "Transfer of funds from cards to account",
        "operationId": "p2pdebit",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "version": {
                    "type": "integer",
                    "enum": [
                      3
                    ],
                    "default": 3,
                    "description": "Version API"
                  },
                  "public_key": {
                    "type": "string",
                    "description": "Public key - the store identifier. You can get the key in the [store settings](https://www.liqpay.ua/en/adminbusiness)"
                  },
                  "action": {
                    "type": "string",
                    "enum": [
                      "p2pdebit"
                    ],
                    "default": "p2pdebit"
                  },
                  "amount": {
                    "type": "number",
                    "description": "Payment amount",
                    "example": 5.0,
                    "examples": [
                      5.0,
                      7.34
                    ]
                  },
                  "card": {
                    "type": "string",
                    "description": "Card number of the payer"
                  },
                  "card_cvv": {
                    "type": "string",
                    "description": "CVV/CVV2"
                  },
                  "card_exp_month": {
                    "type": "string",
                    "description": "Expiry month of the payer's card",
                    "example": "08",
                    "examples": [
                      "08"
                    ]
                  },
                  "card_exp_year": {
                    "type": "string",
                    "description": "Expiry year of the payer's card",
                    "example": "19",
                    "examples": [
                      "19"
                    ]
                  },
                  "card_token": {
                    "type": "string",
                    "description": "Sender's [card token](https://www.liqpay.ua/en/methods/token_pay). You don't need to transmit card data, when using a token",
                    "example": "B5BВB0D00B88B00ED00A00D0D",
                    "examples": [
                      "B5BВB0D00B88B00ED00A00D0D"
                    ]
                  },
                  "currency": {
                    "type": "string",
                    "enum": [
                      "USD",
                      "EUR",
                      "UAH"
                    ],
                    "description": "Payment currency"
                  },
                  "description": {
                    "type": "string",
                    "description": "Payment description"
                  },
                  "order_id": {
                    "type": "string",
                    "maxLength": 255,
                    "description": "Unique purchase ID in your shop"
                  },
                  "phone": {
                    "type": "string",
                    "description": "Payer's phone number. The OTP-password will be sent to this telephone number to confirm your payment, and the linked payer's LiqPay cabinet. The telephone number should be indicated in the international format (Ukraine `+380`)",
                    "example": "+380950000001",
                    "examples": [
                      "+380950000001",
                      "380950000001"
                    ]
                  },
                  "language": {
                    "type": "string",
                    "enum": [
                      "uk",
                      "en"
                    ],
                    "default": "uk",
                    "description": "Customer's language"
                  },
                  "prepare": {
                    "type": "string",
                    "format": "boolean-integer",
                    "enum": [
                      "1"
                    ],
                    "default": "1",
                    "description": "The preliminary preparation of the payment. This mode allows you to determine whether all data is complete, whether 3DS is required to check the card, whether the limit is exceeded. The funds are not debited from the payer's card. To activate the mode, you need to transfer the value of `1`, and to work with DCC (dynamic currency conversion) - the value of `tariffs`"
                  },
                  "recurringbytoken": {
                    "type": "string",
                    "format": "boolean-integer",
                    "enum": [
                      "1"
                    ],
                    "default": "1",
                    "description": "This parameter allows to generate payer `card_token` which you receive in callback request to `server_url`. `card_token` allows to make recurring payments without payer card requisites using API [paytoken](https://www.liqpay.ua/en/doc/api/internet_acquiring/token?tab=0). To receive `card_token` please send in request value `1`"
                  },
                  "result_url": {
                    "type": "string",
                    "format": "uri",
                    "maxLength": 510,
                    "description": "URL of your shop where the buyer would be redirected after completion of the purchase"
                  },
                  "server_url": {
                    "type": "string",
                    "format": "uri",
                    "maxLength": 510,
                    "description": "URL API in your store for notifications of payment status change (`server` -> `server`). [Learn more](https://www.liqpay.ua/en/doc/api/callback)"
                  },
                  "sandbox": {
                    "type": "string",
                    "format": "boolean-integer",
                    "enum": [
                      "1"
                    ],
                    "default": "1",
                    "description": "Enables the testing environment for developers. Payer card will not be charged. To enable testing environment you will need to transmit value `1`. All test payments will have the status `sandbox` - successful test payment"
                  },
                  "sender": {
                    "type": "object",
                    "properties": {
                      "sender_first_name": {
                        "type": "string",
                        "description": "Sender's first name"
                      },
                      "sender_last_name": {
                        "type": "string",
                        "description": "Sender's last name"
                      },
                      "phone": {
                        "type": "string",
                        "description": "Payer's phone number"
                      },
                      "sender_email": {
                        "type": "string",
                        "description": "E-mail address"
                      },
                      "sender_country_code": {
                        "type": "string",
                        "description": "Country code of the sender. Digital [ISO 3166-1 code](https://en.wikipedia.org/wiki/ISO_3166-1)"
                      },
                      "sender_city": {
                        "type": "string",
                        "description": "Sender's city"
                      },
                      "sender_address": {
                        "type": "string",
                        "description": "Sender's address"
                      },
                      "sender_state": {
                        "type": "string",
                        "description": "Payment address. Sender's region code. Digital [ISO 3166-2 code.](https://en.wikipedia.org/wiki/ISO_3166-2)For Ukraine [ISO 3166-2:UA](https://en.wikipedia.org/wiki/ISO_3166-2:UA)"
                      },
                      "sender_shipping_state": {
                        "type": "string",
                        "description": "Shipping address. Sender's region code. Digital [ISO 3166-2 code.](https://en.wikipedia.org/wiki/ISO_3166-2)For Ukraine [ISO 3166-2:UA](https://en.wikipedia.org/wiki/ISO_3166-2:UA)"
                      },
                      "sender_postal_code": {
                        "type": "string",
                        "description": "Sender's zip code"
                      },
                      "mpi_eci": {
                        "type": "integer",
                        "enum": [
                          5,
                          6,
                          7
                        ],
                        "description": "Possible values:\n* `5` - the transaction passed with 3DS (issuer and acquirer support 3d Secure technology)\n* `6` - the issuer of the payer card does not support 3d Secure technology\n* `7` - the operation passed without 3d Secure"
                      },
                      "mpi_cres": {
                        "type": "string",
                        "description": "The value returned to ACS by the issuer's page after cardholder authentication"
                      }
                    },
                    "required": [
                      "phone",
                      "sender_country_code",
                      "sender_city",
                      "sender_address",
                      "sender_postal_code",
                      "mpi_eci",
                      "mpi_cres"
                    ],
                    "description": "Sender parameters"
                  }
                },
                "required": [
                  "version",
                  "public_key",
                  "action",
                  "amount",
                  "card",
                  "card_cvv",
                  "card_exp_month",
                  "card_exp_year",
                  "card_token",
                  "currency",
                  "description",
                  "order_id",
                  "phone",
                  "sandbox"
                ]
              }
            }
          }
        }
      }
    },
    "/api/request?path=tokens.obtain": {
      "post": {
        "summary": "Tokens. Token obtainment",
        "operationId": "tokens/obtain",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "version": {
                    "type": "integer",
                    "enum": [
                      3
                    ],
                    "default": 3,
                    "description": "Version API"
                  },
                  "public_key": {
                    "type": "string",
                    "description": "Public key - the store identifier. You can get the key in the [store settings](https://www.liqpay.ua/en/adminbusiness)"
                  },
                  "action": {
                    "type": "string",
                    "enum": [
                      "token_create",
                      "token_create_unique"
                    ],
                    "description": "Transaction type. Possible values:\n* `token_create` - to create a token\n* `token_create_unique` - to create a token unique within the store (when the card is re-tokenized, the previous token will be returned)"
                  },
                  "is_debit": {
                    "type": "boolean",
                    "description": "Possible values:\n* `true` - a token will be used to debit funds from a card\n* `false` - a token will not be used to debit funds from a card"
                  },
                  "is_credit": {
                    "type": "boolean",
                    "description": "Possible values:\n* `true` - a token will be used for payments to a card\n* `false` - a token will not be used for payments to a card"
                  },
                  "pushAccountReceipt": {
                    "type": "string",
                    "description": "A string identifier that is used to tokenize a card in the Mastercard international payment system. It lasts 30 minutes"
                  },
                  "vceh_tokenization": {
                    "type": "object",
                    "properties": {
                      "pushdata": {
                        "type": "string",
                        "description": "A string with encrypted data to tokenize a card in the Visa international payment system"
                      },
                      "customer": {
                        "type": "string",
                        "description": "Unique client identifier on the merchant's website. It is required for tokenization in the Visa international payment system"
                      }
                    },
                    "required": [
                      "pushdata",
                      "customer"
                    ],
                    "description": "Parameters for tokenization within the Visa cards enrollment hub (VCEH)"
                  },
                  "card_tokenization": {
                    "type": "object",
                    "properties": {
                      "card": {
                        "type": "string",
                        "description": "Card number"
                      },
                      "card_cvv": {
                        "type": "string",
                        "description": "CVV/CVV2"
                      },
                      "card_exp_month": {
                        "type": "string",
                        "description": "Expiry month of the payer's card",
                        "example": "08",
                        "examples": [
                          "08"
                        ]
                      },
                      "card_exp_year": {
                        "type": "string",
                        "description": "Expiry year of the payer's card",
                        "example": "19",
                        "examples": [
                          "19"
                        ]
                      }
                    },
                    "required": [
                      "card",
                      "card_cvv",
                      "card_exp_month",
                      "card_exp_year"
                    ],
                    "description": "Parameters for tokenization by card number"
                  }
                },
                "required": [
                  "version",
                  "public_key",
                  "action",
                  "is_debit",
                  "is_credit",
                  "pushAccountReceipt"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "description": "Status of tokenization performance",
                      "example": "success",
                      "examples": [
                        "success"
                      ]
                    },
                    "card_token": {
                      "type": "string",
                      "description": "A token of the LiqPay system",
                      "example": "4F27B5BAA01C1FEC8E695855A53329B6EFCDF176",
                      "examples": [
                        "4F27B5BAA01C1FEC8E695855A53329B6EFCDF176",
                        "8B3B6147725CAFD4E93DDBAED3FA8D90D1262AC8"
                      ]
                    },
                    "card_token_info": {
                      "type": "object",
                      "properties": {
                        "tokenRef": {
                          "type": "string",
                          "description": "Token reference",
                          "example": "DM4MMC0000129713c08c30d279db433584d5b7b0d406c654",
                          "examples": [
                            "DM4MMC0000129713c08c30d279db433584d5b7b0d406c654",
                            "7354755087b7f975e8ed105a769d7802"
                          ]
                        },
                        "tokenSuffix": {
                          "type": "string",
                          "description": "The last 4 digits of the token",
                          "example": "1234",
                          "examples": [
                            "1234"
                          ]
                        },
                        "tokenExpDate": {
                          "type": "string",
                          "format": "month-year-liqpay",
                          "description": "Token expiration date",
                          "example": "0822",
                          "examples": [
                            "0822",
                            "1024"
                          ]
                        },
                        "status": {
                          "type": "string",
                          "enum": [
                            "INACTIVE",
                            "ACTIVE",
                            "SUSPENDED",
                            "DELETED"
                          ],
                          "description": "Token status",
                          "example": "ACTIVE",
                          "examples": [
                            "ACTIVE"
                          ]
                        },
                        "decision": {
                          "type": "string",
                          "enum": [
                            "APPROVED",
                            "REQUIRE_ADDITIONAL_AUTHENTICATION",
                            "DECLINED",
                            "CANCELLED",
                            "ERROR"
                          ],
                          "description": "Solution by payment system about card digitization. Only relevant for cards issued by the Mastercard payment system. Possible values:\n* `APPROVED` - approved\n* `REQUIRE_ADDITIONAL_AUTHENTICATION` - approved, but additional client authentication desired\n* `DECLINED` - rejected\n* `CANCELLED` - canceled\n* `ERROR` - error",
                          "example": "APPROVED",
                          "examples": [
                            "APPROVED"
                          ]
                        }
                      },
                      "description": "Information about a token of Mastercard and Visa payment systems"
                    },
                    "result": {
                      "type": "string",
                      "enum": [
                        "ok",
                        "error"
                      ],
                      "description": "The result of a request",
                      "example": "ok",
                      "examples": [
                        "ok"
                      ]
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/request?path=tokens.change_status": {
      "post": {
        "summary": "Tokens. Status change",
        "operationId": "tokens/change_status",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "version": {
                    "type": "integer",
                    "enum": [
                      3
                    ],
                    "default": 3,
                    "description": "Version API"
                  },
                  "public_key": {
                    "type": "string",
                    "description": "Public key - the store identifier. You can get the key in the [store settings](https://www.liqpay.ua/en/adminbusiness)"
                  },
                  "action": {
                    "type": "string",
                    "enum": [
                      "token_update"
                    ],
                    "default": "token_update"
                  },
                  "card_token": {
                    "type": "string",
                    "description": "A token to update"
                  },
                  "card_token_action": {
                    "type": "string",
                    "enum": [
                      "SUSPEND",
                      "UNSUSPEND",
                      "DELETE"
                    ],
                    "description": "Action to be done with the token. Possible values:\n* `SUSPEND` - to suspend a token\n* `UNSUSPEND` - to resume a token\n* `DELETE` - to delete a token"
                  }
                },
                "required": [
                  "version",
                  "public_key",
                  "action",
                  "card_token",
                  "card_token_action"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "description": "Status of tokenization performance"
                    },
                    "card_token": {
                      "type": "string",
                      "description": "A token of the LiqPay system"
                    },
                    "card_token_info": {
                      "type": "object",
                      "properties": {
                        "tokenRef": {
                          "type": "string",
                          "description": "Token reference"
                        },
                        "tokenSuffix": {
                          "type": "string",
                          "description": "The last 4 digits of the token"
                        },
                        "tokenExpDate": {
                          "type": "string",
                          "format": "month-year-liqpay",
                          "description": "Token expiration date"
                        },
                        "status": {
                          "type": "string",
                          "enum": [
                            "INACTIVE",
                            "ACTIVE",
                            "SUSPENDED",
                            "DELETED"
                          ],
                          "description": "Token status"
                        }
                      },
                      "description": "Information about a token of Mastercard and Visa payment systems"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/request?path=confirmation.3ds": {
      "post": {
        "summary": "Verification. 3D-Secure",
        "operationId": "confirmation/3ds",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "version": {
                    "type": "integer",
                    "enum": [
                      3
                    ],
                    "default": 3,
                    "description": "Version API",
                    "example": 3,
                    "examples": [
                      3
                    ]
                  },
                  "public_key": {
                    "type": "string",
                    "description": "Public key - the store identifier. You can get the key in the [store settings](https://www.liqpay.ua/en/adminbusiness)"
                  },
                  "action": {
                    "type": "string",
                    "enum": [
                      "confirm"
                    ],
                    "default": "confirm",
                    "example": "confirm",
                    "examples": [
                      "confirm"
                    ]
                  },
                  "confirm_token": {
                    "type": "string",
                    "description": "Payment token",
                    "example": "JmV2qDgC3LotB8njGDcEYjHFpmpAZR",
                    "examples": [
                      "JmV2qDgC3LotB8njGDcEYjHFpmpAZR"
                    ]
                  }
                },
                "required": [
                  "version",
                  "public_key",
                  "action",
                  "confirm_token"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "acq_id": {
                      "type": "number",
                      "description": "Acquirer ID",
                      "example": 414963,
                      "examples": [
                        414963
                      ]
                    },
                    "action": {
                      "type": "string",
                      "enum": [
                        "pay",
                        "hold",
                        "paysplit",
                        "subscribe",
                        "paydonate",
                        "auth",
                        "regular"
                      ],
                      "description": "Transaction type. Possible values:\n* `pay` - payment\n* `hold` - amount of hold on sender's account\n* `paysplit` - splitting payments\n* `subscribe` - regular payment\n* `paydonate` - donation\n* `auth` - card preauth\n* `regular` - regular payment",
                      "example": "pay",
                      "examples": [
                        "pay"
                      ]
                    },
                    "agent_commission": {
                      "type": "number",
                      "description": "Agent comission in payment currency",
                      "example": 0.0,
                      "examples": [
                        0.0
                      ]
                    },
                    "amount": {
                      "type": "number",
                      "description": "Payment amount",
                      "example": 0.02,
                      "examples": [
                        0.02
                      ]
                    },
                    "amount_bonus": {
                      "type": "number",
                      "description": "Payer bonus amount in payment currency debit",
                      "example": 0.0,
                      "examples": [
                        0.0
                      ]
                    },
                    "amount_credit": {
                      "type": "number",
                      "description": "Payment amount for credit in currency of `currency_credit`",
                      "example": 0.02,
                      "examples": [
                        0.02
                      ]
                    },
                    "amount_debit": {
                      "type": "number",
                      "description": "Payment amount for debit in currency of `currency_debit`",
                      "example": 0.02,
                      "examples": [
                        0.02
                      ]
                    },
                    "authcode_credit": {
                      "type": "string",
                      "description": "Authorization code for transaction of credit",
                      "example": "504979",
                      "examples": [
                        "504979"
                      ]
                    },
                    "authcode_debit": {
                      "type": "string",
                      "description": "Authorization code for transaction of debit",
                      "example": "988083",
                      "examples": [
                        "988083"
                      ]
                    },
                    "bonus_procent": {
                      "type": "number",
                      "description": "Discount rate in percent",
                      "example": 7.0,
                      "examples": [
                        7.0
                      ]
                    },
                    "bonus_type": {
                      "type": "string",
                      "enum": [
                        "bonusplus",
                        "discount_club",
                        "personal",
                        "promo"
                      ],
                      "description": "Bonus type, ",
                      "example": "bonusplus",
                      "examples": [
                        "bonusplus"
                      ]
                    },
                    "card_token": {
                      "type": "string",
                      "description": "Sender's card token",
                      "example": "2DFBFE626B734161130DE81E971E948D6F260",
                      "examples": [
                        "2DFBFE626B734161130DE81E971E948D6F260"
                      ]
                    },
                    "commission_credit": {
                      "type": "number",
                      "description": "Commission from the receiver in `currency_credit`",
                      "example": 0.0,
                      "examples": [
                        0.0
                      ]
                    },
                    "commission_debit": {
                      "type": "number",
                      "description": "Commission from the sender in `currency_debit`",
                      "example": 0.0,
                      "examples": [
                        0.0
                      ]
                    },
                    "create_date": {
                      "type": "integer",
                      "format": "timestamp-ms",
                      "description": "Date of payment creation",
                      "example": 1501688827926,
                      "examples": [
                        1501688827926
                      ]
                    },
                    "currency": {
                      "type": "string",
                      "description": "Payment currency",
                      "example": "UAH",
                      "examples": [
                        "UAH"
                      ]
                    },
                    "currency_credit": {
                      "type": "string",
                      "description": "Transaction currency of credit",
                      "example": "UAH",
                      "examples": [
                        "UAH"
                      ]
                    },
                    "currency_debit": {
                      "type": "string",
                      "description": "Transaction currency of debit",
                      "example": "UAH",
                      "examples": [
                        "UAH"
                      ]
                    },
                    "description": {
                      "type": "string",
                      "description": "Payment description",
                      "example": "description",
                      "examples": [
                        "description"
                      ]
                    },
                    "end_date": {
                      "type": "integer",
                      "format": "timestamp-ms",
                      "description": "Date of payment edition/end",
                      "example": 1501688827926,
                      "examples": [
                        1501688827926
                      ]
                    },
                    "ip": {
                      "type": "string",
                      "description": "Sender's IP address",
                      "example": "8.8.8.8",
                      "examples": [
                        "8.8.8.8"
                      ]
                    },
                    "is_3ds": {
                      "type": "boolean",
                      "description": "Possible values:\n* `true` - transaction passed with 3DS\n* `false` - transaction passed without 3DS"
                    },
                    "liqpay_order_id": {
                      "type": "string",
                      "description": "Payment order_id in LiqPay system",
                      "example": "NYMK3AE61501685438251925",
                      "examples": [
                        "NYMK3AE61501685438251925"
                      ]
                    },
                    "mpi_eci": {
                      "type": "integer",
                      "enum": [
                        5,
                        6,
                        7
                      ],
                      "description": "Possible values:\n* `5` - the transaction passed with 3DS (issuer and acquirer support 3d Secure technology)\n* `6` - the issuer of the payer card does not support 3d Secure technology\n* `7` - the operation passed without 3d Secure",
                      "example": 5,
                      "examples": [
                        5
                      ]
                    },
                    "mpi_cres": {
                      "type": "string",
                      "description": "The value returned to ACS by the issuer's page after cardholder authentication"
                    },
                    "order_id": {
                      "type": "string",
                      "description": "Order_id payment",
                      "example": "98R1U1OV1485849059893399",
                      "examples": [
                        "98R1U1OV1485849059893399"
                      ]
                    },
                    "payment_id": {
                      "type": "number",
                      "description": "Payment id in LiqPay system",
                      "example": 165193,
                      "examples": [
                        165193
                      ]
                    },
                    "paytype": {
                      "type": "string",
                      "enum": [
                        "card",
                        "privat24",
                        "moment_part",
                        "cash",
                        "invoice",
                        "qr"
                      ],
                      "description": "Methods of payment. Possible values:\n* `card` - card payment\n* `privat24` - with privat24 account\n* `moment_part` - installments\n* `cash` - cash\n* `invoice` - to email\n* `qr` - qr code scanning",
                      "example": "card",
                      "examples": [
                        "card"
                      ]
                    },
                    "public_key": {
                      "type": "string",
                      "description": "Shop public key",
                      "example": "i000000000",
                      "examples": [
                        "i000000000"
                      ]
                    },
                    "receiver_commission": {
                      "type": "number",
                      "description": "Receiver comission in payment currency",
                      "example": 0.0,
                      "examples": [
                        0.0
                      ]
                    },
                    "rrn_credit": {
                      "type": "string",
                      "description": "Unique transaction ID in authorization and settlement system of issuer bank `Retrieval Reference number`",
                      "example": "000663782985",
                      "examples": [
                        "000663782985"
                      ]
                    },
                    "rrn_debit": {
                      "type": "string",
                      "description": "Unique transaction ID in authorization and settlement system of issuer bank `Retrieval Reference number`",
                      "example": "000663782982",
                      "examples": [
                        "000663782982"
                      ]
                    },
                    "sender_bonus": {
                      "type": "number",
                      "description": "Sender's bonus in the payment currency",
                      "example": 0.0,
                      "examples": [
                        0.0
                      ]
                    },
                    "sender_card_bank": {
                      "type": "string",
                      "description": "Sender's card bank",
                      "example": "pb",
                      "examples": [
                        "pb"
                      ]
                    },
                    "sender_card_country": {
                      "type": "string",
                      "description": "Sender's card country. Digital [ISO 3166-1 code](https://en.wikipedia.org/wiki/ISO_3166-1)",
                      "example": 804,
                      "examples": [
                        804
                      ]
                    },
                    "sender_card_mask2": {
                      "type": "string",
                      "description": "Sender's card",
                      "example": "473118*55",
                      "examples": [
                        "473118*55"
                      ]
                    },
                    "sender_card_type": {
                      "type": "string",
                      "description": "Sender's card type MC/Visa",
                      "example": "visa",
                      "examples": [
                        "visa"
                      ]
                    },
                    "sender_commission": {
                      "type": "number",
                      "description": "Commission from the sender in the payment currency",
                      "example": 0.0,
                      "examples": [
                        0.0
                      ]
                    },
                    "sender_first_name": {
                      "type": "string",
                      "description": "The name of the sender",
                      "example": "first name",
                      "examples": [
                        "first name"
                      ]
                    },
                    "sender_last_name": {
                      "type": "string",
                      "description": "Sender's last name",
                      "example": "last name",
                      "examples": [
                        "last name"
                      ]
                    },
                    "sender_phone": {
                      "type": "string",
                      "description": "Sender's phone number",
                      "example": "380950000001",
                      "examples": [
                        "380950000001"
                      ]
                    },
                    "status": {
                      "type": "string",
                      "enum": [
                        "error",
                        "failure",
                        "reversed",
                        "success",
                        "wait_accept",
                        "wait_secure"
                      ],
                      "description": "Payment status.\nAvailable values:\nFinal payment statuses\n* `error` - Failed payment. Data is incorrect\n* `failure` - Failed payment\n* `reversed` - Payment refunded\n* `success` - Successful payment\nStatuses that required payment confirmation\n* `wait_accept` - Money are withdrawn from client but the store is still not verified. If the store is not activated for 60 days, payment will be automatically cancelled\n* `wait_secure` - Payment is verified",
                      "example": "success",
                      "examples": [
                        "success"
                      ]
                    },
                    "transaction_id": {
                      "type": "number",
                      "description": "Id transactions in the LiqPay system",
                      "example": 165193,
                      "examples": [
                        165193
                      ]
                    },
                    "type": {
                      "type": "string",
                      "description": "Payment type",
                      "example": "buy",
                      "examples": [
                        "buy"
                      ]
                    },
                    "version": {
                      "type": "integer",
                      "enum": [
                        3
                      ],
                      "default": 3,
                      "description": "Version API",
                      "example": 3,
                      "examples": [
                        3
                      ]
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/request?path=confirmation.OTP": {
      "post": {
        "summary": "Verification. OTP confirmation",
        "operationId": "confirmation/OTP",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "version": {
                    "type": "integer",
                    "enum": [
                      3
                    ],
                    "default": 3,
                    "description": "Version API",
                    "example": 3,
                    "examples": [
                      3
                    ]
                  },
                  "public_key": {
                    "type": "string",
                    "description": "Public key - the store identifier. You can get the key in the [store settings](https://www.liqpay.ua/en/adminbusiness)"
                  },
                  "action": {
                    "type": "string",
                    "enum": [
                      "confirm"
                    ],
                    "default": "confirm",
                    "example": "confirm",
                    "examples": [
                      "confirm"
                    ]
                  },
                  "otp": {
                    "type": "string",
                    "description": "One time password that customer received to his phone numbert",
                    "example": "12345678",
                    "examples": [
                      "12345678"
                    ]
                  },
                  "confirm_token": {
                    "type": "string",
                    "description": "Payment token",
                    "example": "JmV2qDgC3LotB8njGDcEYjHFpmpAZR",
                    "examples": [
                      "JmV2qDgC3LotB8njGDcEYjHFpmpAZR"
                    ]
                  }
                },
                "required": [
                  "version",
                  "public_key",
                  "action",
                  "otp",
                  "confirm_token"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "acq_id": {
                      "type": "number",
                      "description": "Acquirer ID",
                      "example": 414963,
                      "examples": [
                        414963
                      ]
                    },
                    "action": {
                      "type": "string",
                      "enum": [
                        "pay",
                        "hold",
                        "paysplit",
                        "subscribe",
                        "paydonate",
                        "auth",
                        "regular"
                      ],
                      "description": "Transaction type. Possible values:\n* `pay` - payment\n* `hold` - amount of hold on sender's account\n* `paysplit` - splitting payments\n* `subscribe` - regular payment\n* `paydonate` - donation\n* `auth` - card preauth\n* `regular` - regular payment",
                      "example": "pay",
                      "examples": [
                        "pay"
                      ]
                    },
                    "agent_commission": {
                      "type": "number",
                      "description": "Agent comission in payment currency",
                      "example": 0.0,
                      "examples": [
                        0.0
                      ]
                    },
                    "amount": {
                      "type": "number",
                      "description": "Payment amount",
                      "example": 0.02,
                      "examples": [
                        0.02
                      ]
                    },
                    "amount_bonus": {
                      "type": "number",
                      "description": "Payer bonus amount in payment currency debit",
                      "example": 0.0,
                      "examples": [
                        0.0
                      ]
                    },
                    "amount_credit": {
                      "type": "number",
                      "description": "Payment amount for credit in currency of `currency_credit`",
                      "example": 0.02,
                      "examples": [
                        0.02
                      ]
                    },
                    "amount_debit": {
                      "type": "number",
                      "description": "Payment amount for debit in currency of `currency_debit`",
                      "example": 0.02,
                      "examples": [
                        0.02
                      ]
                    },
                    "authcode_credit": {
                      "type": "string",
                      "description": "Authorization code for transaction of credit",
                      "example": "504979",
                      "examples": [
                        "504979"
                      ]
                    },
                    "authcode_debit": {
                      "type": "string",
                      "description": "Authorization code for transaction of debit",
                      "example": "988083",
                      "examples": [
                        "988083"
                      ]
                    },
                    "bonus_procent": {
                      "type": "number",
                      "description": "Discount rate in percent",
                      "example": 7.0,
                      "examples": [
                        7.0
                      ]
                    },
                    "bonus_type": {
                      "type": "string",
                      "enum": [
                        "bonusplus",
                        "discount_club",
                        "personal",
                        "promo"
                      ],
                      "description": "Bonus type, ",
                      "example": "bonusplus",
                      "examples": [
                        "bonusplus"
                      ]
                    },
                    "card_token": {
                      "type": "string",
                      "description": "Sender's card token",
                      "example": "2DFBFE626B734161130DE81E971E948D6F260",
                      "examples": [
                        "2DFBFE626B734161130DE81E971E948D6F260"
                      ]
                    },
                    "commission_credit": {
                      "type": "number",
                      "description": "Commission from the receiver in `currency_credit`",
                      "example": 0.0,
                      "examples": [
                        0.0
                      ]
                    },
                    "commission_debit": {
                      "type": "number",
                      "description": "Commission from the sender in `currency_debit`",
                      "example": 0.0,
                      "examples": [
                        0.0
                      ]
                    },
                    "create_date": {
                      "type": "integer",
                      "format": "timestamp-ms",
                      "description": "Date of payment creation",
                      "example": 1501688827926,
                      "examples": [
                        1501688827926
                      ]
                    },
                    "currency": {
                      "type": "string",
                      "description": "Payment currency",
                      "example": "UAH",
                      "examples": [
                        "UAH"
                      ]
                    },
                    "currency_credit": {
                      "type": "string",
                      "description": "Transaction currency of credit",
                      "example": "UAH",
                      "examples": [
                        "UAH"
                      ]
                    },
                    "currency_debit": {
                      "type": "string",
                      "description": "Transaction currency of debit",
                      "example": "UAH",
                      "examples": [
                        "UAH"
                      ]
                    },
                    "description": {
                      "type": "string",
                      "description": "Payment description",
                      "example": "description",
                      "examples": [
                        "description"
                      ]
                    },
                    "end_date": {
                      "type": "integer",
                      "format": "timestamp-ms",
                      "description": "Date of payment edition/end",
                      "example": 1501688827926,
                      "examples": [
                        1501688827926
                      ]
                    },
                    "ip": {
                      "type": "string",
                      "description": "Sender's IP address",
                      "example": "8.8.8.8",
                      "examples": [
                        "8.8.8.8"
                      ]
                    },
                    "is_3ds": {
                      "type": "boolean",
                      "description": "Possible values:\n* `true` - transaction passed with 3DS\n* `false` - transaction passed without 3DS"
                    },
                    "liqpay_order_id": {
                      "type": "string",
                      "description": "Payment order_id in LiqPay system",
                      "example": "NYMK3AE61501685438251925",
                      "examples": [
                        "NYMK3AE61501685438251925"
                      ]
                    },
                    "mpi_eci": {
                      "type": "integer",
                      "enum": [
                        5,
                        6,
                        7
                      ],
                      "description": "Possible values:\n* `5` - the transaction passed with 3DS (issuer and acquirer support 3d Secure technology)\n* `6` - the issuer of the payer card does not support 3d Secure technology\n* `7` - the operation passed without 3d Secure",
                      "example": 5,
                      "examples": [
                        5
                      ]
                    },
                    "order_id": {
                      "type": "string",
                      "description": "Order_id payment",
                      "example": "98R1U1OV1485849059893399",
                      "examples": [
                        "98R1U1OV1485849059893399"
                      ]
                    },
                    "payment_id": {
                      "type": "number",
                      "description": "Payment id in LiqPay system",
                      "example": 165193,
                      "examples": [
                        165193
                      ]
                    },
                    "paytype": {
                      "type": "string",
                      "enum": [
                        "card",
                        "privat24",
                        "moment_part",
                        "cash",
                        "invoice",
                        "qr"
                      ],
                      "description": "Methods of payment. Possible values:\n* `card` - card payment\n* `privat24` - with privat24 account\n* `moment_part` - installments\n* `cash` - cash\n* `invoice` - to email\n* `qr` - qr code scanning",
                      "example": "card",
                      "examples": [
                        "card"
                      ]
                    },
                    "public_key": {
                      "type": "string",
                      "description": "Shop public key",
                      "example": "i000000000",
                      "examples": [
                        "i000000000"
                      ]
                    },
                    "receiver_commission": {
                      "type": "number",
                      "description": "Receiver comission in payment currency",
                      "example": 0.0,
                      "examples": [
                        0.0
                      ]
                    },
                    "rrn_credit": {
                      "type": "string",
                      "description": "Unique transaction ID in authorization and settlement system of issuer bank `Retrieval Reference number`",
                      "example": "000663782985",
                      "examples": [
                        "000663782985"
                      ]
                    },
                    "rrn_debit": {
                      "type": "string",
                      "description": "Unique transaction ID in authorization and settlement system of issuer bank `Retrieval Reference number`",
                      "example": "000663782982",
                      "examples": [
                        "000663782982"
                      ]
                    },
                    "sender_bonus": {
                      "type": "number",
                      "description": "Sender's bonus in the payment currency",
                      "example": 0.0,
                      "examples": [
                        0.0
                      ]
                    },
                    "sender_card_bank": {
                      "type": "string",
                      "description": "Sender's card bank",
                      "example": "pb",
                      "examples": [
                        "pb"
                      ]
                    },
                    "sender_card_country": {
                      "type": "string",
                      "description": "Sender's card country. Digital [ISO 3166-1 code](https://en.wikipedia.org/wiki/ISO_3166-1)",
                      "example": 804,
                      "examples": [
                        804
                      ]
                    },
                    "sender_card_mask2": {
                      "type": "string",
                      "description": "Sender's card",
                      "example": "473118*55",
                      "examples": [
                        "473118*55"
                      ]
                    },
                    "sender_card_type": {
                      "type": "string",
                      "description": "Sender's card type MC/Visa",
                      "example": "visa",
                      "examples": [
                        "visa"
                      ]
                    },
                    "sender_commission": {
                      "type": "number",
                      "description": "Commission from the sender in the payment currency",
                      "example": 0.0,
                      "examples": [
                        0.0
                      ]
                    },
                    "sender_first_name": {
                      "type": "string",
                      "description": "The name of the sender",
                      "example": "first name",
                      "examples": [
                        "first name"
                      ]
                    },
                    "sender_last_name": {
                      "type": "string",
                      "description": "Sender's last name",
                      "example": "last name",
                      "examples": [
                        "last name"
                      ]
                    },
                    "sender_phone": {
                      "type": "string",
                      "description": "Sender's phone number",
                      "example": "380950000001",
                      "examples": [
                        "380950000001"
                      ]
                    },
                    "status": {
                      "type": "string",
                      "enum": [
                        "error",
                        "failure",
                        "reversed",
                        "success",
                        "3ds_verify",
                        "wait_accept",
                        "wait_secure"
                      ],
                      "description": "Payment status.\nAvailable values:\nFinal payment statuses\n* `error` - Failed payment. Data is incorrect\n* `failure` - Failed payment\n* `reversed` - Payment refunded\n* `success` - Successful payment\nStatuses that required payment confirmation\n* `3ds_verify` - 3DS verification is required. To finish the payment you will require a [3ds_verify](https://www.liqpay.ua/en/doc/api/confirmation/3ds)\nOther payment statuses\n* `wait_accept` - Money are withdrawn from client but the store is still not verified. If the store is not activated for 60 days, payment will be automatically cancelled\n* `wait_secure` - Payment is verified",
                      "example": "success",
                      "examples": [
                        "success"
                      ]
                    },
                    "transaction_id": {
                      "type": "number",
                      "description": "Id transactions in the LiqPay system",
                      "example": 165193,
                      "examples": [
                        165193
                      ]
                    },
                    "type": {
                      "type": "string",
                      "description": "Payment type",
                      "example": "buy",
                      "examples": [
                        "buy"
                      ]
                    },
                    "version": {
                      "type": "integer",
                      "enum": [
                        3
                      ],
                      "default": 3,
                      "description": "Version API",
                      "example": 3,
                      "examples": [
                        3
                      ]
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/request?path=confirmation.MPI": {
      "post": {
        "summary": "Verification. MPI",
        "operationId": "confirmation/MPI",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "version": {
                    "type": "integer",
                    "enum": [
                      3
                    ],
                    "default": 3,
                    "description": "Version API",
                    "example": 3,
                    "examples": [
                      3
                    ]
                  },
                  "public_key": {
                    "type": "string",
                    "description": "Public key - the store identifier. You can get the key in the [store settings](https://www.liqpay.ua/en/adminbusiness)"
                  },
                  "action": {
                    "type": "string",
                    "enum": [
                      "mpi"
                    ],
                    "default": "mpi",
                    "example": "mpi",
                    "examples": [
                      "mpi"
                    ]
                  },
                  "amount": {
                    "type": "number",
                    "description": "Payment amount",
                    "example": 5.0,
                    "examples": [
                      5.0,
                      7.34,
                      1.0
                    ]
                  },
                  "card": {
                    "type": "string",
                    "description": "Card number of the payer",
                    "example": "4731195301524634",
                    "examples": [
                      "4731195301524634"
                    ]
                  },
                  "card_cvv": {
                    "type": "string",
                    "description": "CVV/CVV2",
                    "example": "111",
                    "examples": [
                      "111"
                    ]
                  },
                  "card_exp_month": {
                    "type": "string",
                    "description": "Expiry month of the payer's card",
                    "example": "08",
                    "examples": [
                      "08",
                      "03"
                    ]
                  },
                  "card_exp_year": {
                    "type": "string",
                    "description": "Expiry year of the payer's card",
                    "example": "19",
                    "examples": [
                      "19",
                      "22"
                    ]
                  },
                  "currency": {
                    "type": "string",
                    "enum": [
                      "USD",
                      "EUR",
                      "UAH"
                    ],
                    "description": "Payment currency",
                    "example": "USD",
                    "examples": [
                      "USD"
                    ]
                  },
                  "description": {
                    "type": "string",
                    "description": "Payment description",
                    "example": "description text",
                    "examples": [
                      "description text"
                    ]
                  },
                  "email": {
                    "type": "string",
                    "description": "E-mail payer"
                  },
                  "ip": {
                    "type": "string",
                    "description": "Client IP"
                  },
                  "order_id": {
                    "type": "string",
                    "maxLength": 255,
                    "description": "Unique purchase ID in your shop",
                    "example": "order_id_1",
                    "examples": [
                      "order_id_1"
                    ]
                  },
                  "action_payment": {
                    "type": "string",
                    "enum": [
                      "pay",
                      "hold",
                      "subscribe",
                      "paydonate",
                      "auth",
                      "p2p",
                      "p2pdebit"
                    ],
                    "default": "pay",
                    "description": "A parameter defining the payment type. Pass the value of the action parameter of the payment, which will be carried out after passing 3DS. Possible values:\n* `pay` - payment\n* `hold` - blocking funds on the sender’s account\n* `subscribe` - regular payment\n* `paydonate` - donation\n* `auth` - card preauthorization\n* `p2p` - transfer from card to card\n* `p2pdebit` - payment using p2p debit"
                  },
                  "language": {
                    "type": "string",
                    "enum": [
                      "uk",
                      "en"
                    ],
                    "default": "uk",
                    "description": "Customer's language"
                  },
                  "sender_first_name": {
                    "type": "string",
                    "description": "Payer’s first name"
                  },
                  "sender_last_name": {
                    "type": "string",
                    "description": "Payer’s last name"
                  },
                  "threeDSInfo": {
                    "type": "object",
                    "properties": {
                      "notificationURL": {
                        "type": "string",
                        "maxLength": 256,
                        "description": "The address to which the verification result will be sent.\nURL to send CRes or error message. The CRes message is sent from the issuer’s ACS via the cardholder's browser after being verified"
                      },
                      "browserLanguage": {
                        "type": "string",
                        "maxLength": 8,
                        "description": "Payer's browser language.\nValue that represents the language of the browser, in the format defined by the IETF BCP47 standard. Returned by the option navigator.language of the user's browser",
                        "example": "en-US",
                        "examples": [
                          "en-US"
                        ]
                      },
                      "threeDSRequestorURL": {
                        "type": "string",
                        "maxLength": 2048,
                        "description": "The website's URL where the payment is made. This element provides additional data to the 3-D Secure system in case of a problem and should provide contact information"
                      },
                      "browserScreenHeight": {
                        "type": "string",
                        "maxLength": 6,
                        "description": "Total payer screen height in pixels. Returned by the option screen.height of the user's browser"
                      },
                      "browserColorDepth": {
                        "type": "string",
                        "maxLength": 2,
                        "description": "Value that represents the bit depth of the color palette for displaying images in bits per pixel. Returned by the option screen.colorDepth of the user's browser.\nAllowed values: 1 = 1 bit, 4 = 4 bits, 8 = 8 bits, 15 = 15 bits, 16 = 16 bits, 24 = 24 bits, 32 = 32 bits, 48 = 48 bits"
                      },
                      "browserJavascriptEnabled": {
                        "type": "boolean",
                        "default": true,
                        "description": "Parameter describing whether the payer's browser can perform JavaScript"
                      },
                      "browserJavaEnabled": {
                        "type": "boolean",
                        "default": false,
                        "description": "A parameter describing whether the payer's browser can perform Java"
                      },
                      "browserScreenWidth": {
                        "type": "string",
                        "maxLength": 6,
                        "description": "Total payer screen width in pixels. Returned by the option screen.width of the user's browser"
                      },
                      "browserAcceptHeader": {
                        "type": "string",
                        "maxLength": 2048,
                        "description": "The precise value of the HTTP accept headers sent from the payer's browser to the resource where the payment is made.\nIf the value of headers is longer than 2048 characters, the 3DS server will cut off the extra part"
                      },
                      "browserTZ": {
                        "type": "string",
                        "description": "Time zone offset between Greenwich and the payer's local time, in minutes",
                        "example": "300",
                        "examples": [
                          "300",
                          "–300"
                        ]
                      },
                      "browserUserAgent": {
                        "type": "string",
                        "maxLength": 2048,
                        "description": "The precise content of the user-agent HTTP header.\nIf the value of headers is longer than 2048 characters, the 3DS server will cut off the extra part"
                      }
                    },
                    "required": [
                      "notificationURL",
                      "browserLanguage",
                      "threeDSRequestorURL",
                      "browserScreenHeight",
                      "browserColorDepth",
                      "browserScreenWidth",
                      "browserAcceptHeader",
                      "browserTZ",
                      "browserUserAgent"
                    ],
                    "description": "Additional data to check a transaction"
                  },
                  "phone": {
                    "type": "string",
                    "description": "Payer's phone number",
                    "example": "380950000001",
                    "examples": [
                      "380950000001"
                    ]
                  }
                },
                "required": [
                  "version",
                  "public_key",
                  "action",
                  "amount",
                  "card",
                  "card_cvv",
                  "card_exp_month",
                  "card_exp_year",
                  "currency",
                  "description",
                  "ip",
                  "order_id",
                  "threeDSInfo"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "mpi_req_md": {
                      "type": "string",
                      "description": "Parameter required for sender authentification on ACS page",
                      "example": "MGUyZDYxMjYDfhKOC00MDI2LWFhMWUOpDFJjNzIyMmDffShZjli",
                      "examples": [
                        "MGUyZDYxMjYDfhKOC00MDI2LWFhMWUOpDFJjNzIyMmDffShZjli"
                      ]
                    },
                    "mpi_req_pareq": {
                      "type": "string",
                      "description": "Parameter required for sender authentification on ACS page",
                      "example": "eJxVUe1OwjAUfRWyB1jbMWAjlybIjJI4J1454B/TlKuUsA+6zTCf3lvYRPvrnJN72tNz4XlrEZMn\n1I1FCSlWlfrgdnMvNX8fTyKAx7xwJOwmj/iQcIX2soUuRQ+9wNgPSWj1VV1xKUPlwt10Uowng8\nBNZRyNAuEyl4d2IRjfgI2FmGXGUovQ/jATtB0EWT17aVEQ+B9QQ7ld5fbui6rKWOoi4zcGv29OZSq\n9Rt10VhWGorn5oFdsq0ahyq6/2g2Mr15ad+S9ret0l34/LDhPk2Vw93o9A+YmYKNqlAEXEx4J\nMRBiOpMQ4p90kFlLpjkPhf00T0r0xPxOS/1Kgki3mupVxxOlbPQM8lkWNEGZfzGwS9zFrStW\n19RVvxNX7UlwbkPtiLGL0ETFgzsK6rbFur4T+7fsHPamnMg==",
                      "examples": [
                        "eJxVUe1OwjAUfRWyB1jbMWAjlybIjJI4J1454B/TlKuUsA+6zTCf3lvYRPvrnJN72tNz4XlrEZMn\n1I1FCSlWlfrgdnMvNX8fTyKAx7xwJOwmj/iQcIX2soUuRQ+9wNgPSWj1VV1xKUPlwt10Uowng8\nBNZRyNAuEyl4d2IRjfgI2FmGXGUovQ/jATtB0EWT17aVEQ+B9QQ7ld5fbui6rKWOoi4zcGv29OZSq\n9Rt10VhWGorn5oFdsq0ahyq6/2g2Mr15ad+S9ret0l34/LDhPk2Vw93o9A+YmYKNqlAEXEx4J\nMRBiOpMQ4p90kFlLpjkPhf00T0r0xPxOS/1Kgki3mupVxxOlbPQM8lkWNEGZfzGwS9zFrStW\n19RVvxNX7UlwbkPtiLGL0ETFgzsK6rbFur4T+7fsHPamnMg=="
                      ]
                    },
                    "mpi_req_url": {
                      "type": "string",
                      "description": "Issuer bank page url (ACS page) to which customer should be redirected to confirm payment with 3D-Secure",
                      "example": "https://acs.bankname.com/mpi",
                      "examples": [
                        "https://acs.bankname.com/mpi"
                      ]
                    },
                    "mpi_status": {
                      "type": "string",
                      "enum": [
                        "Y",
                        "A",
                        "C",
                        "N",
                        "U"
                      ],
                      "description": "Values for 3DS version 2.0:\n* `Y, A` - additional client verification is not required,\n* `C` - additional client verification is required, \n* `N` - failed to verify the client. Payment performance is not recommended. The client can be checked with 3DS 1.0, \n* `U` - failed to verify the card for participation, client redirection is not required to pass 3-D Secure.\nValues for 3DS version 1.0:\n* `N` - card does not participate, client redirection for 3D-Secure is not required,\n* `U` - failed to verify the card for participation, client redirection for 3D-Secure is not required, \n* `Y` - card supports the 3D-Secure service and there will be page of issuing bank in `mpi_req_url` parameter where `mpi_req_pareq` and `mpi_req_md` parameters should be transferred by `POST` method int he next form:\nwhere `TermUrl` - page address to which issuer will return the answer with PaRes and MD parameters. To make a payment with already passed 3DS you need to transfer `mpi_pares` and `mpi_md`, parameters with PaRes and MD values which were received from issuer bank ACS while payment is created",
                      "example": "Y",
                      "examples": [
                        "Y",
                        "C",
                        "A"
                      ]
                    },
                    "mpi_version": {
                      "type": "string",
                      "enum": [
                        "2.0"
                      ],
                      "default": "2.0",
                      "description": "Returned when the card supports 3DS version 2.0",
                      "example": "2.0",
                      "examples": [
                        "2.0"
                      ]
                    },
                    "mpi_form": {
                      "type": "string",
                      "description": "Returned when the card supports 3DS version 2.0. The form to which the client should be sent for authentication. The encrypted verification result will be returned by the issuer to notificationURL in the parameter: `cres`. To make a payment with passed 3DS, when creating a payment, you need to pass parameter - `cres` with the cres value that was received from the issuing bank",
                      "example": "< form action = 'https://acs4.privatbank.ua/acs/creq' method = 'post' > < input type = 'hidden' name = 'creq' value = 'eyJhY3NUcmFuc0lEIjoiNDJlYmRkOWMtNzU0Zi00YzMwLTg5NDMtNDJhODQzMDY4ZTMwIiwibWVzc2FnZVR5cGUiOiJDUmVxIiwibWVzc2FnZVZlcnNpb24iOiIyLjEuMCIsInRocmVlRFNTZXJ2ZXJUcmFuc0lEIjoiZTc1YmEyOGItNjE0YS00NDE5LWFjMzQtNzkxZDlmMjkwZjE3IiwiY2hhbGxlbmdlV2luZG93U2l6ZSI6IjAyIn0=' / > < /form>",
                      "examples": [
                        "< form action = 'https://acs4.privatbank.ua/acs/creq' method = 'post' > < input type = 'hidden' name = 'creq' value = 'eyJhY3NUcmFuc0lEIjoiNDJlYmRkOWMtNzU0Zi00YzMwLTg5NDMtNDJhODQzMDY4ZTMwIiwibWVzc2FnZVR5cGUiOiJDUmVxIiwibWVzc2FnZVZlcnNpb24iOiIyLjEuMCIsInRocmVlRFNTZXJ2ZXJUcmFuc0lEIjoiZTc1YmEyOGItNjE0YS00NDE5LWFjMzQtNzkxZDlmMjkwZjE3IiwiY2hhbGxlbmdlV2luZG93U2l6ZSI6IjAyIn0=' / > < /form>"
                      ]
                    },
                    "mpi_cres": {
                      "type": "string",
                      "description": "Parameter required for the sender's authentication. Returned when receiving status `Y` or `N`",
                      "example": "eyJhY3NUcmFuc0lEIjoiYTc1ZGYxZGYtZmRhZi00YzcyLTlkOTItYTM1NDUzMzEzODU1IiwibWVzc2FnZVR5cGUiOiJDUmVzIiwibWVzc2FnZVZlcnNpb24iOiIyLjEuMCIsInRocmVlRFNTZXJ2ZXJUcmFuc0lEIjoiYTQyNzQwNmUtZDlmOS00MmI2LTk5MDItOGQ2OTZjMGVkNjJjIiwidHJhbnNTdGF0dXMiOiJBIn0",
                      "examples": [
                        "eyJhY3NUcmFuc0lEIjoiYTc1ZGYxZGYtZmRhZi00YzcyLTlkOTItYTM1NDUzMzEzODU1IiwibWVzc2FnZVR5cGUiOiJDUmVzIiwibWVzc2FnZVZlcnNpb24iOiIyLjEuMCIsInRocmVlRFNTZXJ2ZXJUcmFuc0lEIjoiYTQyNzQwNmUtZDlmOS00MmI2LTk5MDItOGQ2OTZjMGVkNjJjIiwidHJhbnNTdGF0dXMiOiJBIn0"
                      ]
                    },
                    "status": {
                      "type": "string",
                      "enum": [
                        "failure",
                        "success"
                      ],
                      "description": "Payment status.\nAvailable values:\nFinal payment statuses\n* `failure` - Failed payment\n* `success` - Successful payment",
                      "example": "success",
                      "examples": [
                        "success"
                      ]
                    },
                    "result": {
                      "type": "string",
                      "enum": [
                        "ok",
                        "error"
                      ],
                      "description": "The result of a request",
                      "example": "ok",
                      "examples": [
                        "ok"
                      ]
                    },
                    "cres": {
                      "type": "string",
                      "nullable": true,
                      "description": "CRes",
                      "example": "eyJhY3NUcmFuc0lEIjoiYTc1ZGYxZGYtZmRhZi00YzcyLTlkOTItYTM1NDUzMzEzODU1IiwibWVzc2FnZVR5cGUiOiJDUmVzIiwibWVzc2FnZVZlcnNpb24iOiIyLjEuMCIsInRocmVlRFNTZXJ2ZXJUcmFuc0lEIjoiYTQyNzQwNmUtZDlmOS00MmI2LTk5MDItOGQ2OTZjMGVkNjJjIiwidHJhbnNTdGF0dXMiOiJBIn0",
                      "examples": [
                        "eyJhY3NUcmFuc0lEIjoiYTc1ZGYxZGYtZmRhZi00YzcyLTlkOTItYTM1NDUzMzEzODU1IiwibWVzc2FnZVR5cGUiOiJDUmVzIiwibWVzc2FnZVZlcnNpb24iOiIyLjEuMCIsInRocmVlRFNTZXJ2ZXJUcmFuc0lEIjoiYTQyNzQwNmUtZDlmOS00MmI2LTk5MDItOGQ2OTZjMGVkNjJjIiwidHJhbnNTdGF0dXMiOiJBIn0"
                      ]
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/request?path=confirmation.CVV": {
      "post": {
        "summary": "Verification. CVV confirmation",
        "operationId": "confirmation/CVV",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "version": {
                    "type": "integer",
                    "enum": [
                      3
                    ],
                    "default": 3,
                    "description": "Version API",
                    "example": 3,
                    "examples": [
                      3
                    ]
                  },
                  "public_key": {
                    "type": "string",
                    "description": "Public key - the store identifier. You can get the key in the [store settings](https://www.liqpay.ua/en/adminbusiness)"
                  },
                  "action": {
                    "type": "string",
                    "enum": [
                      "confirm"
                    ],
                    "default": "confirm",
                    "example": "confirm",
                    "examples": [
                      "confirm"
                    ]
                  },
                  "card_cvv": {
                    "type": "string",
                    "description": "CVV/CVV2",
                    "example": "123",
                    "examples": [
                      "123"
                    ]
                  },
                  "confirm_token": {
                    "type": "string",
                    "description": "Payment token",
                    "example": "JmV2qDgC3LotB8njGDcEYjHFpmpAZR",
                    "examples": [
                      "JmV2qDgC3LotB8njGDcEYjHFpmpAZR"
                    ]
                  }
                },
                "required": [
                  "version",
                  "public_key",
                  "action",
                  "card_cvv",
                  "confirm_token"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "acq_id": {
                      "type": "number",
                      "description": "Acquirer ID",
                      "example": 414963,
                      "examples": [
                        414963
                      ]
                    },
                    "action": {
                      "type": "string",
                      "enum": [
                        "pay",
                        "hold",
                        "paysplit",
                        "subscribe",
                        "paydonate",
                        "auth",
                        "regular"
                      ],
                      "description": "Transaction type. Possible values:\n* `pay` - payment\n* `hold` - amount of hold on sender's account\n* `paysplit` - splitting payments\n* `subscribe` - regular payment\n* `paydonate` - donation\n* `auth` - card preauth\n* `regular` - regular payment",
                      "example": "pay",
                      "examples": [
                        "pay"
                      ]
                    },
                    "agent_commission": {
                      "type": "number",
                      "description": "Agent comission in payment currency",
                      "example": 0.0,
                      "examples": [
                        0.0
                      ]
                    },
                    "amount": {
                      "type": "number",
                      "description": "Payment amount",
                      "example": 0.02,
                      "examples": [
                        0.02
                      ]
                    },
                    "amount_bonus": {
                      "type": "number",
                      "description": "Payer bonus amount in payment currency debit",
                      "example": 0.0,
                      "examples": [
                        0.0
                      ]
                    },
                    "amount_credit": {
                      "type": "number",
                      "description": "Payment amount for credit in currency of `currency_credit`",
                      "example": 0.02,
                      "examples": [
                        0.02
                      ]
                    },
                    "amount_debit": {
                      "type": "number",
                      "description": "Payment amount for debit in currency of `currency_debit`",
                      "example": 0.02,
                      "examples": [
                        0.02
                      ]
                    },
                    "authcode_credit": {
                      "type": "string",
                      "description": "Authorization code for transaction of credit",
                      "example": "504979",
                      "examples": [
                        "504979"
                      ]
                    },
                    "authcode_debit": {
                      "type": "string",
                      "description": "Authorization code for transaction of debit",
                      "example": "988083",
                      "examples": [
                        "988083"
                      ]
                    },
                    "bonus_procent": {
                      "type": "number",
                      "description": "Discount rate in percent",
                      "example": 7.0,
                      "examples": [
                        7.0
                      ]
                    },
                    "bonus_type": {
                      "type": "string",
                      "enum": [
                        "bonusplus",
                        "discount_club",
                        "personal",
                        "promo"
                      ],
                      "description": "Bonus type, ",
                      "example": "bonusplus",
                      "examples": [
                        "bonusplus"
                      ]
                    },
                    "card_token": {
                      "type": "string",
                      "description": "Sender's card token",
                      "example": "2DFBFE626B734161130DE81E971E948D6F260",
                      "examples": [
                        "2DFBFE626B734161130DE81E971E948D6F260"
                      ]
                    },
                    "commission_credit": {
                      "type": "number",
                      "description": "Commission from the receiver in `currency_credit`",
                      "example": 0.0,
                      "examples": [
                        0.0
                      ]
                    },
                    "commission_debit": {
                      "type": "number",
                      "description": "Commission from the sender in `currency_debit`",
                      "example": 0.0,
                      "examples": [
                        0.0
                      ]
                    },
                    "create_date": {
                      "type": "integer",
                      "format": "timestamp-ms",
                      "description": "Date of payment creation",
                      "example": 1501688827926,
                      "examples": [
                        1501688827926
                      ]
                    },
                    "currency": {
                      "type": "string",
                      "description": "Payment currency",
                      "example": "UAH",
                      "examples": [
                        "UAH"
                      ]
                    },
                    "currency_credit": {
                      "type": "string",
                      "description": "Transaction currency of credit",
                      "example": "UAH",
                      "examples": [
                        "UAH"
                      ]
                    },
                    "currency_debit": {
                      "type": "string",
                      "description": "Transaction currency of debit",
                      "example": "UAH",
                      "examples": [
                        "UAH"
                      ]
                    },
                    "description": {
                      "type": "string",
                      "description": "Payment description",
                      "example": "description",
                      "examples": [
                        "description"
                      ]
                    },
                    "end_date": {
                      "type": "integer",
                      "format": "timestamp-ms",
                      "description": "Date of payment edition/end",
                      "example": 1501688827926,
                      "examples": [
                        1501688827926
                      ]
                    },
                    "ip": {
                      "type": "string",
                      "description": "Sender's IP address",
                      "example": "8.8.8.8",
                      "examples": [
                        "8.8.8.8"
                      ]
                    },
                    "is_3ds": {
                      "type": "boolean",
                      "description": "Possible values:\n* `true` - transaction passed with 3DS\n* `false` - transaction passed without 3DS"
                    },
                    "liqpay_order_id": {
                      "type": "string",
                      "description": "Payment order_id in LiqPay system",
                      "example": "NYMK3AE61501685438251925",
                      "examples": [
                        "NYMK3AE61501685438251925"
                      ]
                    },
                    "mpi_eci": {
                      "type": "integer",
                      "enum": [
                        5,
                        6,
                        7
                      ],
                      "description": "Possible values:\n* `5` - the transaction passed with 3DS (issuer and acquirer support 3d Secure technology)\n* `6` - the issuer of the payer card does not support 3d Secure technology\n* `7` - the operation passed without 3d Secure",
                      "example": 5,
                      "examples": [
                        5
                      ]
                    },
                    "order_id": {
                      "type": "string",
                      "description": "Order_id payment",
                      "example": "98R1U1OV1485849059893399",
                      "examples": [
                        "98R1U1OV1485849059893399"
                      ]
                    },
                    "payment_id": {
                      "type": "number",
                      "description": "Payment id in LiqPay system",
                      "example": 165193,
                      "examples": [
                        165193
                      ]
                    },
                    "paytype": {
                      "type": "string",
                      "enum": [
                        "card",
                        "privat24",
                        "moment_part",
                        "invoice",
                        "qr"
                      ],
                      "description": "Methods of payment. Possible values:\n* `card` - card payment\n* `privat24` - with privat24 account\n* `moment_part` - installments\n* `invoice` - to email\n* `qr` - qr code scanning",
                      "example": "card",
                      "examples": [
                        "card"
                      ]
                    },
                    "public_key": {
                      "type": "string",
                      "description": "Shop public key",
                      "example": "i000000000",
                      "examples": [
                        "i000000000"
                      ]
                    },
                    "receiver_commission": {
                      "type": "number",
                      "description": "Receiver comission in payment currency",
                      "example": 0.0,
                      "examples": [
                        0.0
                      ]
                    },
                    "rrn_credit": {
                      "type": "string",
                      "description": "Unique transaction ID in authorization and settlement system of issuer bank `Retrieval Reference number`",
                      "example": "000663782985",
                      "examples": [
                        "000663782985"
                      ]
                    },
                    "rrn_debit": {
                      "type": "string",
                      "description": "Unique transaction ID in authorization and settlement system of issuer bank `Retrieval Reference number`",
                      "example": "000663782982",
                      "examples": [
                        "000663782982"
                      ]
                    },
                    "sender_bonus": {
                      "type": "number",
                      "description": "Sender's bonus in the payment currency",
                      "example": 0.0,
                      "examples": [
                        0.0
                      ]
                    },
                    "sender_card_bank": {
                      "type": "string",
                      "description": "Sender's card bank",
                      "example": "pb",
                      "examples": [
                        "pb"
                      ]
                    },
                    "sender_card_country": {
                      "type": "string",
                      "description": "Sender's card country. Digital [ISO 3166-1 code](https://en.wikipedia.org/wiki/ISO_3166-1)",
                      "example": 804,
                      "examples": [
                        804
                      ]
                    },
                    "sender_card_mask2": {
                      "type": "string",
                      "description": "Sender's card",
                      "example": "473118*55",
                      "examples": [
                        "473118*55"
                      ]
                    },
                    "sender_card_type": {
                      "type": "string",
                      "description": "Sender's card type MC/Visa",
                      "example": "visa",
                      "examples": [
                        "visa"
                      ]
                    },
                    "sender_commission": {
                      "type": "number",
                      "description": "Commission from the sender in the payment currency",
                      "example": 0.0,
                      "examples": [
                        0.0
                      ]
                    },
                    "sender_first_name": {
                      "type": "string",
                      "description": "Sender's first name",
                      "example": "first name",
                      "examples": [
                        "first name"
                      ]
                    },
                    "sender_last_name": {
                      "type": "string",
                      "description": "Sender's last name",
                      "example": "last name",
                      "examples": [
                        "last name"
                      ]
                    },
                    "sender_phone": {
                      "type": "string",
                      "description": "Sender's phone number",
                      "example": "380950000001",
                      "examples": [
                        "380950000001"
                      ]
                    },
                    "status": {
                      "type": "string",
                      "enum": [
                        "error",
                        "failure",
                        "reversed",
                        "success",
                        "3ds_verify",
                        "wait_accept",
                        "wait_secure"
                      ],
                      "description": "Payment status.\nAvailable values:\nFinal payment statuses\n* `error` - Failed payment. Data is incorrect\n* `failure` - Failed payment\n* `reversed` - Payment refunded\n* `success` - Successful payment\nStatuses that required payment confirmation\n* `3ds_verify` - 3DS verification is required. To finish the payment you will require a [3ds_verify](https://www.liqpay.ua/en/doc/api/confirmation/3ds)\nOther payment statuses\n* `wait_accept` - Money are withdrawn from client but the store is still not verified. If the store is not activated for 60 days, payment will be automatically cancelled\n* `wait_secure` - Payment is verified",
                      "example": "success",
                      "examples": [
                        "success"
                      ]
                    },
                    "transaction_id": {
                      "type": "number",
                      "description": "Id transactions in the LiqPay system",
                      "example": 165193,
                      "examples": [
                        165193
                      ]
                    },
                    "type": {
                      "type": "string",
                      "description": "Payment type",
                      "example": "buy",
                      "examples": [
                        "buy"
                      ]
                    },
                    "version": {
                      "type": "integer",
                      "enum": [
                        3
                      ],
                      "default": 3,
                      "description": "Version API",
                      "example": 3,
                      "examples": [
                        3
                      ]
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/request?path=confirmation.sender_verify": {
      "post": {
        "summary": "Verification. Sender's verification",
        "operationId": "confirmation/sender_verify",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "version": {
                    "type": "integer",
                    "enum": [
                      3
                    ],
                    "default": 3,
                    "description": "Version API",
                    "example": 3,
                    "examples": [
                      3
                    ]
                  },
                  "public_key": {
                    "type": "string",
                    "description": "Public key - the store identifier. You can get the key in the [store settings](https://www.liqpay.ua/en/adminbusiness)"
                  },
                  "action": {
                    "type": "string",
                    "enum": [
                      "confirm"
                    ],
                    "default": "confirm",
                    "example": "confirm",
                    "examples": [
                      "confirm"
                    ]
                  },
                  "confirm_token": {
                    "type": "string",
                    "description": "Payment token",
                    "example": "JmV2qDgC3LotB8njGDcEYjHFpmpAZR",
                    "examples": [
                      "JmV2qDgC3LotB8njGDcEYjHFpmpAZR"
                    ]
                  },
                  "sender_address": {
                    "type": "string",
                    "description": "Sender's address",
                    "example": "address",
                    "examples": [
                      "address"
                    ]
                  },
                  "sender_city": {
                    "type": "string",
                    "description": "Sender's city",
                    "example": "city",
                    "examples": [
                      "city"
                    ]
                  },
                  "sender_country_code": {
                    "type": "string",
                    "description": "Country code of the sender. Digital [ISO 3166-1 code](https://en.wikipedia.org/wiki/ISO_3166-1)",
                    "example": "code",
                    "examples": [
                      "code"
                    ]
                  },
                  "sender_first_name": {
                    "type": "string",
                    "description": "Sender's first name",
                    "example": "first name",
                    "examples": [
                      "first name"
                    ]
                  },
                  "sender_last_name": {
                    "type": "string",
                    "description": "Sender's last name",
                    "example": "last name",
                    "examples": [
                      "last name"
                    ]
                  },
                  "sender_postal_code": {
                    "type": "string",
                    "description": "Sender's zip code"
                  }
                },
                "required": [
                  "version",
                  "public_key",
                  "action",
                  "confirm_token",
                  "sender_address",
                  "sender_city",
                  "sender_country_code",
                  "sender_first_name",
                  "sender_postal_code"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "acq_id": {
                      "type": "number",
                      "description": "Acquirer ID",
                      "example": 414963,
                      "examples": [
                        414963
                      ]
                    },
                    "action": {
                      "type": "string",
                      "enum": [
                        "pay",
                        "hold",
                        "paysplit",
                        "subscribe",
                        "paydonate",
                        "auth",
                        "regular"
                      ],
                      "description": "Transaction type. Possible values:\n* `pay` - payment\n* `hold` - amount of hold on sender's account\n* `paysplit` - splitting payments\n* `subscribe` - regular payment\n* `paydonate` - donation\n* `auth` - card preauth\n* `regular` - regular payment",
                      "example": "p2p",
                      "examples": [
                        "p2p"
                      ]
                    },
                    "agent_commission": {
                      "type": "number",
                      "description": "Agent comission in payment currency",
                      "example": 0.0,
                      "examples": [
                        0.0
                      ]
                    },
                    "amount": {
                      "type": "number",
                      "description": "Payment amount",
                      "example": 1.0,
                      "examples": [
                        1.0
                      ]
                    },
                    "amount_bonus": {
                      "type": "number",
                      "description": "Payer bonus amount in payment currency debit",
                      "example": 0.0,
                      "examples": [
                        0.0
                      ]
                    },
                    "amount_credit": {
                      "type": "number",
                      "description": "Payment amount for credit in currency of `currency_credit`",
                      "example": 0.04,
                      "examples": [
                        0.04
                      ]
                    },
                    "amount_debit": {
                      "type": "number",
                      "description": "Payment amount for debit in currency of `currency_debit`",
                      "example": 1.0,
                      "examples": [
                        1.0
                      ]
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code",
                      "example": "err_payment",
                      "examples": [
                        "err_payment"
                      ]
                    },
                    "commission_credit": {
                      "type": "number",
                      "description": "Commission from the receiver in `currency_credit`",
                      "example": 0.0,
                      "examples": [
                        0.0
                      ]
                    },
                    "commission_debit": {
                      "type": "number",
                      "description": "Commission from the sender in `currency_debit`",
                      "example": 0.02,
                      "examples": [
                        0.02
                      ]
                    },
                    "create_date": {
                      "type": "integer",
                      "format": "timestamp-ms",
                      "description": "Date of payment creation",
                      "example": 1501754644818,
                      "examples": [
                        1501754644818
                      ]
                    },
                    "currency": {
                      "type": "string",
                      "description": "Payment currency",
                      "example": "UAH",
                      "examples": [
                        "UAH"
                      ]
                    },
                    "currency_credit": {
                      "type": "string",
                      "description": "Transaction currency of credit",
                      "example": "USD",
                      "examples": [
                        "USD"
                      ]
                    },
                    "currency_debit": {
                      "type": "string",
                      "description": "Transaction currency of debit",
                      "example": "UAH",
                      "examples": [
                        "UAH"
                      ]
                    },
                    "description": {
                      "type": "string",
                      "description": "Payment description",
                      "example": "p2p",
                      "examples": [
                        "p2p"
                      ]
                    },
                    "end_date": {
                      "type": "integer",
                      "format": "timestamp-ms",
                      "description": "Date of payment edition/end",
                      "example": 1501754644818,
                      "examples": [
                        1501754644818
                      ]
                    },
                    "err_code": {
                      "type": "string",
                      "description": "Error code",
                      "example": "err_payment",
                      "examples": [
                        "err_payment"
                      ]
                    },
                    "err_description": {
                      "type": "string",
                      "description": "Error description",
                      "example": "Error payment",
                      "examples": [
                        "Error payment"
                      ]
                    },
                    "is_3ds": {
                      "type": "boolean",
                      "description": "Possible values:\n* `true` - transaction passed with 3DS\n* `false` - transaction passed without 3DS"
                    },
                    "liqpay_order_id": {
                      "type": "string",
                      "description": "Payment order_id in LiqPay system",
                      "example": "NYMK3AE61501685438251925",
                      "examples": [
                        "NYMK3AE61501685438251925"
                      ]
                    },
                    "mpi_eci": {
                      "type": "integer",
                      "enum": [
                        5,
                        6,
                        7
                      ],
                      "description": "Possible values:\n* `5` - the transaction passed with 3DS (issuer and acquirer support 3d Secure technology)\n* `6` - the issuer of the payer card does not support 3d Secure technology\n* `7` - the operation passed without 3d Secure",
                      "example": 7,
                      "examples": [
                        7
                      ]
                    },
                    "order_id": {
                      "type": "string",
                      "description": "Order_id payment",
                      "example": "98R1U1OV1485849059893399",
                      "examples": [
                        "98R1U1OV1485849059893399"
                      ]
                    },
                    "payment_id": {
                      "type": "number",
                      "description": "Payment id in LiqPay system",
                      "example": 165235,
                      "examples": [
                        165235
                      ]
                    },
                    "paytype": {
                      "type": "string",
                      "enum": [
                        "card",
                        "privat24",
                        "moment_part",
                        "cash",
                        "invoice",
                        "qr"
                      ],
                      "description": "Methods of payment. Possible values:\n* `card` - card payment\n* `privat24` - with privat24 account\n* `moment_part` - installments\n* `cash` - cash\n* `invoice` - to email\n* `qr` - qr code scanning",
                      "example": "card",
                      "examples": [
                        "card"
                      ]
                    },
                    "public_key": {
                      "type": "string",
                      "description": "Shop public key",
                      "example": "i000000000",
                      "examples": [
                        "i000000000"
                      ]
                    },
                    "receiver_commission": {
                      "type": "number",
                      "description": "Receiver comission in payment currency",
                      "example": 0.0,
                      "examples": [
                        0.0
                      ]
                    },
                    "sender_bonus": {
                      "type": "number",
                      "description": "Sender's bonus in the payment currency",
                      "example": 0.0,
                      "examples": [
                        0.0
                      ]
                    },
                    "sender_card_bank": {
                      "type": "string",
                      "description": "Sender's card bank",
                      "example": "pb",
                      "examples": [
                        "pb"
                      ]
                    },
                    "sender_card_country": {
                      "type": "string",
                      "description": "Sender's card country. Digital [ISO 3166-1 code](https://en.wikipedia.org/wiki/ISO_3166-1)",
                      "example": 804,
                      "examples": [
                        804
                      ]
                    },
                    "sender_card_mask2": {
                      "type": "string",
                      "description": "Sender's card",
                      "example": "414962*99",
                      "examples": [
                        "414962*99"
                      ]
                    },
                    "sender_card_type": {
                      "type": "string",
                      "description": "Sender's card type MC/Visa",
                      "example": "visa",
                      "examples": [
                        "visa"
                      ]
                    },
                    "sender_commission": {
                      "type": "number",
                      "description": "Commission from the sender in the payment currency",
                      "example": 0.02,
                      "examples": [
                        0.02
                      ]
                    },
                    "sender_first_name": {
                      "type": "string",
                      "description": "The name of the sender",
                      "example": "test",
                      "examples": [
                        "test"
                      ]
                    },
                    "sender_last_name": {
                      "type": "string",
                      "description": "Sender's last name"
                    },
                    "sender_phone": {
                      "type": "string",
                      "description": "Sender's phone number",
                      "example": "380950000001",
                      "examples": [
                        "380950000001"
                      ]
                    },
                    "status": {
                      "type": "string",
                      "enum": [
                        "error",
                        "failure",
                        "reversed",
                        "success",
                        "wait_accept",
                        "wait_secure"
                      ],
                      "description": "Payment status.\nAvailable values:\nFinal payment statuses\n* `error` - Failed payment. Data is incorrect\n* `failure` - Failed payment\n* `reversed` - Payment refunded\n* `success` - Successful payment\nOther payment statuses\n* `wait_accept` - Money are withdrawn from client but the store is still not verified. If the store is not activated for 60 days, payment will be automatically cancelled\n* `wait_secure` - Payment is verified",
                      "example": "failure",
                      "examples": [
                        "failure"
                      ]
                    },
                    "transaction_id": {
                      "type": "number",
                      "description": "Id transactions in the LiqPay system",
                      "example": 165235,
                      "examples": [
                        165235
                      ]
                    },
                    "version": {
                      "type": "integer",
                      "enum": [
                        3
                      ],
                      "default": 3,
                      "description": "Version API",
                      "example": 3,
                      "examples": [
                        3
                      ]
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/request?path=confirmation.receiver_verify": {
      "post": {
        "summary": "Verification. Recipient's verification",
        "operationId": "confirmation/receiver_verify",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "version": {
                    "type": "integer",
                    "enum": [
                      3
                    ],
                    "default": 3,
                    "description": "Version API",
                    "example": 3,
                    "examples": [
                      3
                    ]
                  },
                  "public_key": {
                    "type": "string",
                    "description": "Public key - the store identifier. You can get the key in the [store settings](https://www.liqpay.ua/en/adminbusiness)"
                  },
                  "action": {
                    "type": "string",
                    "enum": [
                      "confirm"
                    ],
                    "default": "confirm",
                    "example": "confirm",
                    "examples": [
                      "confirm"
                    ]
                  },
                  "confirm_token": {
                    "type": "string",
                    "description": "Payment token",
                    "example": "JmV2qDgC3LotB8njGDcEYjHFpmpAZR",
                    "examples": [
                      "JmV2qDgC3LotB8njGDcEYjHFpmpAZR"
                    ]
                  },
                  "receiver_first_name": {
                    "type": "string",
                    "description": "Recipient first name",
                    "example": "first name",
                    "examples": [
                      "first name"
                    ]
                  },
                  "receiver_last_name": {
                    "type": "string",
                    "description": "Recipient last name",
                    "example": "last name",
                    "examples": [
                      "last name"
                    ]
                  }
                },
                "required": [
                  "version",
                  "public_key",
                  "action",
                  "confirm_token",
                  "receiver_first_name",
                  "receiver_last_name"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "acq_id": {
                      "type": "number",
                      "description": "Acquirer ID",
                      "example": 414963,
                      "examples": [
                        414963
                      ]
                    },
                    "action": {
                      "type": "string",
                      "enum": [
                        "pay",
                        "hold",
                        "paysplit",
                        "subscribe",
                        "paydonate",
                        "auth",
                        "regular"
                      ],
                      "description": "Transaction type. Possible values:\n* `pay` - payment\n* `hold` - amount of hold on sender's account\n* `paysplit` - splitting payments\n* `subscribe` - regular payment\n* `paydonate` - donation\n* `auth` - card preauth\n* `regular` - regular payment",
                      "example": "p2p",
                      "examples": [
                        "p2p"
                      ]
                    },
                    "agent_commission": {
                      "type": "number",
                      "description": "Agent comission in payment currency",
                      "example": 0.0,
                      "examples": [
                        0.0
                      ]
                    },
                    "amount": {
                      "type": "number",
                      "description": "Payment amount",
                      "example": 1.0,
                      "examples": [
                        1.0
                      ]
                    },
                    "amount_bonus": {
                      "type": "number",
                      "description": "Payer bonus amount in payment currency debit",
                      "example": 0.0,
                      "examples": [
                        0.0
                      ]
                    },
                    "amount_credit": {
                      "type": "number",
                      "description": "Payment amount for credit in currency of `currency_credit`",
                      "example": 0.04,
                      "examples": [
                        0.04
                      ]
                    },
                    "amount_debit": {
                      "type": "number",
                      "description": "Payment amount for debit in currency of `currency_debit`",
                      "example": 1.0,
                      "examples": [
                        1.0
                      ]
                    },
                    "code": {
                      "type": "string",
                      "description": "Error code",
                      "example": "err_payment",
                      "examples": [
                        "err_payment"
                      ]
                    },
                    "commission_credit": {
                      "type": "number",
                      "description": "Commission from the receiver in `currency_credit`",
                      "example": 0.0,
                      "examples": [
                        0.0
                      ]
                    },
                    "commission_debit": {
                      "type": "number",
                      "description": "Commission from the sender in `currency_debit`",
                      "example": 0.02,
                      "examples": [
                        0.02
                      ]
                    },
                    "create_date": {
                      "type": "integer",
                      "format": "timestamp-ms",
                      "description": "Date of payment creation",
                      "example": 1501754644818,
                      "examples": [
                        1501754644818
                      ]
                    },
                    "currency": {
                      "type": "string",
                      "description": "Payment currency",
                      "example": "UAH",
                      "examples": [
                        "UAH"
                      ]
                    },
                    "currency_credit": {
                      "type": "string",
                      "description": "Transaction currency of credit",
                      "example": "USD",
                      "examples": [
                        "USD"
                      ]
                    },
                    "currency_debit": {
                      "type": "string",
                      "description": "Transaction currency of debit",
                      "example": "UAH",
                      "examples": [
                        "UAH"
                      ]
                    },
                    "description": {
                      "type": "string",
                      "description": "Payment description",
                      "example": "p2p",
                      "examples": [
                        "p2p"
                      ]
                    },
                    "end_date": {
                      "type": "integer",
                      "format": "timestamp-ms",
                      "description": "Date of payment edition/end",
                      "example": 1501754644818,
                      "examples": [
                        1501754644818
                      ]
                    },
                    "err_code": {
                      "type": "string",
                      "description": "Error code",
                      "example": "err_payment",
                      "examples": [
                        "err_payment"
                      ]
                    },
                    "err_description": {
                      "type": "string",
                      "description": "Error description",
                      "example": "Error payment",
                      "examples": [
                        "Error payment"
                      ]
                    },
                    "is_3ds": {
                      "type": "boolean",
                      "description": "Possible values:\n* `true` - transaction passed with 3DS\n* `false` - transaction passed without 3DS"
                    },
                    "liqpay_order_id": {
                      "type": "string",
                      "description": "Payment order_id in LiqPay system",
                      "example": "NYMK3AE61501685438251925",
                      "examples": [
                        "NYMK3AE61501685438251925"
                      ]
                    },
                    "mpi_eci": {
                      "type": "integer",
                      "enum": [
                        5,
                        6,
                        7
                      ],
                      "description": "Possible values:\n* `5` - the transaction passed with 3DS (issuer and acquirer support 3d Secure technology)\n* `6` - the issuer of the payer card does not support 3d Secure technology\n* `7` - the operation passed without 3d Secure",
                      "example": 7,
                      "examples": [
                        7
                      ]
                    },
                    "order_id": {
                      "type": "string",
                      "description": "Order_id payment",
                      "example": "98R1U1OV1485849059893399",
                      "examples": [
                        "98R1U1OV1485849059893399"
                      ]
                    },
                    "payment_id": {
                      "type": "number",
                      "description": "Payment id in LiqPay system",
                      "example": 165235,
                      "examples": [
                        165235
                      ]
                    },
                    "paytype": {
                      "type": "string",
                      "enum": [
                        "card",
                        "privat24",
                        "moment_part",
                        "cash",
                        "invoice",
                        "qr"
                      ],
                      "description": "Methods of payment. Possible values:\n* `card` - card payment\n* `privat24` - with privat24 account\n* `moment_part` - installments\n* `cash` - cash\n* `invoice` - to email\n* `qr` - qr code scanning",
                      "example": "card",
                      "examples": [
                        "card"
                      ]
                    },
                    "public_key": {
                      "type": "string",
                      "description": "Shop public key",
                      "example": "i000000000",
                      "examples": [
                        "i000000000"
                      ]
                    },
                    "receiver_commission": {
                      "type": "number",
                      "description": "Receiver comission in payment currency",
                      "example": 0.0,
                      "examples": [
                        0.0
                      ]
                    },
                    "sender_bonus": {
                      "type": "number",
                      "description": "Sender's bonus in the payment currency",
                      "example": 0.0,
                      "examples": [
                        0.0
                      ]
                    },
                    "sender_card_bank": {
                      "type": "string",
                      "description": "Sender's card bank",
                      "example": "pb",
                      "examples": [
                        "pb"
                      ]
                    },
                    "sender_card_country": {
                      "type": "string",
                      "description": "Sender's card country. Digital [ISO 3166-1 code](https://en.wikipedia.org/wiki/ISO_3166-1)",
                      "example": 804,
                      "examples": [
                        804
                      ]
                    },
                    "sender_card_mask2": {
                      "type": "string",
                      "description": "Sender's card",
                      "example": "414962*99",
                      "examples": [
                        "414962*99"
                      ]
                    },
                    "sender_card_type": {
                      "type": "string",
                      "description": "Sender's card type MC/Visa",
                      "example": "visa",
                      "examples": [
                        "visa"
                      ]
                    },
                    "sender_commission": {
                      "type": "number",
                      "description": "Commission from the sender in the payment currency",
                      "example": 0.02,
                      "examples": [
                        0.02
                      ]
                    },
                    "sender_first_name": {
                      "type": "string",
                      "description": "The name of the sender",
                      "example": "test",
                      "examples": [
                        "test"
                      ]
                    },
                    "sender_last_name": {
                      "type": "string",
                      "description": "Sender's last name"
                    },
                    "sender_phone": {
                      "type": "string",
                      "description": "Sender's phone number",
                      "example": "380950000001",
                      "examples": [
                        "380950000001"
                      ]
                    },
                    "status": {
                      "type": "string",
                      "enum": [
                        "error",
                        "failure",
                        "reversed",
                        "success",
                        "wait_accept",
                        "wait_secure"
                      ],
                      "description": "Payment status.\nAvailable values:\nFinal payment statuses\n* `error` - Failed payment. Data is incorrect\n* `failure` - Failed payment\n* `reversed` - Payment refunded\n* `success` - Successful payment\nOther payment statuses\n* `wait_accept` - Money are withdrawn from client but the store is still not verified. If the store is not activated for 60 days, payment will be automatically cancelled\n* `wait_secure` - Payment is verified",
                      "example": "failure",
                      "examples": [
                        "failure"
                      ]
                    },
                    "transaction_id": {
                      "type": "number",
                      "description": "Id transactions in the LiqPay system",
                      "example": 165235,
                      "examples": [
                        165235
                      ]
                    },
                    "version": {
                      "type": "integer",
                      "enum": [
                        3
                      ],
                      "default": 3,
                      "description": "Version API",
                      "example": 3,
                      "examples": [
                        3
                      ]
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/request?path=confirmation.cardverification": {
      "post": {
        "summary": "Verification. Cardverification",
        "operationId": "confirmation/cardverification",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "version": {
                    "type": "integer",
                    "enum": [
                      3
                    ],
                    "default": 3,
                    "description": "Version API"
                  },
                  "public_key": {
                    "type": "string",
                    "description": "Public key - the store identifier. You can get the key in the [store settings](https://www.liqpay.ua/en/adminbusiness)"
                  },
                  "action": {
                    "type": "string",
                    "enum": [
                      "cardverification"
                    ],
                    "default": "cardverification"
                  },
                  "card": {
                    "type": "string",
                    "description": "Card number of the payer"
                  },
                  "card_cvv": {
                    "type": "string",
                    "description": "CVV/CVV2"
                  },
                  "card_exp_month": {
                    "type": "string",
                    "description": "Expiry month of the payer's card. This parameter is required if the card number or an unencrypted token is being passed",
                    "example": "08",
                    "examples": [
                      "08"
                    ]
                  },
                  "card_exp_year": {
                    "type": "string",
                    "description": "Expiry year of the payer's card. This parameter is required if the card number or an unencrypted token is being passed",
                    "example": "19",
                    "examples": [
                      "19"
                    ]
                  },
                  "description": {
                    "type": "string",
                    "description": "Payment description"
                  },
                  "ip": {
                    "type": "string",
                    "description": "Client IP"
                  },
                  "order_id": {
                    "type": "string",
                    "maxLength": 255,
                    "description": "Unique purchase ID in your shop"
                  },
                  "language": {
                    "type": "string",
                    "enum": [
                      "uk",
                      "en"
                    ],
                    "default": "uk",
                    "description": "Customer's language"
                  },
                  "verifycode": {
                    "type": "string",
                    "format": "boolean-yesno",
                    "enum": [
                      "Y"
                    ],
                    "default": "Y",
                    "description": "Dynamic verification code is generated and going back to `Callback`. Also generated code will be transferred to verification transactions for displaying in statement by client's card. Works for `action` = `auth`"
                  }
                },
                "required": [
                  "version",
                  "public_key",
                  "action",
                  "card",
                  "card_cvv",
                  "card_exp_month",
                  "card_exp_year",
                  "description",
                  "ip",
                  "order_id"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "acq_id": {
                      "type": "number",
                      "description": "Acquirer ID",
                      "example": 414963,
                      "examples": [
                        414963
                      ]
                    },
                    "action": {
                      "type": "string",
                      "enum": [
                        "cardverification"
                      ],
                      "default": "cardverification",
                      "example": "cardverification",
                      "examples": [
                        "cardverification"
                      ]
                    },
                    "agent_commission": {
                      "type": "number",
                      "description": "Agent comission in payment currency",
                      "example": 0.0,
                      "examples": [
                        0.0
                      ]
                    },
                    "amount": {
                      "type": "number",
                      "description": "Payment amount",
                      "example": 0,
                      "examples": [
                        0
                      ]
                    },
                    "amount_bonus": {
                      "type": "number",
                      "description": "Payer bonus amount in payment currency debit",
                      "example": 0.0,
                      "examples": [
                        0.0
                      ]
                    },
                    "amount_credit": {
                      "type": "number",
                      "description": "Payment amount for credit in currency of `currency_credit`",
                      "example": 0,
                      "examples": [
                        0
                      ]
                    },
                    "amount_debit": {
                      "type": "number",
                      "description": "Payment amount for debit in currency of `currency_debit`",
                      "example": 0,
                      "examples": [
                        0
                      ]
                    },
                    "authcode_credit": {
                      "type": "string",
                      "description": "Authorization code for transaction of credit"
                    },
                    "authcode_debit": {
                      "type": "string",
                      "description": "Authorization code for transaction of debit",
                      "example": "559310",
                      "examples": [
                        "559310"
                      ]
                    },
                    "commission_credit": {
                      "type": "number",
                      "description": "Commission from the receiver in `currency_credit`",
                      "example": 0.0,
                      "examples": [
                        0.0
                      ]
                    },
                    "commission_debit": {
                      "type": "number",
                      "description": "Commission from the sender in `currency_debit`",
                      "example": 0.0,
                      "examples": [
                        0.0
                      ]
                    },
                    "create_date": {
                      "type": "integer",
                      "format": "timestamp-ms",
                      "description": "Date of payment creation",
                      "example": 1501687647977,
                      "examples": [
                        1501687647977
                      ]
                    },
                    "currency": {
                      "type": "string",
                      "description": "Payment currency",
                      "example": "UAH",
                      "examples": [
                        "UAH"
                      ]
                    },
                    "currency_credit": {
                      "type": "string",
                      "description": "Transaction currency of credit",
                      "example": "UAH",
                      "examples": [
                        "UAH"
                      ]
                    },
                    "currency_debit": {
                      "type": "string",
                      "description": "Transaction currency of debit",
                      "example": "UAH",
                      "examples": [
                        "UAH"
                      ]
                    },
                    "description": {
                      "type": "string",
                      "description": "Payment description",
                      "example": "тест",
                      "examples": [
                        "тест"
                      ]
                    },
                    "end_date": {
                      "type": "integer",
                      "format": "timestamp-ms",
                      "description": "Date of payment edition/end",
                      "example": 1501687647977,
                      "examples": [
                        1501687647977
                      ]
                    },
                    "ip": {
                      "type": "string",
                      "description": "Sender's IP address"
                    },
                    "is_3ds": {
                      "type": "boolean",
                      "description": "Possible values:\n* `true` - transaction passed with 3DS\n* `false` - transaction passed without 3DS"
                    },
                    "liqpay_order_id": {
                      "type": "string",
                      "description": "Payment order_id in LiqPay system",
                      "example": "NYMK3AE61501685438251925",
                      "examples": [
                        "NYMK3AE61501685438251925"
                      ]
                    },
                    "mpi_eci": {
                      "type": "integer",
                      "enum": [
                        5,
                        6,
                        7
                      ],
                      "description": "Possible values:\n* `5` - the transaction passed with 3DS (issuer and acquirer support 3d Secure technology)\n* `6` - the issuer of the payer card does not support 3d Secure technology\n* `7` - the operation passed without 3d Secure",
                      "example": 7,
                      "examples": [
                        7
                      ]
                    },
                    "order_id": {
                      "type": "string",
                      "description": "Order_id payment",
                      "example": "98R1U1OV1485849059893399",
                      "examples": [
                        "98R1U1OV1485849059893399"
                      ]
                    },
                    "payment_id": {
                      "type": "number",
                      "description": "Payment id in LiqPay system",
                      "example": 165192,
                      "examples": [
                        165192
                      ]
                    },
                    "paytype": {
                      "type": "string",
                      "enum": [
                        "card",
                        "privat24",
                        "moment_part",
                        "invoice",
                        "qr"
                      ],
                      "description": "Methods of payment. Possible values:\n* `card` - card payment\n* `privat24` - with privat24 account\n* `moment_part` - installments\n* `invoice` - to email\n* `qr` - qr code scanning",
                      "example": "card",
                      "examples": [
                        "card"
                      ]
                    },
                    "public_key": {
                      "type": "string",
                      "description": "Shop public key",
                      "example": "i000000000",
                      "examples": [
                        "i000000000"
                      ]
                    },
                    "confirm_phone": {
                      "type": "string",
                      "description": "Phone number used to send the verifycode",
                      "example": "380950000001",
                      "examples": [
                        "380950000001"
                      ]
                    },
                    "receiver_commission": {
                      "type": "number",
                      "description": "Receiver comission in payment currency",
                      "example": 0.0,
                      "examples": [
                        0.0
                      ]
                    },
                    "sender_bonus": {
                      "type": "number",
                      "description": "Sender's bonus in the payment currency",
                      "example": 0.0,
                      "examples": [
                        0.0
                      ]
                    },
                    "sender_card_bank": {
                      "type": "string",
                      "description": "Sender's card bank",
                      "example": "pb",
                      "examples": [
                        "pb"
                      ]
                    },
                    "sender_card_country": {
                      "type": "string",
                      "description": "Sender's card country. Digital [ISO 3166-1 code](https://en.wikipedia.org/wiki/ISO_3166-1)",
                      "example": 804,
                      "examples": [
                        804
                      ]
                    },
                    "sender_card_mask2": {
                      "type": "string",
                      "description": "Sender's card",
                      "example": "414962*99",
                      "examples": [
                        "414962*99"
                      ]
                    },
                    "sender_card_type": {
                      "type": "string",
                      "description": "Sender's card type MC/Visa",
                      "example": "visa",
                      "examples": [
                        "visa"
                      ]
                    },
                    "sender_commission": {
                      "type": "number",
                      "description": "Commission from the sender in the payment currency",
                      "example": 0.0,
                      "examples": [
                        0.0
                      ]
                    },
                    "sender_first_name": {
                      "type": "string",
                      "description": "Sender's first name"
                    },
                    "sender_last_name": {
                      "type": "string",
                      "description": "Sender's last name"
                    },
                    "sender_phone": {
                      "type": "string",
                      "description": "Sender's phone number",
                      "example": "380950000001",
                      "examples": [
                        "380950000001"
                      ]
                    },
                    "status": {
                      "type": "string",
                      "enum": [
                        "error",
                        "failure",
                        "success",
                        "3ds_verify"
                      ],
                      "description": "Verification status.\nAvailable values:\nFinal verification statuses\n* `error` - Failed verification. Data is incorrect\n* `failure` - Failed verification\n* `success` - Successful verification\nStatuses that required verification confirmation\n* `3ds_verify` - 3DS verification is required. To finish the verification you will require a [3ds_verify](https://www.liqpay.ua/en/doc/api/confirmation/3ds)",
                      "example": "success",
                      "examples": [
                        "success"
                      ]
                    },
                    "transaction_id": {
                      "type": "number",
                      "description": "Id transactions in the LiqPay system",
                      "example": 165192,
                      "examples": [
                        165192
                      ]
                    },
                    "type": {
                      "type": "string",
                      "description": "Payment type"
                    },
                    "version": {
                      "type": "integer",
                      "enum": [
                        3
                      ],
                      "default": 3,
                      "description": "Version API",
                      "example": 3,
                      "examples": [
                        3
                      ]
                    },
                    "verifycode": {
                      "type": "string",
                      "format": "boolean-yesno",
                      "enum": [
                        "Y"
                      ],
                      "default": "Y",
                      "description": "Dynamic verification code",
                      "example": "S8SBQM",
                      "examples": [
                        "S8SBQM"
                      ]
                    },
                    "rrn_debit": {
                      "type": "string",
                      "description": "Unique transaction ID in authorization and settlement system of issuer bank `Retrieval Reference number`",
                      "example": "000663770891",
                      "examples": [
                        "000663770891"
                      ]
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/request?path=information.payment_archive": {
      "post": {
        "summary": "Informational. Payments archive",
        "operationId": "information/payment_archive",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "version": {
                    "type": "integer",
                    "enum": [
                      3
                    ],
                    "default": 3,
                    "description": "Version API",
                    "example": 3,
                    "examples": [
                      3
                    ]
                  },
                  "public_key": {
                    "type": "string",
                    "description": "Public key - the store identifier. You can get the key in the [store settings](https://www.liqpay.ua/en/adminbusiness)"
                  },
                  "action": {
                    "type": "string",
                    "enum": [
                      "reports"
                    ],
                    "default": "reports",
                    "example": "reports",
                    "examples": [
                      "reports"
                    ]
                  },
                  "resp_format": {
                    "type": "string",
                    "enum": [
                      "json",
                      "csv",
                      "xml"
                    ],
                    "default": "json",
                    "description": "Report format"
                  },
                  "date_from": {
                    "type": "integer",
                    "format": "timestamp-ms",
                    "description": "Start date of a report in `timestamp` in milliseconds",
                    "example": 1443161386000,
                    "examples": [
                      1443161386000
                    ]
                  },
                  "date_to": {
                    "type": "integer",
                    "format": "timestamp-ms",
                    "description": "End date of a report in `timestamp` in milliseconds",
                    "example": 1443164386000,
                    "examples": [
                      1443164386000
                    ]
                  }
                },
                "required": [
                  "version",
                  "public_key",
                  "action"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "result": {
                      "type": "string",
                      "enum": [
                        "ok",
                        "error",
                        "success"
                      ],
                      "description": "The result of a request",
                      "example": "success",
                      "examples": [
                        "success"
                      ]
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "acq_id": {
                            "type": "number",
                            "description": "Acquirer ID",
                            "example": 414963,
                            "examples": [
                              414963
                            ]
                          },
                          "action": {
                            "type": "string",
                            "enum": [
                              "pay",
                              "hold",
                              "paysplit",
                              "subscribe",
                              "paydonate",
                              "auth",
                              "regular"
                            ],
                            "description": "Transaction type. Possible values:\n* `pay` - payment\n* `hold` - amount of hold on sender's account\n* `paysplit` - splitting payments\n* `subscribe` - creation of a regular payment\n* `paydonate` - donation\n* `auth` - card preauth\n* `regular` - regular payment",
                            "example": "regular",
                            "examples": [
                              "regular"
                            ]
                          },
                          "agent_commission": {
                            "type": "number",
                            "description": "Agent comission in payment currency",
                            "example": 0.0,
                            "examples": [
                              0.0
                            ]
                          },
                          "amount": {
                            "type": "number",
                            "description": "Payment amount",
                            "example": 0.02,
                            "examples": [
                              0.02
                            ]
                          },
                          "amount_bonus": {
                            "type": "number",
                            "description": "Payer bonus amount in payment currency debit",
                            "example": 0.0,
                            "examples": [
                              0.0
                            ]
                          },
                          "amount_credit": {
                            "type": "number",
                            "description": "Payment amount for credit in currency of `currency_credit`",
                            "example": 0.02,
                            "examples": [
                              0.02
                            ]
                          },
                          "amount_debit": {
                            "type": "number",
                            "description": "Payment amount for debit in currency of `currency_debit`",
                            "example": 0.02,
                            "examples": [
                              0.02
                            ]
                          },
                          "authcode_credit": {
                            "type": "string",
                            "description": "Authorization code for transaction of credit",
                            "example": "790643",
                            "examples": [
                              "790643"
                            ]
                          },
                          "authcode_debit": {
                            "type": "string",
                            "description": "Authorization code for transaction of debit",
                            "example": "557642",
                            "examples": [
                              "557642"
                            ]
                          },
                          "commission_credit": {
                            "type": "number",
                            "description": "Commission from the receiver in `currency_credit`",
                            "example": 0.0,
                            "examples": [
                              0.0
                            ]
                          },
                          "commission_debit": {
                            "type": "number",
                            "description": "Commission from the sender in `currency_debit`",
                            "example": 0.0,
                            "examples": [
                              0.0
                            ]
                          },
                          "create_date": {
                            "type": "integer",
                            "format": "timestamp-ms",
                            "description": "Date of payment creation",
                            "example": 1498226196229,
                            "examples": [
                              1498226196229
                            ]
                          },
                          "currency": {
                            "type": "string",
                            "description": "Payment currency",
                            "example": "UAH",
                            "examples": [
                              "UAH"
                            ]
                          },
                          "currency_credit": {
                            "type": "string",
                            "description": "Transaction currency of credit",
                            "example": "UAH",
                            "examples": [
                              "UAH"
                            ]
                          },
                          "currency_debit": {
                            "type": "string",
                            "description": "Transaction currency of debit",
                            "example": "UAH",
                            "examples": [
                              "UAH"
                            ]
                          },
                          "description": {
                            "type": "string",
                            "description": "Payment description",
                            "example": "test",
                            "examples": [
                              "test"
                            ]
                          },
                          "end_date": {
                            "type": "integer",
                            "format": "timestamp-ms",
                            "description": "Date of payment edition/end",
                            "example": 1498226199886,
                            "examples": [
                              1498226199886
                            ]
                          },
                          "is_3ds": {
                            "type": "boolean",
                            "description": "Possible values:\n* `true` - transaction passed with 3DS,\n* `false` - transaction passed without 3DS"
                          },
                          "liqpay_order_id": {
                            "type": "string",
                            "description": "Payment order_id in LiqPay system",
                            "example": "NYMK3AE61501685438251925",
                            "examples": [
                              "NYMK3AE61501685438251925"
                            ]
                          },
                          "mpi_eci": {
                            "type": "integer",
                            "enum": [
                              5,
                              6,
                              7
                            ],
                            "description": "Possible values:\n* `5` - the transaction passed with 3DS (issuer and acquirer support 3d Secure technology)\n* `6` - the issuer of the payer card does not support 3d Secure technology\n* `7` - the operation passed without 3d Secure",
                            "example": 7,
                            "examples": [
                              7
                            ]
                          },
                          "order_id": {
                            "type": "string",
                            "description": "Order_id payment",
                            "example": "98R1U1OV1485849059893399",
                            "examples": [
                              "98R1U1OV1485849059893399"
                            ]
                          },
                          "payment_id": {
                            "type": "number",
                            "description": "Payment id in LiqPay system",
                            "example": 157018,
                            "examples": [
                              157018
                            ]
                          },
                          "paytype": {
                            "type": "string",
                            "enum": [
                              "card",
                              "privat24",
                              "masterpass",
                              "moment_part",
                              "cash",
                              "invoice",
                              "qr"
                            ],
                            "description": "Methods of payment. Possible values:\n* `card` - card payment\n* `privat24` - with privat24 account\n* `masterpass` - with masterpass account\n* `moment_part` - installments\n* `cash` - cash\n* `invoice` - to email\n* `qr` - qr code scanning",
                            "example": "card",
                            "examples": [
                              "card"
                            ]
                          },
                          "public_key": {
                            "type": "string",
                            "description": "Shop public key",
                            "example": "i000000000",
                            "examples": [
                              "i000000000"
                            ]
                          },
                          "receiver_commission": {
                            "type": "number",
                            "description": "Receiver comission in payment currency",
                            "example": 0.0,
                            "examples": [
                              0.0
                            ]
                          },
                          "rrn_credit": {
                            "type": "string",
                            "description": "Unique transaction ID in authorization and settlement system of issuer bank `Retrieval Reference number`",
                            "example": "000637410802",
                            "examples": [
                              "000637410802"
                            ]
                          },
                          "rrn_debit": {
                            "type": "string",
                            "description": "Unique transaction ID in authorization and settlement system of issuer bank `Retrieval Reference number`",
                            "example": "000637410774",
                            "examples": [
                              "000637410774"
                            ]
                          },
                          "sender_bonus": {
                            "type": "number",
                            "description": "Sender's bonus in the payment currency",
                            "example": 0.0,
                            "examples": [
                              0.0
                            ]
                          },
                          "sender_card_bank": {
                            "type": "string",
                            "description": "Sender's card bank",
                            "example": "pb",
                            "examples": [
                              "pb"
                            ]
                          },
                          "sender_card_country": {
                            "type": "string",
                            "description": "Sender's card country. Digital [ISO 3166-1 code](https://en.wikipedia.org/wiki/ISO_3166-1)",
                            "example": 804,
                            "examples": [
                              804
                            ]
                          },
                          "sender_card_mask2": {
                            "type": "string",
                            "description": "Sender's card",
                            "example": "414962*99",
                            "examples": [
                              "414962*99"
                            ]
                          },
                          "sender_card_type": {
                            "type": "string",
                            "description": "Sender's card type MC/Visa",
                            "example": "visa",
                            "examples": [
                              "visa"
                            ]
                          },
                          "sender_commission": {
                            "type": "number",
                            "description": "Commission from the sender in the payment currency",
                            "example": 0.0,
                            "examples": [
                              0.0
                            ]
                          },
                          "sender_first_name": {
                            "type": "string",
                            "description": "The name of the sender",
                            "example": "test",
                            "examples": [
                              "test"
                            ]
                          },
                          "sender_last_name": {
                            "type": "string",
                            "description": "Sender's last name",
                            "example": "test",
                            "examples": [
                              "test"
                            ]
                          },
                          "sender_phone": {
                            "type": "string",
                            "description": "Sender's phone number",
                            "example": "380950000001",
                            "examples": [
                              "380950000001"
                            ]
                          },
                          "status": {
                            "type": "string",
                            "enum": [
                              "error",
                              "failure",
                              "reversed",
                              "success",
                              "3ds_verify",
                              "cvv_verify",
                              "receiver_verify",
                              "sender_verify",
                              "wait_accept",
                              "wait_secure"
                            ],
                            "description": "Payment status.\nAvailable values:\nFinal payment statuses\n* `error` - Failed payment. Data is incorrect\n* `failure` - Failed payment\n* `reversed` - Payment refunded\n* `success` - Successful payment\nStatuses that required payment confirmation\n* `3ds_verify` - 3DS verification is required.\n To finish the payment you will require a [3ds_verify](https://www.liqpay.ua/en/doc/api/confirmation/3ds)\n* `cvv_verify` - Sender's card CVV is required. To finish the payment you will require a [cvv_verify](https://www.liqpay.ua/en/doc/api/confirmation/CVV)\n`otp_verify` OTP confirmation is required. OTP is sent to a customer phone number.\n To finish the payment you will require a [otp_verify](https://www.liqpay.ua/en/doc/api/confirmation/OTP)\n* `receiver_verify` - Receiver additional data is required. To finish the payment you will require a [receiver_verify](https://www.liqpay.ua/en/doc/api/confirmation/receiver_verify)\n* `sender_verify` - Sender's additional data is required.\n To finish the payment you will require a [sender_verify](https://www.liqpay.ua/en/doc/api/confirmation/sender_verify)\nOther payment statuses\n* `wait_accept` - Money are withdrawn from client but the store is still not verified. If the store is not activated for 60 days, payment will be automatically cancelled\n* `wait_secure` - Payment is verified",
                            "example": "success",
                            "examples": [
                              "success"
                            ]
                          },
                          "transaction_id": {
                            "type": "number",
                            "description": "Id transactions in the LiqPay system",
                            "example": 157018,
                            "examples": [
                              157018
                            ]
                          },
                          "type": {
                            "type": "string",
                            "description": "Payment type",
                            "example": "regular",
                            "examples": [
                              "regular"
                            ]
                          },
                          "version": {
                            "type": "integer",
                            "enum": [
                              3
                            ],
                            "default": 3,
                            "description": "Version API",
                            "example": 3,
                            "examples": [
                              3
                            ]
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/request?path=information.register.compensation_per_day": {
      "post": {
        "summary": "Informational. Registers. Compensation once a day",
        "operationId": "information/register/compensation_per_day",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "version": {
                    "type": "integer",
                    "enum": [
                      3
                    ],
                    "default": 3,
                    "description": "Version API",
                    "example": 3,
                    "examples": [
                      3
                    ]
                  },
                  "public_key": {
                    "type": "string",
                    "description": "Public key - the store identifier. You can get the key in the [store settings](https://www.liqpay.ua/en/adminbusiness)"
                  },
                  "action": {
                    "type": "string",
                    "enum": [
                      "reports_compensation"
                    ],
                    "default": "reports_compensation",
                    "example": "reports_compensation",
                    "examples": [
                      "reports_compensation"
                    ]
                  },
                  "compensation_id": {
                    "type": "string",
                    "description": "compensation_id of enrollment",
                    "example": "200000007",
                    "examples": [
                      "200000007"
                    ]
                  },
                  "resp_format": {
                    "type": "string",
                    "enum": [
                      "json",
                      "csv",
                      "xml"
                    ],
                    "default": "json",
                    "description": "Report format",
                    "example": "json",
                    "examples": [
                      "json"
                    ]
                  },
                  "date": {
                    "type": "string",
                    "format": "date",
                    "description": "If parameter is unknown `compensation_id`, then date by which you need to get a list `compensation_id`"
                  }
                },
                "required": [
                  "version",
                  "public_key",
                  "action"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "result": {
                      "type": "string",
                      "enum": [
                        "ok",
                        "error",
                        "success"
                      ],
                      "description": "The result of a request",
                      "example": "ok",
                      "examples": [
                        "ok",
                        "success"
                      ]
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "oneOf": [
                          {
                            "type": "object",
                            "properties": {
                              "action": {
                                "type": "string",
                                "enum": [
                                  "pay",
                                  "hold",
                                  "paysplit",
                                  "subscribe",
                                  "paydonate",
                                  "auth",
                                  "regular"
                                ],
                                "description": "Transaction type. Possible values:\n* `pay` - payment\n* `hold` - amount of hold on sender's account\n* `paysplit` - splitting payments\n* `subscribe` - creation of a regular payment\n* `paydonate` - donation\n* `auth` - card preauth\n* `regular` - regular payment",
                                "example": "pay",
                                "examples": [
                                  "pay"
                                ]
                              },
                              "authcode_debit": {
                                "type": "string",
                                "description": "Authorization code for transaction of debit",
                                "example": "784593",
                                "examples": [
                                  "784593"
                                ]
                              },
                              "bonus_type": {
                                "type": "string",
                                "enum": [
                                  "bonusplus",
                                  "discount_club",
                                  "personal",
                                  "promo"
                                ],
                                "description": "Bonus type, "
                              },
                              "channel": {
                                "type": "string",
                                "enum": [
                                  "checkout",
                                  "checkoutjs",
                                  "api"
                                ],
                                "description": "Payment channel, ",
                                "example": "checkout",
                                "examples": [
                                  "checkout"
                                ]
                              },
                              "create_date": {
                                "type": "string",
                                "format": "date-time-liqpay",
                                "description": "Date of payment creation",
                                "example": "2017-01-31 07:51:37",
                                "examples": [
                                  "2017-01-31 07:51:37"
                                ]
                              },
                              "customer": {
                                "type": "string",
                                "maxLength": 100,
                                "description": "Unique customer ID in your shop"
                              },
                              "description": {
                                "type": "string",
                                "description": "Payment description",
                                "example": "My product",
                                "examples": [
                                  "My product"
                                ]
                              },
                              "end_date": {
                                "type": "string",
                                "format": "date-time-liqpay",
                                "description": "Date of payment edition/end",
                                "example": "2017-01-31 07:51:54",
                                "examples": [
                                  "2017-01-31 07:51:54"
                                ]
                              },
                              "id": {
                                "type": "number",
                                "description": "Payment id in LiqPay system",
                                "example": 107866,
                                "examples": [
                                  107866
                                ]
                              },
                              "ip": {
                                "type": "string",
                                "description": "Sender's IP address",
                                "example": "8.8.8.8",
                                "examples": [
                                  "8.8.8.8"
                                ]
                              },
                              "liqpay_order_id": {
                                "type": "string",
                                "description": "Payment order_id in LiqPay system",
                                "example": "J4L8IRG81485849105029639",
                                "examples": [
                                  "J4L8IRG81485849105029639"
                                ]
                              },
                              "order_id": {
                                "type": "string",
                                "description": "Order_id payment",
                                "example": "98R1U1OV1485849059893399",
                                "examples": [
                                  "98R1U1OV1485849059893399"
                                ]
                              },
                              "paytype": {
                                "type": "string",
                                "enum": [
                                  "card",
                                  "privat24",
                                  "masterpass",
                                  "moment_part",
                                  "cash",
                                  "invoice",
                                  "qr"
                                ],
                                "description": "Methods of payment. Possible values:\n* `card` - card payment\n* `privat24` - with privat24 account\n* `masterpass` - with masterpass account\n* `moment_part` - installments\n* `cash` - cash\n* `invoice` - to email\n* `qr` - qr code scanning",
                                "example": "liqpay",
                                "examples": [
                                  "liqpay"
                                ]
                              },
                              "sender_card": {
                                "type": "string",
                                "description": "Sender's card",
                                "example": "5168 **** **** **16",
                                "examples": [
                                  "5168 **** **** **16"
                                ]
                              },
                              "sender_card_bank": {
                                "type": "string",
                                "description": "Sender's card bank",
                                "example": "pb",
                                "examples": [
                                  "pb"
                                ]
                              },
                              "sender_card_country": {
                                "type": "string",
                                "description": "Sender's card country. Digital [ISO 3166-1 code](https://en.wikipedia.org/wiki/ISO_3166-1)",
                                "example": 804,
                                "examples": [
                                  804
                                ]
                              },
                              "sender_card_product_type": {
                                "type": "string",
                                "description": "Type of card product",
                                "example": "KDV",
                                "examples": [
                                  "KDV"
                                ]
                              },
                              "sender_card_type": {
                                "type": "string",
                                "description": "Sender's card type MC/Visa",
                                "example": "mc",
                                "examples": [
                                  "mc"
                                ]
                              },
                              "sender_email": {
                                "type": "string",
                                "description": "Email payer"
                              },
                              "sender_first_name": {
                                "type": "string",
                                "description": "The name of the sender",
                                "example": "test",
                                "examples": [
                                  "test"
                                ]
                              },
                              "sender_last_name": {
                                "type": "string",
                                "description": "Sender's last name",
                                "example": "test",
                                "examples": [
                                  "test"
                                ]
                              },
                              "sender_phone": {
                                "type": "string",
                                "description": "Sender's phone number",
                                "example": "380950000001",
                                "examples": [
                                  "380950000001"
                                ]
                              },
                              "trans_amount": {
                                "type": "number",
                                "description": "The amount of the transaction",
                                "example": 1.0,
                                "examples": [
                                  1.0
                                ]
                              },
                              "trans_bonus": {
                                "type": "number",
                                "description": "The amount of the bonus for the transaction",
                                "example": 0.0,
                                "examples": [
                                  0.0
                                ]
                              },
                              "trans_currency": {
                                "type": "string",
                                "description": "Transaction currency",
                                "example": "UAH",
                                "examples": [
                                  "UAH"
                                ]
                              },
                              "trans_fee_credit": {
                                "type": "number",
                                "description": "The amount of the loan transaction commission",
                                "example": 0.03,
                                "examples": [
                                  0.03
                                ]
                              },
                              "trans_fee_debit": {
                                "type": "number",
                                "description": "The amount of the debit transaction commission",
                                "example": 0.0,
                                "examples": [
                                  0.0
                                ]
                              },
                              "trans_total": {
                                "type": "number",
                                "description": "The amount of reimbursement of the company",
                                "example": 0.97,
                                "examples": [
                                  0.97
                                ]
                              },
                              "trans_type": {
                                "type": "string",
                                "enum": [
                                  "reverse",
                                  "hold_compl",
                                  "purchase",
                                  "refund"
                                ],
                                "description": "Transaction type",
                                "example": "purchase",
                                "examples": [
                                  "purchase"
                                ]
                              }
                            }
                          },
                          {
                            "type": "object",
                            "properties": {
                              "compensation_id": {
                                "type": "string",
                                "description": "compensation_id of enrollment",
                                "example": 91330,
                                "examples": [
                                  91330
                                ]
                              },
                              "create_date": {
                                "type": "string",
                                "format": "date-time-liqpay",
                                "example": "2016-11-15 00:02:14",
                                "examples": [
                                  "2016-11-15 00:02:14"
                                ]
                              }
                            }
                          }
                        ]
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/request?path=information.register.compensation_per_transaction": {
      "post": {
        "summary": "Informational. Registers. Compensation per transaction",
        "operationId": "information/register/compensation_per_transaction",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "version": {
                    "type": "integer",
                    "enum": [
                      3
                    ],
                    "default": 3,
                    "description": "Version API",
                    "example": 3,
                    "examples": [
                      3
                    ]
                  },
                  "public_key": {
                    "type": "string",
                    "description": "Public key - the store identifier. You can get the key in the [store settings](https://www.liqpay.ua/en/adminbusiness)"
                  },
                  "action": {
                    "type": "string",
                    "enum": [
                      "register"
                    ],
                    "default": "register",
                    "example": "register",
                    "examples": [
                      "register"
                    ]
                  },
                  "format": {
                    "type": "string",
                    "description": "Possible report format `json`, `csv`, `xml`",
                    "example": "json",
                    "examples": [
                      "json"
                    ]
                  },
                  "date": {
                    "type": "string",
                    "format": "date",
                    "description": "Date for which the registry will be uploaded",
                    "example": "2017-01-31",
                    "examples": [
                      "2017-01-31"
                    ]
                  }
                },
                "required": [
                  "version",
                  "public_key",
                  "action",
                  "format",
                  "date"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "result": {
                      "type": "string",
                      "enum": [
                        "ok",
                        "error",
                        "success"
                      ],
                      "description": "The result of a request",
                      "example": "ok",
                      "examples": [
                        "ok"
                      ]
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "action": {
                            "type": "string",
                            "enum": [
                              "pay",
                              "hold",
                              "paysplit",
                              "subscribe",
                              "paydonate",
                              "auth",
                              "regular"
                            ],
                            "description": "Transaction type. Possible values:\n* `pay` - payment\n* `hold` - amount of hold on sender's account\n* `paysplit` - splitting payments\n* `subscribe` - creation of a regular payment\n* `paydonate` - donation\n* `auth` - card preauth\n* `regular` - regular payment",
                            "example": "pay",
                            "examples": [
                              "pay"
                            ]
                          },
                          "authcode_debit": {
                            "type": "string",
                            "description": "Authorization code for transaction of debit",
                            "example": "784593",
                            "examples": [
                              "784593"
                            ]
                          },
                          "bonus_type": {
                            "type": "string",
                            "enum": [
                              "bonusplus",
                              "discount_club",
                              "personal",
                              "promo"
                            ],
                            "description": "Bonus type, "
                          },
                          "channel": {
                            "type": "string",
                            "enum": [
                              "checkout",
                              "checkoutjs",
                              "api"
                            ],
                            "description": "Payment channel, ",
                            "example": "checkout",
                            "examples": [
                              "checkout"
                            ]
                          },
                          "create_date": {
                            "type": "string",
                            "format": "date-time-liqpay",
                            "description": "Date of payment creation",
                            "example": "2017-01-31 07:51:37",
                            "examples": [
                              "2017-01-31 07:51:37"
                            ]
                          },
                          "customer": {
                            "type": "string",
                            "maxLength": 100,
                            "description": "Unique customer ID in your shop"
                          },
                          "description": {
                            "type": "string",
                            "description": "Payment description",
                            "example": "My product",
                            "examples": [
                              "My product"
                            ]
                          },
                          "end_date": {
                            "type": "string",
                            "format": "date-time-liqpay",
                            "description": "Date of payment edition/end",
                            "example": "2017-01-31 07:51:54",
                            "examples": [
                              "2017-01-31 07:51:54"
                            ]
                          },
                          "id": {
                            "type": "number",
                            "description": "Payment id in LiqPay system",
                            "example": 107866,
                            "examples": [
                              107866
                            ]
                          },
                          "ip": {
                            "type": "string",
                            "description": "Sender's IP address",
                            "example": "8.8.8.8",
                            "examples": [
                              "8.8.8.8"
                            ]
                          },
                          "liqpay_order_id": {
                            "type": "string",
                            "description": "Payment order_id in LiqPay system",
                            "example": "J4L8IRG81485849105029639",
                            "examples": [
                              "J4L8IRG81485849105029639"
                            ]
                          },
                          "order_id": {
                            "type": "string",
                            "description": "Order_id payment",
                            "example": "98R1U1OV1485849059893399",
                            "examples": [
                              "98R1U1OV1485849059893399"
                            ]
                          },
                          "paytype": {
                            "type": "string",
                            "enum": [
                              "card",
                              "privat24",
                              "masterpass",
                              "moment_part",
                              "cash",
                              "invoice",
                              "qr"
                            ],
                            "description": "Methods of payment. Possible values:\n* `card` - card payment\n* `privat24` - with privat24 account\n* `masterpass` - with masterpass account\n* `moment_part` - installments\n* `cash` - cash\n* `invoice` - to email\n* `qr` - qr code scanning",
                            "example": "liqpay",
                            "examples": [
                              "liqpay"
                            ]
                          },
                          "sender_card": {
                            "type": "string",
                            "description": "Sender's card",
                            "example": "5168 **** **** **16",
                            "examples": [
                              "5168 **** **** **16"
                            ]
                          },
                          "sender_card_bank": {
                            "type": "string",
                            "description": "Sender's card bank",
                            "example": "pb",
                            "examples": [
                              "pb"
                            ]
                          },
                          "sender_card_country": {
                            "type": "string",
                            "description": "Sender's card country. Digital [ISO 3166-1 code](https://en.wikipedia.org/wiki/ISO_3166-1)",
                            "example": 804,
                            "examples": [
                              804
                            ]
                          },
                          "sender_card_product_type": {
                            "type": "string",
                            "description": "Type of card product",
                            "example": "KDV",
                            "examples": [
                              "KDV"
                            ]
                          },
                          "sender_card_type": {
                            "type": "string",
                            "description": "Sender's card type MC/Visa",
                            "example": "mc",
                            "examples": [
                              "mc"
                            ]
                          },
                          "sender_email": {
                            "type": "string",
                            "description": "Email payer"
                          },
                          "sender_first_name": {
                            "type": "string",
                            "description": "The name of the sender",
                            "example": "test",
                            "examples": [
                              "test"
                            ]
                          },
                          "sender_last_name": {
                            "type": "string",
                            "description": "Sender's last name",
                            "example": "test",
                            "examples": [
                              "test"
                            ]
                          },
                          "sender_phone": {
                            "type": "string",
                            "description": "Sender's phone number",
                            "example": "380950000001",
                            "examples": [
                              "380950000001"
                            ]
                          },
                          "trans_amount": {
                            "type": "number",
                            "description": "The amount of the transaction",
                            "example": 1.0,
                            "examples": [
                              1.0
                            ]
                          },
                          "trans_bonus": {
                            "type": "number",
                            "description": "The amount of the bonus for the transaction",
                            "example": 0.0,
                            "examples": [
                              0.0
                            ]
                          },
                          "trans_currency": {
                            "type": "string",
                            "description": "Transaction currency",
                            "example": "UAH",
                            "examples": [
                              "UAH"
                            ]
                          },
                          "trans_fee_credit": {
                            "type": "number",
                            "description": "The amount of the loan transaction commission",
                            "example": 0.03,
                            "examples": [
                              0.03
                            ]
                          },
                          "trans_fee_debit": {
                            "type": "number",
                            "description": "The amount of the debit transaction commission",
                            "example": 0.0,
                            "examples": [
                              0.0
                            ]
                          },
                          "trans_total": {
                            "type": "number",
                            "description": "The amount of reimbursement of the company",
                            "example": 0.97,
                            "examples": [
                              0.97
                            ]
                          },
                          "trans_type": {
                            "type": "string",
                            "enum": [
                              "reverse",
                              "hold_compl",
                              "purchase",
                              "refund"
                            ],
                            "description": "Transaction type",
                            "example": "purchase",
                            "examples": [
                              "purchase"
                            ]
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/request?path=information.register.compensation_report": {
      "post": {
        "summary": "Informational. Registers. Getting the compensation registry",
        "operationId": "information/register/compensation_report",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "version": {
                    "type": "integer",
                    "enum": [
                      3
                    ],
                    "default": 3,
                    "description": "Version API",
                    "example": 3,
                    "examples": [
                      3
                    ]
                  },
                  "public_key": {
                    "type": "string",
                    "description": "Public key - the store identifier. You can get the key in the [store settings](https://www.liqpay.ua/en/adminbusiness)",
                    "example": "i123456789",
                    "examples": [
                      "i123456789"
                    ]
                  },
                  "action": {
                    "type": "string",
                    "enum": [
                      "reports_compensation_file"
                    ],
                    "default": "reports_compensation_file",
                    "example": "reports_compensation_file",
                    "examples": [
                      "reports_compensation_file"
                    ]
                  },
                  "compensation_id": {
                    "type": "string",
                    "description": "compensation_id of funds crediting posting"
                  },
                  "resp_format": {
                    "type": "string",
                    "enum": [
                      "csv"
                    ],
                    "default": "csv",
                    "example": "csv",
                    "examples": [
                      "csv"
                    ]
                  },
                  "date": {
                    "type": "string",
                    "format": "date",
                    "description": "If the `compensation_id` parameter is unknown, the payment date for which you want to receive the registry is being passed",
                    "example": "2021-11-23",
                    "examples": [
                      "2021-11-23"
                    ]
                  }
                },
                "required": [
                  "version",
                  "public_key",
                  "action"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "register_token": {
                      "type": "string",
                      "description": "Parameter received on the previous request",
                      "example": "compensation_i123456789_2021.11.23.csv",
                      "examples": [
                        "compensation_i123456789_2021.11.23.csv"
                      ]
                    },
                    "result": {
                      "type": "string",
                      "description": "The result of the request",
                      "example": "ok",
                      "examples": [
                        "ok"
                      ]
                    },
                    "status": {
                      "type": "string",
                      "description": "Request processing status",
                      "example": "processing",
                      "examples": [
                        "processing"
                      ]
                    }
                  },
                  "required": [
                    "register_token",
                    "result",
                    "status"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/api/request?path=information.register.compensation_report_status": {
      "post": {
        "summary": "Informational. Registers. Getting the compensation registry status",
        "operationId": "information/register/compensation_report_status",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "version": {
                    "type": "integer",
                    "enum": [
                      3
                    ],
                    "default": 3,
                    "description": "Version API",
                    "example": 3,
                    "examples": [
                      3
                    ]
                  },
                  "public_key": {
                    "type": "string",
                    "description": "Public key - the store identifier. You can get the key in the [store settings](https://www.liqpay.ua/en/adminbusiness)",
                    "example": "i123456789",
                    "examples": [
                      "i123456789"
                    ]
                  },
                  "action": {
                    "type": "string",
                    "enum": [
                      "reports_compensation_file_status"
                    ],
                    "default": "reports_compensation_file_status",
                    "example": "reports_compensation_file_status",
                    "examples": [
                      "reports_compensation_file_status"
                    ]
                  },
                  "register_token": {
                    "type": "string",
                    "description": "Parameter received on the previous request",
                    "example": "compensation_i123456789_2021.11.23.csv",
                    "examples": [
                      "compensation_i123456789_2021.11.23.csv"
                    ]
                  }
                },
                "required": [
                  "version",
                  "public_key",
                  "action",
                  "register_token"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "filelink": {
                      "type": "string",
                      "format": "uri",
                      "description": "File URL",
                      "example": "https://liqpay-merchant-reports-eu-west-1-production-1.s3-eu-west-1.amazonaws.com/reports/compensation_i63896222463_2021.11.23.csv?AWSAccessKeyId=ASIA4G3XTFOZJ5WF5PWB&Signature=P8RLb6u6%2BRKJkLRk6HjhQlZQ2T4%3D&Expires=1639738263&x-amz-security-token=IQoJb3JpZ2luX2VjELn%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEaCWV1LXdlc3QtMSJIMEYCIQC%2BOZ8y2wDz%2B2a9C8952BazFTCpQpT9OX5cUNF1CcBwzQIhAIPuroQCLJMT9g3PbN%2B4Dk8KXg%2BJb2eZIbYIFYm7A4qdKvADCKL%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEQAhoMODM5MzgwMDUyOTE0IgyXUwg7va32HEQ8W5MqxAOghwqrPEpTnH6dLG9toIM8HGhlggL5bFAVI0%2FEE7N1jZRrlyL3455spFAZcAYcROwLnJXzW%2FndQR0QGKKasO6pMW%2B9u8n%2BRUrN6p5kHV4lU9%2BjVb5x2RsMaSjm9Klio8KnB8o5H7CnsTpGEjeAc3ZmeKS10nSSUh4%2FheANMdQVXMCOoba4oqPOxWAIS1dY7tLNrVEgaqhzXhsbK8j0FwwJESYa%2Fq6cN%2FxcnSVq60wUQhRlqaxQr%2FijbXKnprz9Bs0jgvTYF65yPiIKXQ%2B4bYyxR8geOb5c%2BlfFVMFC%2FRyMT1q7r6K7yVuNXxSN3Y%2BeNOR%2FbvDCL9%2Fu3TqNCBHVR3HWPY9P%2BdnF0wjvDS4sDvDEx7V%2Fx%2F%2B52e4flwqgPhAbJrjDqR0dWVuJgwpPfJFjpMVqQ80QPcEEABYY6YycQgNjoSKqdHjLyghykagoV8DAMiNpJciyCb8DMMAv7Cn5%2FCteeYoZevftP%2FIzyZMR9AErQdCTaAL6Db4PAu%2BInbca1sNkWW1HB0DrdonovpFffSXYBHgZMAmij2pD8RmYHvVu9PoPyBR2fRUbZdtoXdaI0Sp7lFlF1hJ1bkgMvjQRPMU0XURvjzCXkvGNBjqkAbiCqn%2F%2BCI%2B9sPSVdCvg7W3oOVsGViKrQmI2SA%2F%2FrJH%2B243LI9iJ7fM4nv5iDTqkpSuy4lYRpX737ZszaJR%2BtRZ1C%2BmGu%2FQjRl0P9mlpCq5qTheOOM9CDvqxu64MiPpgHab4PCATr3i4u8wrTkHhclID4Qx9SU6TyxH0d2OsyngMxjKe3K9wWqkUtQh8FYDKAiPyp3eY99ZGd322XLDdG35CNFCf",
                      "examples": [
                        "https://liqpay-merchant-reports-eu-west-1-production-1.s3-eu-west-1.amazonaws.com/reports/compensation_i63896222463_2021.11.23.csv?AWSAccessKeyId=ASIA4G3XTFOZJ5WF5PWB&Signature=P8RLb6u6%2BRKJkLRk6HjhQlZQ2T4%3D&Expires=1639738263&x-amz-security-token=IQoJb3JpZ2luX2VjELn%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEaCWV1LXdlc3QtMSJIMEYCIQC%2BOZ8y2wDz%2B2a9C8952BazFTCpQpT9OX5cUNF1CcBwzQIhAIPuroQCLJMT9g3PbN%2B4Dk8KXg%2BJb2eZIbYIFYm7A4qdKvADCKL%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEQAhoMODM5MzgwMDUyOTE0IgyXUwg7va32HEQ8W5MqxAOghwqrPEpTnH6dLG9toIM8HGhlggL5bFAVI0%2FEE7N1jZRrlyL3455spFAZcAYcROwLnJXzW%2FndQR0QGKKasO6pMW%2B9u8n%2BRUrN6p5kHV4lU9%2BjVb5x2RsMaSjm9Klio8KnB8o5H7CnsTpGEjeAc3ZmeKS10nSSUh4%2FheANMdQVXMCOoba4oqPOxWAIS1dY7tLNrVEgaqhzXhsbK8j0FwwJESYa%2Fq6cN%2FxcnSVq60wUQhRlqaxQr%2FijbXKnprz9Bs0jgvTYF65yPiIKXQ%2B4bYyxR8geOb5c%2BlfFVMFC%2FRyMT1q7r6K7yVuNXxSN3Y%2BeNOR%2FbvDCL9%2Fu3TqNCBHVR3HWPY9P%2BdnF0wjvDS4sDvDEx7V%2Fx%2F%2B52e4flwqgPhAbJrjDqR0dWVuJgwpPfJFjpMVqQ80QPcEEABYY6YycQgNjoSKqdHjLyghykagoV8DAMiNpJciyCb8DMMAv7Cn5%2FCteeYoZevftP%2FIzyZMR9AErQdCTaAL6Db4PAu%2BInbca1sNkWW1HB0DrdonovpFffSXYBHgZMAmij2pD8RmYHvVu9PoPyBR2fRUbZdtoXdaI0Sp7lFlF1hJ1bkgMvjQRPMU0XURvjzCXkvGNBjqkAbiCqn%2F%2BCI%2B9sPSVdCvg7W3oOVsGViKrQmI2SA%2F%2FrJH%2B243LI9iJ7fM4nv5iDTqkpSuy4lYRpX737ZszaJR%2BtRZ1C%2BmGu%2FQjRl0P9mlpCq5qTheOOM9CDvqxu64MiPpgHab4PCATr3i4u8wrTkHhclID4Qx9SU6TyxH0d2OsyngMxjKe3K9wWqkUtQh8FYDKAiPyp3eY99ZGd322XLDdG35CNFCf"
                      ]
                    },
                    "result": {
                      "type": "string",
                      "enum": [
                        "ok",
                        "error"
                      ],
                      "description": "The result of a request",
                      "example": "ok",
                      "examples": [
                        "ok"
                      ]
                    },
                    "status": {
                      "type": "string",
                      "enum": [
                        "processing",
                        "error",
                        "success"
                      ],
                      "description": "The status of a request. Possible values:\n* `processing` - on processing, the file is being formed\n* `error` - an error occurred during download, we recommend checking the request data and repeat (in case of repeated error, contact LiqPay support)\n* `success` - successful request",
                      "example": "success",
                      "examples": [
                        "success"
                      ]
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/request?path=information.register.compensation_report_p2p": {
      "post": {
        "summary": "Informational. Registers. Registry by p2p operation",
        "operationId": "information/register/compensation_report_p2p",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "version": {
                    "type": "integer",
                    "enum": [
                      3
                    ],
                    "default": 3,
                    "description": "Version API",
                    "example": 3,
                    "examples": [
                      3
                    ]
                  },
                  "public_key": {
                    "type": "string",
                    "description": "Public key - the store identifier. You can get the key in the [store settings](https://www.liqpay.ua/en/adminbusiness)",
                    "example": "i123456789",
                    "examples": [
                      "i123456789"
                    ]
                  },
                  "action": {
                    "type": "string",
                    "enum": [
                      "reports_compensation_file"
                    ],
                    "default": "reports_compensation_file",
                    "example": "reports_compensation_file",
                    "examples": [
                      "reports_compensation_file"
                    ]
                  },
                  "resp_format": {
                    "type": "string",
                    "enum": [
                      "csv"
                    ],
                    "default": "csv",
                    "description": "Report format",
                    "example": "csv",
                    "examples": [
                      "csv"
                    ]
                  },
                  "date": {
                    "type": "string",
                    "format": "date",
                    "description": "Date for which the registry will be uploaded",
                    "example": "2021-11-23",
                    "examples": [
                      "2021-11-23"
                    ]
                  },
                  "type": {
                    "type": "string",
                    "enum": [
                      "p2p",
                      "p2pcredit"
                    ],
                    "description": "Type of operation. Possible values:\n* `p2p` - for operations of type p2pdebit\n* `p2pcredit` - for operations of type p2pcredit (default \"acquiring\")",
                    "example": "p2p",
                    "examples": [
                      "p2p"
                    ]
                  }
                },
                "required": [
                  "version",
                  "public_key",
                  "action"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "register_token": {
                      "type": "string",
                      "description": "Parameter received on the previous request",
                      "example": "register_i11301247803_105267.csv",
                      "examples": [
                        "register_i11301247803_105267.csv"
                      ]
                    },
                    "result": {
                      "type": "string",
                      "enum": [
                        "ok",
                        "error"
                      ],
                      "description": "The result of the request",
                      "example": "ok",
                      "examples": [
                        "ok"
                      ]
                    },
                    "status": {
                      "type": "string",
                      "description": "Request processing status",
                      "example": "processing",
                      "examples": [
                        "processing"
                      ]
                    }
                  },
                  "required": [
                    "register_token",
                    "result",
                    "status"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/api/request?path=information.register.compensation_report_p2p_status": {
      "post": {
        "summary": "Informational. Registers. p2p operation registry status",
        "operationId": "information/register/compensation_report_p2p_status",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "version": {
                    "type": "integer",
                    "enum": [
                      3
                    ],
                    "default": 3,
                    "description": "Version API",
                    "example": 3,
                    "examples": [
                      3
                    ]
                  },
                  "public_key": {
                    "type": "string",
                    "description": "Public key - the store identifier. You can get the key in the [store settings](https://www.liqpay.ua/en/adminbusiness)",
                    "example": "i123456789",
                    "examples": [
                      "i123456789"
                    ]
                  },
                  "action": {
                    "type": "string",
                    "enum": [
                      "reports_compensation_file_status"
                    ],
                    "default": "reports_compensation_file_status",
                    "example": "reports_compensation_file_status",
                    "examples": [
                      "reports_compensation_file_status"
                    ]
                  },
                  "register_token": {
                    "type": "string",
                    "description": "Parameter received on the previous request",
                    "example": "compensation_i123456789_2021.11.23.csv",
                    "examples": [
                      "compensation_i123456789_2021.11.23.csv"
                    ]
                  }
                },
                "required": [
                  "version",
                  "public_key",
                  "action",
                  "register_token"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "filelink": {
                      "type": "string",
                      "format": "uri",
                      "description": "File URL",
                      "example": "https://liqpay-merchant-reports-eu-west-1-production-1.s3-eu-west-1.amazonaws.com/reports/compensation_i63896222463_2021.11.23.csv?AWSAccessKeyId=ASIA4G3XTFOZJ5WF5PWB&Signature=P8RLb6u6%2BRKJkLRk6HjhQlZQ2T4%3D&Expires=1639738263&x-amz-security-token=IQoJb3JpZ2luX2VjELn%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEaCWV1LXdlc3QtMSJIMEYCIQC%2BOZ8y2wDz%2B2a9C8952BazFTCpQpT9OX5cUNF1CcBwzQIhAIPuroQCLJMT9g3PbN%2B4Dk8KXg%2BJb2eZIbYIFYm7A4qdKvADCKL%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEQAhoMODM5MzgwMDUyOTE0IgyXUwg7va32HEQ8W5MqxAOghwqrPEpTnH6dLG9toIM8HGhlggL5bFAVI0%2FEE7N1jZRrlyL3455spFAZcAYcROwLnJXzW%2FndQR0QGKKasO6pMW%2B9u8n%2BRUrN6p5kHV4lU9%2BjVb5x2RsMaSjm9Klio8KnB8o5H7CnsTpGEjeAc3ZmeKS10nSSUh4%2FheANMdQVXMCOoba4oqPOxWAIS1dY7tLNrVEgaqhzXhsbK8j0FwwJESYa%2Fq6cN%2FxcnSVq60wUQhRlqaxQr%2FijbXKnprz9Bs0jgvTYF65yPiIKXQ%2B4bYyxR8geOb5c%2BlfFVMFC%2FRyMT1q7r6K7yVuNXxSN3Y%2BeNOR%2FbvDCL9%2Fu3TqNCBHVR3HWPY9P%2BdnF0wjvDS4sDvDEx7V%2Fx%2F%2B52e4flwqgPhAbJrjDqR0dWVuJgwpPfJFjpMVqQ80QPcEEABYY6YycQgNjoSKqdHjLyghykagoV8DAMiNpJciyCb8DMMAv7Cn5%2FCteeYoZevftP%2FIzyZMR9AErQdCTaAL6Db4PAu%2BInbca1sNkWW1HB0DrdonovpFffSXYBHgZMAmij2pD8RmYHvVu9PoPyBR2fRUbZdtoXdaI0Sp7lFlF1hJ1bkgMvjQRPMU0XURvjzCXkvGNBjqkAbiCqn%2F%2BCI%2B9sPSVdCvg7W3oOVsGViKrQmI2SA%2F%2FrJH%2B243LI9iJ7fM4nv5iDTqkpSuy4lYRpX737ZszaJR%2BtRZ1C%2BmGu%2FQjRl0P9mlpCq5qTheOOM9CDvqxu64MiPpgHab4PCATr3i4u8wrTkHhclID4Qx9SU6TyxH0d2OsyngMxjKe3K9wWqkUtQh8FYDKAiPyp3eY99ZGd322XLDdG35CNFCf",
                      "examples": [
                        "https://liqpay-merchant-reports-eu-west-1-production-1.s3-eu-west-1.amazonaws.com/reports/compensation_i63896222463_2021.11.23.csv?AWSAccessKeyId=ASIA4G3XTFOZJ5WF5PWB&Signature=P8RLb6u6%2BRKJkLRk6HjhQlZQ2T4%3D&Expires=1639738263&x-amz-security-token=IQoJb3JpZ2luX2VjELn%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEaCWV1LXdlc3QtMSJIMEYCIQC%2BOZ8y2wDz%2B2a9C8952BazFTCpQpT9OX5cUNF1CcBwzQIhAIPuroQCLJMT9g3PbN%2B4Dk8KXg%2BJb2eZIbYIFYm7A4qdKvADCKL%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEQAhoMODM5MzgwMDUyOTE0IgyXUwg7va32HEQ8W5MqxAOghwqrPEpTnH6dLG9toIM8HGhlggL5bFAVI0%2FEE7N1jZRrlyL3455spFAZcAYcROwLnJXzW%2FndQR0QGKKasO6pMW%2B9u8n%2BRUrN6p5kHV4lU9%2BjVb5x2RsMaSjm9Klio8KnB8o5H7CnsTpGEjeAc3ZmeKS10nSSUh4%2FheANMdQVXMCOoba4oqPOxWAIS1dY7tLNrVEgaqhzXhsbK8j0FwwJESYa%2Fq6cN%2FxcnSVq60wUQhRlqaxQr%2FijbXKnprz9Bs0jgvTYF65yPiIKXQ%2B4bYyxR8geOb5c%2BlfFVMFC%2FRyMT1q7r6K7yVuNXxSN3Y%2BeNOR%2FbvDCL9%2Fu3TqNCBHVR3HWPY9P%2BdnF0wjvDS4sDvDEx7V%2Fx%2F%2B52e4flwqgPhAbJrjDqR0dWVuJgwpPfJFjpMVqQ80QPcEEABYY6YycQgNjoSKqdHjLyghykagoV8DAMiNpJciyCb8DMMAv7Cn5%2FCteeYoZevftP%2FIzyZMR9AErQdCTaAL6Db4PAu%2BInbca1sNkWW1HB0DrdonovpFffSXYBHgZMAmij2pD8RmYHvVu9PoPyBR2fRUbZdtoXdaI0Sp7lFlF1hJ1bkgMvjQRPMU0XURvjzCXkvGNBjqkAbiCqn%2F%2BCI%2B9sPSVdCvg7W3oOVsGViKrQmI2SA%2F%2FrJH%2B243LI9iJ7fM4nv5iDTqkpSuy4lYRpX737ZszaJR%2BtRZ1C%2BmGu%2FQjRl0P9mlpCq5qTheOOM9CDvqxu64MiPpgHab4PCATr3i4u8wrTkHhclID4Qx9SU6TyxH0d2OsyngMxjKe3K9wWqkUtQh8FYDKAiPyp3eY99ZGd322XLDdG35CNFCf"
                      ]
                    },
                    "result": {
                      "type": "string",
                      "enum": [
                        "ok",
                        "error"
                      ],
                      "description": "The result of a request",
                      "example": "ok",
                      "examples": [
                        "ok"
                      ]
                    },
                    "status": {
                      "type": "string",
                      "enum": [
                        "processing",
                        "error",
                        "success"
                      ],
                      "description": "The status of a request. Possible values:\n* `processing` - on processing, the file is being formed\n* `error` - an error occurred during download, we recommend checking the request data and repeat (in case of repeated error, contact LiqPay support)\n* `success` - successful request",
                      "example": "success",
                      "examples": [
                        "success"
                      ]
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/request?path=information.adding_data": {
      "post": {
        "summary": "Informational. Adding data",
        "operationId": "information/adding_data",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "version": {
                    "type": "integer",
                    "enum": [
                      3
                    ],
                    "default": 3,
                    "description": "Version API",
                    "example": 3,
                    "examples": [
                      3
                    ]
                  },
                  "public_key": {
                    "type": "string",
                    "description": "Public key - the store identifier. You can get the key in the [store settings](https://www.liqpay.ua/en/adminbusiness)"
                  },
                  "action": {
                    "type": "string",
                    "enum": [
                      "data"
                    ],
                    "default": "data",
                    "example": "data",
                    "examples": [
                      "data"
                    ]
                  },
                  "order_id": {
                    "type": "string",
                    "maxLength": 255,
                    "description": "Unique purchase ID in your shop",
                    "example": "order_id_1",
                    "examples": [
                      "order_id_1"
                    ]
                  },
                  "info": {
                    "type": "string",
                    "description": "Information to add details to payment",
                    "example": "External information for payments",
                    "examples": [
                      "External information for payments",
                      "My information"
                    ]
                  }
                },
                "required": [
                  "version",
                  "public_key",
                  "action",
                  "order_id"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "acq_id": {
                      "type": "number",
                      "description": "Acquirer ID",
                      "example": 414963,
                      "examples": [
                        414963
                      ]
                    },
                    "action": {
                      "type": "string",
                      "enum": [
                        "pay",
                        "hold",
                        "paysplit",
                        "subscribe",
                        "paydonate",
                        "auth",
                        "regular"
                      ],
                      "description": "Transaction type. Possible values:\n* `pay` - payment\n* `hold` - amount of hold on sender's account\n* `paysplit` - splitting payments\n* `subscribe` - creation of a regular payment\n* `paydonate` - donation\n* `auth` - card preauth\n* `regular` - regular payment",
                      "example": "pay",
                      "examples": [
                        "pay"
                      ]
                    },
                    "agent_commission": {
                      "type": "number",
                      "description": "Agent comission in payment currency",
                      "example": 0.0,
                      "examples": [
                        0.0
                      ]
                    },
                    "amount": {
                      "type": "number",
                      "description": "Payment amount",
                      "example": 0.02,
                      "examples": [
                        0.02
                      ]
                    },
                    "amount_bonus": {
                      "type": "number",
                      "description": "Payer bonus amount in payment currency debit",
                      "example": 0.0,
                      "examples": [
                        0.0
                      ]
                    },
                    "amount_credit": {
                      "type": "number",
                      "description": "Payment amount for credit in currency of `currency_credit`",
                      "example": 0.02,
                      "examples": [
                        0.02
                      ]
                    },
                    "amount_debit": {
                      "type": "number",
                      "description": "Payment amount for debit in currency of `currency_debit`",
                      "example": 0.02,
                      "examples": [
                        0.02
                      ]
                    },
                    "authcode_credit": {
                      "type": "string",
                      "description": "Authorization code for transaction of credit",
                      "example": "703006",
                      "examples": [
                        "703006"
                      ]
                    },
                    "authcode_debit": {
                      "type": "string",
                      "description": "Authorization code for transaction of debit",
                      "example": "108527",
                      "examples": [
                        "108527"
                      ]
                    },
                    "bonus_procent": {
                      "type": "number",
                      "description": "Discount rate in percent",
                      "example": 7.0,
                      "examples": [
                        7.0
                      ]
                    },
                    "bonus_type": {
                      "type": "string",
                      "enum": [
                        "bonusplus",
                        "discount_club",
                        "personal",
                        "promo"
                      ],
                      "description": "Bonus type, ",
                      "example": "bonusplus",
                      "examples": [
                        "bonusplus"
                      ]
                    },
                    "card_token": {
                      "type": "string",
                      "description": "Sender's card token",
                      "example": "2DFBFE626B7341611450DE81E971E948D6F260",
                      "examples": [
                        "2DFBFE626B7341611450DE81E971E948D6F260"
                      ]
                    },
                    "commission_credit": {
                      "type": "number",
                      "description": "Commission from the receiver in `currency_credit`",
                      "example": 0.0,
                      "examples": [
                        0.0
                      ]
                    },
                    "commission_debit": {
                      "type": "number",
                      "description": "Commission from the sender in `currency_debit`",
                      "example": 0.0,
                      "examples": [
                        0.0
                      ]
                    },
                    "create_date": {
                      "type": "integer",
                      "format": "timestamp-ms",
                      "description": "Date of payment creation",
                      "example": 1501757716373,
                      "examples": [
                        1501757716373
                      ]
                    },
                    "currency": {
                      "type": "string",
                      "description": "Payment currency",
                      "example": "UAH",
                      "examples": [
                        "UAH"
                      ]
                    },
                    "currency_credit": {
                      "type": "string",
                      "description": "Transaction currency of credit",
                      "example": "UAH",
                      "examples": [
                        "UAH"
                      ]
                    },
                    "currency_debit": {
                      "type": "string",
                      "description": "Transaction currency of debit",
                      "example": "UAH",
                      "examples": [
                        "UAH"
                      ]
                    },
                    "description": {
                      "type": "string",
                      "description": "Payment description",
                      "example": "test",
                      "examples": [
                        "test"
                      ]
                    },
                    "end_date": {
                      "type": "integer",
                      "format": "timestamp-ms",
                      "description": "Date of payment edition/end",
                      "example": 1501757729972,
                      "examples": [
                        1501757729972
                      ]
                    },
                    "info": {
                      "type": "string",
                      "description": "Additional payment information",
                      "example": "My information",
                      "examples": [
                        "My information"
                      ]
                    },
                    "ip": {
                      "type": "string",
                      "description": "Sender's IP address",
                      "example": "8.8.8.8",
                      "examples": [
                        "8.8.8.8"
                      ]
                    },
                    "is_3ds": {
                      "type": "boolean",
                      "description": "Possible values:\n* `true` - transaction passed with 3DS\n* `false` - transaction passed without 3DS"
                    },
                    "liqpay_order_id": {
                      "type": "string",
                      "description": "Payment order_id in LiqPay system",
                      "example": "NYMK3AE61501685438251925",
                      "examples": [
                        "NYMK3AE61501685438251925"
                      ]
                    },
                    "moment_part": {
                      "type": "boolean",
                      "description": "Payment indication in parts"
                    },
                    "mpi_eci": {
                      "type": "integer",
                      "enum": [
                        5,
                        6,
                        7
                      ],
                      "description": "Possible values:\n* `5` - the transaction passed with 3DS (issuer and acquirer support 3d Secure technology)\n* `6` - the issuer of the payer card does not support 3d Secure technology\n* `7` - the operation passed without 3d Secure",
                      "example": 7,
                      "examples": [
                        7
                      ]
                    },
                    "order_id": {
                      "type": "string",
                      "description": "Order_id payment",
                      "example": "98R1U1OV1485849059893399",
                      "examples": [
                        "98R1U1OV1485849059893399"
                      ]
                    },
                    "payment_id": {
                      "type": "number",
                      "description": "Payment id in LiqPay system",
                      "example": 165629,
                      "examples": [
                        165629
                      ]
                    },
                    "paytype": {
                      "type": "string",
                      "enum": [
                        "card",
                        "privat24",
                        "moment_part",
                        "cash",
                        "invoice",
                        "qr"
                      ],
                      "description": "Methods of payment. Possible values:\n* `card` - card payment\n* `privat24` - with privat24 account\n* `moment_part` - installments\n* `cash` - cash\n* `invoice` - to email\n* `qr` - qr code scanning",
                      "example": "card",
                      "examples": [
                        "card"
                      ]
                    },
                    "public_key": {
                      "type": "string",
                      "description": "Shop public key",
                      "example": "i000000000",
                      "examples": [
                        "i000000000"
                      ]
                    },
                    "receiver_commission": {
                      "type": "number",
                      "description": "Receiver comission in payment currency",
                      "example": 0.0,
                      "examples": [
                        0.0
                      ]
                    },
                    "rrn_credit": {
                      "type": "string",
                      "description": "Unique transaction ID in authorization and settlement system of issuer bank `Retrieval Reference number`",
                      "example": "000664267607",
                      "examples": [
                        "000664267607"
                      ]
                    },
                    "rrn_debit": {
                      "type": "string",
                      "description": "Unique transaction ID in authorization and settlement system of issuer bank `Retrieval Reference number`",
                      "example": "000664267598",
                      "examples": [
                        "000664267598"
                      ]
                    },
                    "sender_bonus": {
                      "type": "number",
                      "description": "Sender's bonus in the payment currency",
                      "example": 0.0,
                      "examples": [
                        0.0
                      ]
                    },
                    "sender_card_bank": {
                      "type": "string",
                      "description": "Sender's card bank",
                      "example": "pb",
                      "examples": [
                        "pb"
                      ]
                    },
                    "sender_card_country": {
                      "type": "string",
                      "description": "Sender's card country. Digital [ISO 3166-1 code](https://en.wikipedia.org/wiki/ISO_3166-1)",
                      "example": 804,
                      "examples": [
                        804
                      ]
                    },
                    "sender_card_mask2": {
                      "type": "string",
                      "description": "Sender's card",
                      "example": "473118*97",
                      "examples": [
                        "473118*97"
                      ]
                    },
                    "sender_card_type": {
                      "type": "string",
                      "description": "Sender's card type MC/Visa",
                      "example": "visa",
                      "examples": [
                        "visa"
                      ]
                    },
                    "sender_commission": {
                      "type": "number",
                      "description": "Commission from the sender in the payment currency",
                      "example": 0.0,
                      "examples": [
                        0.0
                      ]
                    },
                    "sender_phone": {
                      "type": "string",
                      "description": "Sender's phone number",
                      "example": "380950000001",
                      "examples": [
                        "380950000001"
                      ]
                    },
                    "status": {
                      "type": "string",
                      "enum": [
                        "error",
                        "failure",
                        "success"
                      ],
                      "description": "Payment status.\nAvailable values:\nFinal payment statuses\n* `error` - Failed payment. Data is incorrect\n* `failure` - Failed payment\n* `success` - Successful payment",
                      "example": "success",
                      "examples": [
                        "success"
                      ]
                    },
                    "transaction_id": {
                      "type": "number",
                      "description": "Id transactions in the LiqPay system",
                      "example": 165629,
                      "examples": [
                        165629
                      ]
                    },
                    "type": {
                      "type": "string",
                      "description": "Payment type",
                      "example": "buy",
                      "examples": [
                        "buy"
                      ]
                    },
                    "version": {
                      "type": "integer",
                      "enum": [
                        3
                      ],
                      "default": 3,
                      "description": "Version API",
                      "example": 3,
                      "examples": [
                        3
                      ]
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/request?path=information.receive_a_receipt": {
      "post": {
        "summary": "Informational. Receive a receipt",
        "operationId": "information/receive_a_receipt",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "version": {
                    "type": "integer",
                    "enum": [
                      3
                    ],
                    "default": 3,
                    "description": "Version API",
                    "example": 3,
                    "examples": [
                      3
                    ]
                  },
                  "public_key": {
                    "type": "string",
                    "description": "Public key - the store identifier. You can get the key in the [store settings](https://www.liqpay.ua/en/adminbusiness)"
                  },
                  "action": {
                    "type": "string",
                    "enum": [
                      "ticket"
                    ],
                    "default": "ticket",
                    "example": "ticket",
                    "examples": [
                      "ticket"
                    ]
                  },
                  "email": {
                    "type": "string",
                    "description": "Email for reciept sending",
                    "example": "email@gmail.com",
                    "examples": [
                      "email@gmail.com"
                    ]
                  },
                  "order_id": {
                    "type": "string",
                    "description": "order_id of successful payment",
                    "example": "order_id_1",
                    "examples": [
                      "order_id_1"
                    ]
                  },
                  "payment_id": {
                    "type": "number",
                    "description": "Payment id in LiqPay system"
                  },
                  "language": {
                    "type": "string",
                    "enum": [
                      "uk",
                      "en"
                    ],
                    "default": "uk",
                    "description": "Customer's language"
                  }
                },
                "required": [
                  "version",
                  "public_key",
                  "action",
                  "email",
                  "order_id"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "result": {
                      "type": "string",
                      "enum": [
                        "ok",
                        "error"
                      ],
                      "description": "The result of a request",
                      "example": "ok",
                      "examples": [
                        "ok"
                      ]
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/request?path=information.status_payment": {
      "post": {
        "summary": "Informational. Payment status",
        "operationId": "information/status_payment",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "version": {
                    "type": "integer",
                    "enum": [
                      3
                    ],
                    "default": 3,
                    "description": "Version API",
                    "example": 3,
                    "examples": [
                      3
                    ]
                  },
                  "public_key": {
                    "type": "string",
                    "description": "Public key - the store identifier. You can get the key in the [store settings](https://www.liqpay.ua/en/adminbusiness)"
                  },
                  "action": {
                    "type": "string",
                    "enum": [
                      "status"
                    ],
                    "default": "status",
                    "example": "status",
                    "examples": [
                      "status"
                    ]
                  },
                  "order_id": {
                    "type": "string",
                    "maxLength": 255,
                    "description": "Unique purchase ID in your shop",
                    "example": "order_id_1",
                    "examples": [
                      "order_id_1"
                    ]
                  }
                },
                "required": [
                  "version",
                  "public_key",
                  "action",
                  "order_id"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "acq_id": {
                      "type": "number",
                      "description": "Acquirer ID",
                      "example": 414963,
                      "examples": [
                        414963
                      ]
                    },
                    "action": {
                      "type": "string",
                      "enum": [
                        "pay",
                        "hold",
                        "paysplit",
                        "subscribe",
                        "paydonate",
                        "auth",
                        "regular"
                      ],
                      "description": "Transaction type. Possible values:\n* `pay` - payment\n* `hold` - amount of hold on sender's account\n* `paysplit` - splitting payments\n* `subscribe` - creation of a regular payment\n* `paydonate` - donation\n* `auth` - card preauth\n* `regular` - regular payment",
                      "example": "pay",
                      "examples": [
                        "pay"
                      ]
                    },
                    "agent_commission": {
                      "type": "number",
                      "description": "Agent comission in payment currency",
                      "example": 0.0,
                      "examples": [
                        0.0
                      ]
                    },
                    "amount": {
                      "type": "number",
                      "description": "Payment amount",
                      "example": 0.02,
                      "examples": [
                        0.02
                      ]
                    },
                    "amount_bonus": {
                      "type": "number",
                      "description": "Payer bonus amount in payment currency debit",
                      "example": 0.0,
                      "examples": [
                        0.0
                      ]
                    },
                    "amount_credit": {
                      "type": "number",
                      "description": "Payment amount for credit in currency of `currency_credit`",
                      "example": 0.02,
                      "examples": [
                        0.02
                      ]
                    },
                    "amount_debit": {
                      "type": "number",
                      "description": "Payment amount for debit in currency of `currency_debit`",
                      "example": 0.02,
                      "examples": [
                        0.02
                      ]
                    },
                    "authcode_credit": {
                      "type": "string",
                      "description": "Authorization code for transaction of credit",
                      "example": "703006",
                      "examples": [
                        "703006"
                      ]
                    },
                    "authcode_debit": {
                      "type": "string",
                      "description": "Authorization code for transaction of debit",
                      "example": "108527",
                      "examples": [
                        "108527"
                      ]
                    },
                    "bonus_procent": {
                      "type": "number",
                      "description": "Discount rate in percent",
                      "example": 7.0,
                      "examples": [
                        7.0
                      ]
                    },
                    "bonus_type": {
                      "type": "string",
                      "enum": [
                        "bonusplus",
                        "discount_club",
                        "personal",
                        "promo"
                      ],
                      "description": "Bonus type, ",
                      "example": "bonusplus",
                      "examples": [
                        "bonusplus"
                      ]
                    },
                    "card_token": {
                      "type": "string",
                      "description": "Sender's card token",
                      "example": "2DFBFE626B7341611450DE81E971E948D6F260",
                      "examples": [
                        "2DFBFE626B7341611450DE81E971E948D6F260"
                      ]
                    },
                    "commission_credit": {
                      "type": "number",
                      "description": "Commission from the receiver in `currency_credit`",
                      "example": 0.0,
                      "examples": [
                        0.0
                      ]
                    },
                    "commission_debit": {
                      "type": "number",
                      "description": "Commission from the sender in `currency_debit`",
                      "example": 0.0,
                      "examples": [
                        0.0
                      ]
                    },
                    "create_date": {
                      "type": "integer",
                      "format": "timestamp-ms",
                      "description": "Date of payment creation",
                      "example": 1501757716373,
                      "examples": [
                        1501757716373
                      ]
                    },
                    "currency": {
                      "type": "string",
                      "description": "Payment currency",
                      "example": "UAH",
                      "examples": [
                        "UAH"
                      ]
                    },
                    "currency_credit": {
                      "type": "string",
                      "description": "Transaction currency of credit",
                      "example": "UAH",
                      "examples": [
                        "UAH"
                      ]
                    },
                    "currency_debit": {
                      "type": "string",
                      "description": "Transaction currency of debit",
                      "example": "UAH",
                      "examples": [
                        "UAH"
                      ]
                    },
                    "description": {
                      "type": "string",
                      "description": "Payment description",
                      "example": "test",
                      "examples": [
                        "test"
                      ]
                    },
                    "end_date": {
                      "type": "integer",
                      "format": "timestamp-ms",
                      "description": "Date of payment edition/end",
                      "example": 1501757729972,
                      "examples": [
                        1501757729972
                      ]
                    },
                    "info": {
                      "type": "string",
                      "description": "Additional payment information",
                      "example": "My information",
                      "examples": [
                        "My information"
                      ]
                    },
                    "ip": {
                      "type": "string",
                      "description": "Sender's IP address",
                      "example": "8.8.8.8",
                      "examples": [
                        "8.8.8.8"
                      ]
                    },
                    "is_3ds": {
                      "type": "boolean",
                      "description": "Possible values:\n* `true` - transaction passed with 3DS\n* `false` - transaction passed without 3DS"
                    },
                    "liqpay_order_id": {
                      "type": "string",
                      "description": "Payment order_id in LiqPay system",
                      "example": "NYMK3AE61501685438251925",
                      "examples": [
                        "NYMK3AE61501685438251925"
                      ]
                    },
                    "moment_part": {
                      "type": "boolean",
                      "description": "Payment indication in parts"
                    },
                    "mpi_eci": {
                      "type": "integer",
                      "enum": [
                        5,
                        6,
                        7
                      ],
                      "description": "Possible values:\n* `5` - the transaction passed with 3DS (issuer and acquirer support 3d Secure technology)\n* `6` - the issuer of the payer card does not support 3d Secure technology\n* `7` - the operation passed without 3d Secure",
                      "example": 7,
                      "examples": [
                        7
                      ]
                    },
                    "order_id": {
                      "type": "string",
                      "description": "Order_id payment",
                      "example": "98R1U1OV1485849059893399",
                      "examples": [
                        "98R1U1OV1485849059893399"
                      ]
                    },
                    "payment_id": {
                      "type": "number",
                      "description": "Payment id in LiqPay system",
                      "example": 165629,
                      "examples": [
                        165629
                      ]
                    },
                    "paytype": {
                      "type": "string",
                      "enum": [
                        "card",
                        "privat24",
                        "moment_part",
                        "cash",
                        "invoice",
                        "qr"
                      ],
                      "description": "Methods of payment. Possible values:\n* `card` - card payment\n* `privat24` - with privat24 account\n* `moment_part` - installments\n* `cash` - cash\n* `invoice` - to email\n* `qr` - qr code scanning",
                      "example": "card",
                      "examples": [
                        "card"
                      ]
                    },
                    "public_key": {
                      "type": "string",
                      "description": "Shop public key",
                      "example": "i000000000",
                      "examples": [
                        "i000000000"
                      ]
                    },
                    "receiver_commission": {
                      "type": "number",
                      "description": "Receiver comission in payment currency",
                      "example": 0.0,
                      "examples": [
                        0.0
                      ]
                    },
                    "rrn_credit": {
                      "type": "string",
                      "description": "Unique transaction ID in authorization and settlement system of issuer bank `Retrieval Reference number`",
                      "example": "000664267607",
                      "examples": [
                        "000664267607"
                      ]
                    },
                    "rrn_debit": {
                      "type": "string",
                      "description": "Unique transaction ID in authorization and settlement system of issuer bank `Retrieval Reference number`",
                      "example": "000664267598",
                      "examples": [
                        "000664267598"
                      ]
                    },
                    "sender_bonus": {
                      "type": "number",
                      "description": "Sender's bonus in the payment currency",
                      "example": 0.0,
                      "examples": [
                        0.0
                      ]
                    },
                    "sender_card_bank": {
                      "type": "string",
                      "description": "Sender's card bank",
                      "example": "pb",
                      "examples": [
                        "pb"
                      ]
                    },
                    "sender_card_country": {
                      "type": "string",
                      "description": "Sender's card country. Digital [ISO 3166-1 code](https://en.wikipedia.org/wiki/ISO_3166-1)",
                      "example": 804,
                      "examples": [
                        804
                      ]
                    },
                    "sender_card_mask2": {
                      "type": "string",
                      "description": "Sender's card",
                      "example": "473118*97",
                      "examples": [
                        "473118*97"
                      ]
                    },
                    "sender_card_type": {
                      "type": "string",
                      "description": "Sender's card type MC/Visa",
                      "example": "visa",
                      "examples": [
                        "visa"
                      ]
                    },
                    "sender_commission": {
                      "type": "number",
                      "description": "Commission from the sender in the payment currency",
                      "example": 0.0,
                      "examples": [
                        0.0
                      ]
                    },
                    "sender_phone": {
                      "type": "string",
                      "description": "Sender's phone number",
                      "example": "380950000001",
                      "examples": [
                        "380950000001"
                      ]
                    },
                    "status": {
                      "type": "string",
                      "enum": [
                        "error",
                        "failure",
                        "reversed",
                        "subscribed",
                        "success",
                        "unsubscribed",
                        "3ds_verify",
                        "captcha_verify",
                        "cvv_verify",
                        "ivr_verify",
                        "password_verify",
                        "phone_verify",
                        "pin_verify",
                        "receiver_verify",
                        "sender_verify",
                        "senderapp_verify",
                        "wait_qr",
                        "p24_verify",
                        "mp_verify",
                        "cash_wait",
                        "hold_wait",
                        "invoice_wait",
                        "prepared",
                        "processing",
                        "wait_accept",
                        "wait_card",
                        "wait_compensation",
                        "wait_lc",
                        "wait_reserve",
                        "wait_secure",
                        "try_again"
                      ],
                      "description": "Payment status.\nAvailable values:\nFinal payment statuses\n* `error` - Failed payment. Data is incorrect\n* `failure` - Failed payment\n* `reversed` - Payment refunded\n* `subscribed` - Subscribed successfully framed\n* `success` - Successful payment\n* `unsubscribed` - Subscribed successfully deactivated\nStatuses that required payment confirmation\n* `3ds_verify` - 3DS verification is required.\n To finish the payment you will require a [3ds_verify](https://www.liqpay.ua/en/doc/api/confirmation/3ds)\n* `captcha_verify` - Waiting for customer to confirm with captcha\n* `cvv_verify` - Sender's card CVV is required. To finish the payment you will require a [cvv_verify](https://www.liqpay.ua/en/doc/api/confirmation/CVV)\n* `ivr_verify` - Waiting for customer to confirm with IVR\n`otp_verify` OTP confirmation is required. OTP is sent to a customer phone number.\n To finish the payment you will require a [otp_verify](https://www.liqpay.ua/en/doc/api/confirmation/OTP)\n* `password_verify` - Waiting for customer to confirm with [Privat24](http://privat24.ua/)\n* `phone_verify` - Waiting for customer to enter a phone number.\n To finish the payment you will require a `phone_verify`\n* `pin_verify` - Waiting for customer to confirm with PIN-code\n* `receiver_verify` - Receiver additional data is required. To finish the payment you will require a [receiver_verify](https://www.liqpay.ua/en/doc/api/confirmation/receiver_verify)\n* `sender_verify` - Sender's additional data is required.\n To finish the payment you will require a [sender_verify](https://www.liqpay.ua/en/doc/api/confirmation/sender_verify)\n* `senderapp_verify` - Waiting for customer to confirm with Privat24\n* `wait_qr` - Waiting for customer to scan QR-code\n* `p24_verify` - Waiting for payment finish in [Privat24](http://privat24.ua/)\n* `mp_verify` - Waiting for payment finish in MasterPass wallet\nOther payment statuses\n* `cash_wait` - Waiting for payment in self-service terminal\n* `hold_wait` - Amount was successfully blocked on the sender's account\n* `invoice_wait` - Invoice is created successfully, waiting for a payment\n* `prepared` - Payment is created, waiting for customer to finish it\n* `processing` - Payment is processing\n* `wait_accept` - Money are withdrawn from client but the store is still not verified. If the store is not activated for 60 days, payment will be automatically cancelled\n* `wait_card` - Recipient didn't set the compensation method\n* `wait_compensation` - Payment is successful, it will be transferred in daily settlement\n* `wait_lc` - Protected payment. Charging is successful, waiting for receipt of goods confirmation\n* `wait_reserve` - Funds are reserved to make a refund according to a refund request\n* `wait_secure` - Payment is verified\n* `try_again` - Payment unsuccessful. Client can try again",
                      "example": "success",
                      "examples": [
                        "success"
                      ]
                    },
                    "wait_reserve_status": {
                      "type": "boolean",
                      "enum": [
                        true
                      ],
                      "default": true,
                      "description": "An additional payment status that indicates that the current payment is reserved for processing a return at your store. Possible values:\n* `true` - the payment is reserved for refund"
                    },
                    "transaction_id": {
                      "type": "number",
                      "description": "Id transactions in the LiqPay system",
                      "example": 165629,
                      "examples": [
                        165629
                      ]
                    },
                    "type": {
                      "type": "string",
                      "description": "Payment type",
                      "example": "buy",
                      "examples": [
                        "buy"
                      ]
                    },
                    "version": {
                      "type": "integer",
                      "enum": [
                        3
                      ],
                      "default": 3,
                      "description": "Version API",
                      "example": 3,
                      "examples": [
                        3
                      ]
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/request?path=partnership.shop_create.create": {
      "post": {
        "summary": "Partner's. Company creation. Company creation create",
        "operationId": "partnership/shop_create/create",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "version": {
                    "type": "integer",
                    "enum": [
                      3
                    ],
                    "default": 3,
                    "description": "Version API",
                    "example": 3,
                    "examples": [
                      3
                    ]
                  },
                  "public_key": {
                    "type": "string",
                    "description": "Public key - the store identifier. You can get the key in the [store settings](https://www.liqpay.ua/en/adminbusiness)"
                  },
                  "action": {
                    "type": "string",
                    "enum": [
                      "agent_shop_create"
                    ],
                    "default": "agent_shop_create",
                    "example": "agent_shop_create",
                    "examples": [
                      "agent_shop_create"
                    ]
                  },
                  "description": {
                    "type": "string",
                    "description": "Store description",
                    "example": "site description",
                    "examples": [
                      "site description"
                    ]
                  },
                  "email": {
                    "type": "string",
                    "description": "Store email",
                    "example": "email@gmail.com",
                    "examples": [
                      "email@gmail.com"
                    ]
                  },
                  "name": {
                    "type": "string",
                    "description": "Store name (uk, en)",
                    "example": "Site name",
                    "examples": [
                      "Site name"
                    ]
                  },
                  "phone": {
                    "type": "string",
                    "description": "Shop phone number",
                    "example": "+380950000001",
                    "examples": [
                      "+380950000001",
                      "380950000001"
                    ]
                  },
                  "site": {
                    "type": "string",
                    "description": "Store URL",
                    "example": "agent1.site.com",
                    "examples": [
                      "agent1.site.com"
                    ]
                  },
                  "iban": {
                    "type": "string",
                    "maxLength": 34,
                    "description": "IBAN to receive payments in this store"
                  },
                  "company": {
                    "type": "string",
                    "description": "Company name (uk, en)"
                  },
                  "okpo": {
                    "type": "string",
                    "description": "OKPO account"
                  },
                  "amount_procent_agent": {
                    "type": "number",
                    "description": "Agent fee in %"
                  },
                  "amount_static_agent": {
                    "type": "number",
                    "description": "Agent static fee"
                  },
                  "currency_static_agent": {
                    "type": "string",
                    "description": "Currency of agent static fee"
                  },
                  "can_reports": {
                    "type": "boolean",
                    "description": "Allows the owner of the main company to view the payment history of the created company, pass the value `true`"
                  },
                  "can_checkout_edit": {
                    "type": "boolean",
                    "description": "Allows the owner of the main company to edit the payment page settings of the company created, pass the value `true`"
                  },
                  "logo": {
                    "type": "string",
                    "description": "URL shop logo"
                  },
                  "public_phone": {
                    "type": "string",
                    "description": "Shop public phone number"
                  },
                  "aggregator": {
                    "type": "object",
                    "properties": {
                      "law_okpo": {
                        "type": "string",
                        "maxLength": 255,
                        "description": "USREOU of an enterprise"
                      },
                      "law_name": {
                        "type": "string",
                        "maxLength": 255,
                        "description": "Enterprise name"
                      },
                      "law_iban": {
                        "type": "string",
                        "maxLength": 255,
                        "description": "Iban of an enterprise"
                      },
                      "law_contacts": {
                        "type": "object",
                        "properties": {
                          "phone": {
                            "type": "string",
                            "description": "Contact number of an enterprise"
                          },
                          "email": {
                            "type": "string",
                            "description": "Contact email of an enterprise"
                          }
                        },
                        "description": "Contact details of an enterprise"
                      },
                      "law_cto_info": {
                        "type": "object",
                        "properties": {
                          "name": {
                            "type": "string",
                            "description": "Full name of the head of an enterprise"
                          },
                          "inn": {
                            "type": "string",
                            "description": "TIN of the head of an enterprise"
                          },
                          "birth_date": {
                            "type": "string",
                            "format": "date",
                            "description": "Birth date of the head of an enterprise. Enter the date in this format: 2015-03-31"
                          },
                          "citizenship": {
                            "type": "string",
                            "description": "Nationality of the head of an enterprise. Enter the country in Latin letters",
                            "example": "Ukraine",
                            "examples": [
                              "Ukraine"
                            ]
                          },
                          "residency": {
                            "type": "string",
                            "description": "Residence of the head of an enterprise"
                          }
                        },
                        "description": "Information about the head of an enterprise"
                      },
                      "law_owners_info": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "name": {
                              "type": "string",
                              "description": "Full name of the owner of an enterprise"
                            },
                            "inn": {
                              "type": "string",
                              "description": "TIN of the owner of an enterprise"
                            },
                            "birth_date": {
                              "type": "string",
                              "format": "date",
                              "description": "Birth date of the owner of an enterprise. Enter the date in this format: 2015-03-31"
                            },
                            "citizenship": {
                              "type": "string",
                              "description": "Nationality of the owner of an enterprise. Enter the country in Latin letters",
                              "example": "Ukraine",
                              "examples": [
                                "Ukraine"
                              ]
                            },
                            "share_in_capital": {
                              "type": "string",
                              "description": "The ownership interest in the authorized capital of an enterprise"
                            },
                            "residency": {
                              "type": "string",
                              "description": "Residence of the owner of the enterprise"
                            }
                          }
                        },
                        "description": "Information on the final beneficial owners of an enterprise"
                      },
                      "law_co_owners_info": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "name": {
                              "type": "string",
                              "description": "Full name of the owner of major shareholding. Transfer if the owner is an individual"
                            },
                            "inn": {
                              "type": "string",
                              "description": "TIN of the owner of major shareholding. Transfer if the owner is an individual"
                            },
                            "birth_date": {
                              "type": "string",
                              "format": "date",
                              "description": "Birth date of the owner of major shareholding. Transfer if the owner is an individual"
                            },
                            "citizenship": {
                              "type": "string",
                              "description": "Nationality of the owner of major shareholding. Enter the country in Latin letters. Transfer if the owner is an individual",
                              "example": "Ukraine",
                              "examples": [
                                "Ukraine"
                              ]
                            },
                            "share_in_capital": {
                              "type": "string",
                              "description": "The size of the ownership interest. Transfer for both individuals and legal entities"
                            },
                            "residency": {
                              "type": "string",
                              "description": "Residence of the owner of major shareholding. Transfer if the owner is an individual"
                            },
                            "company_name": {
                              "type": "string",
                              "maxLength": 255,
                              "description": "Enterprise name. Transfer if the owner is a legal entity"
                            },
                            "company_okpo": {
                              "type": "string",
                              "maxLength": 255,
                              "description": "USREOU of an enterprise. Transfer if the owner is a legal entity"
                            }
                          }
                        },
                        "description": "Information about owners of major shareholding"
                      }
                    },
                    "required": [
                      "law_okpo",
                      "law_name",
                      "law_iban",
                      "law_contacts",
                      "law_cto_info",
                      "law_owners_info",
                      "law_co_owners_info"
                    ],
                    "description": "Parameters for aggregators"
                  }
                },
                "required": [
                  "version",
                  "public_key",
                  "action",
                  "description",
                  "email",
                  "name",
                  "phone",
                  "site"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "private_key": {
                      "type": "string",
                      "description": "Company private_key",
                      "example": "wGsqoko5412LcD0vB215XK2wQSgLDVBrsaPIRi6",
                      "examples": [
                        "wGsqoko5412LcD0vB215XK2wQSgLDVBrsaPIRi6"
                      ]
                    },
                    "public_key": {
                      "type": "string",
                      "description": "Company public_key",
                      "example": "i000000000",
                      "examples": [
                        "i000000000"
                      ]
                    },
                    "status": {
                      "type": "string",
                      "enum": [
                        "success"
                      ],
                      "default": "success",
                      "description": "Available values:\n* `success` - Successful payment",
                      "example": "success",
                      "examples": [
                        "success"
                      ]
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/request?path=partnership.shop_create.register": {
      "post": {
        "summary": "Partner's. Company creation. Company creation register",
        "operationId": "partnership/shop_create/register",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "version": {
                    "type": "integer",
                    "enum": [
                      3
                    ],
                    "default": 3,
                    "description": "Version API",
                    "example": 3,
                    "examples": [
                      3
                    ]
                  },
                  "public_key": {
                    "type": "string",
                    "description": "Public key - the store identifier. You can get the key in the [store settings](https://www.liqpay.ua/en/adminbusiness)"
                  },
                  "action": {
                    "type": "string",
                    "enum": [
                      "agent_shop_register"
                    ],
                    "default": "agent_shop_register",
                    "example": "agent_shop_register",
                    "examples": [
                      "agent_shop_register"
                    ]
                  },
                  "phone": {
                    "type": "string",
                    "description": "Shop phone number",
                    "example": "+380950000001",
                    "examples": [
                      "+380950000001",
                      "380950000001"
                    ]
                  },
                  "email": {
                    "type": "string",
                    "description": "Store email",
                    "example": "email@gmail.com",
                    "examples": [
                      "email@gmail.com"
                    ]
                  },
                  "name": {
                    "type": "string",
                    "description": "Store name (uk, en)",
                    "example": "Site name",
                    "examples": [
                      "Site name"
                    ]
                  },
                  "url_site": {
                    "type": "string",
                    "description": "Store website URL",
                    "example": "agent1.site.com",
                    "examples": [
                      "agent1.site.com"
                    ]
                  },
                  "url_offer": {
                    "type": "string",
                    "description": "Offer URL"
                  },
                  "url_app_iphone": {
                    "type": "string",
                    "description": "URL to the app in the App Store"
                  },
                  "url_app_android": {
                    "type": "string",
                    "description": "URL to the app in the Play Market"
                  },
                  "telegram": {
                    "type": "string",
                    "description": "Link to the Telegram bot"
                  },
                  "viber": {
                    "type": "string",
                    "description": "Link to the Viber bot"
                  },
                  "instagram": {
                    "type": "string",
                    "description": "Instagram account link"
                  },
                  "facebook": {
                    "type": "string",
                    "description": "Link to Facebook group"
                  },
                  "iban": {
                    "type": "string",
                    "maxLength": 34,
                    "description": "IBAN to receive payments in this store"
                  },
                  "okpo": {
                    "type": "string",
                    "description": "OKPO account"
                  },
                  "company": {
                    "type": "string",
                    "description": "Company name (uk, en)"
                  },
                  "mcc_code": {
                    "type": "string",
                    "description": "MSS code"
                  },
                  "docs": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "file": {
                          "type": "string",
                          "description": "base64_encoded_data"
                        },
                        "doc_id": {
                          "type": "number",
                          "description": "Returned from the agent_info_mcc_docs API"
                        },
                        "name": {
                          "type": "string",
                          "description": "Name of the document. If we download a document from the list from API agent_info_mcc_docs, then the name is from the response"
                        },
                        "file_name": {
                          "type": "string",
                          "description": "File name"
                        }
                      },
                      "required": [
                        "file",
                        "name",
                        "file_name"
                      ]
                    },
                    "description": "Documents for store activation"
                  },
                  "amount_procent_agent": {
                    "type": "number",
                    "description": "Agent fee in %"
                  },
                  "amount_static_agent": {
                    "type": "number",
                    "description": "Agent static fee"
                  },
                  "currency_static_agent": {
                    "type": "string",
                    "description": "Currency of agent static fee"
                  },
                  "can_reports": {
                    "type": "boolean",
                    "description": "Allows the owner of the main company to view the payment history of the created company, pass the value `true`"
                  },
                  "can_checkout_edit": {
                    "type": "boolean",
                    "description": "Allows the owner of the main company to edit the payment page settings of the company created, pass the value `true`"
                  },
                  "logo": {
                    "type": "string",
                    "description": "URL shop logo"
                  },
                  "url_callback_status": {
                    "type": "string",
                    "description": "URL for receiving data on document status change (5 - activated, 6 - blocked)"
                  },
                  "description": {
                    "type": "string",
                    "description": "Store description",
                    "example": "site description",
                    "examples": [
                      "site description"
                    ]
                  },
                  "aggregator": {
                    "type": "object",
                    "properties": {
                      "law_okpo": {
                        "type": "string",
                        "maxLength": 255,
                        "description": "USREOU of an enterprise"
                      },
                      "law_name": {
                        "type": "string",
                        "maxLength": 255,
                        "description": "Enterprise name"
                      },
                      "law_iban": {
                        "type": "string",
                        "maxLength": 255,
                        "description": "Iban of an enterprise"
                      },
                      "law_contacts": {
                        "type": "object",
                        "properties": {
                          "phone": {
                            "type": "string",
                            "description": "Contact number of an enterprise"
                          },
                          "email": {
                            "type": "string",
                            "description": "Contact email of an enterprise"
                          }
                        },
                        "description": "Contact details of an enterprise"
                      },
                      "law_cto_info": {
                        "type": "object",
                        "properties": {
                          "name": {
                            "type": "string",
                            "description": "Full name of the head of an enterprise"
                          },
                          "inn": {
                            "type": "string",
                            "description": "TIN of the head of an enterprise"
                          },
                          "birth_date": {
                            "type": "string",
                            "format": "date",
                            "description": "Birth date of the head of an enterprise. Enter the date in this format: 2015-03-31"
                          },
                          "citizenship": {
                            "type": "string",
                            "description": "Nationality of the head of an enterprise. Enter the country in Latin letters",
                            "example": "Ukraine",
                            "examples": [
                              "Ukraine"
                            ]
                          },
                          "residency": {
                            "type": "string",
                            "description": "Residence of the head of an enterprise"
                          }
                        },
                        "description": "Information about the head of an enterprise"
                      },
                      "law_owners_info": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "name": {
                              "type": "string",
                              "description": "Full name of the owner of an enterprise"
                            },
                            "inn": {
                              "type": "string",
                              "description": "TIN of the owner of an enterprise"
                            },
                            "birth_date": {
                              "type": "string",
                              "format": "date",
                              "description": "Birth date of the owner of an enterprise. Enter the date in this format: 2015-03-31"
                            },
                            "citizenship": {
                              "type": "string",
                              "description": "Nationality of the owner of an enterprise. Enter the country in Latin letters",
                              "example": "Ukraine",
                              "examples": [
                                "Ukraine"
                              ]
                            },
                            "share_in_capital": {
                              "type": "string",
                              "description": "The ownership interest in the authorized capital of an enterprise"
                            },
                            "residency": {
                              "type": "string",
                              "description": "Residence of the owner of the enterprise"
                            }
                          }
                        },
                        "description": "Information on the final beneficial owners of an enterprise"
                      },
                      "law_co_owners_info": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "name": {
                              "type": "string",
                              "description": "Full name of the owner of major shareholding. Transfer if the owner is an individual"
                            },
                            "inn": {
                              "type": "string",
                              "description": "TIN of the owner of major shareholding. Transfer if the owner is an individual"
                            },
                            "birth_date": {
                              "type": "string",
                              "format": "date",
                              "description": "Birth date of the owner of major shareholding. Transfer if the owner is an individual"
                            },
                            "citizenship": {
                              "type": "string",
                              "description": "Nationality of the owner of major shareholding. Enter the country in Latin letters. Transfer if the owner is an individual",
                              "example": "Ukraine",
                              "examples": [
                                "Ukraine"
                              ]
                            },
                            "share_in_capital": {
                              "type": "string",
                              "description": "The size of the ownership interest. Transfer for both individuals and legal entities"
                            },
                            "residency": {
                              "type": "string",
                              "description": "Residence of the owner of major shareholding. Transfer if the owner is an individual"
                            },
                            "company_name": {
                              "type": "string",
                              "maxLength": 255,
                              "description": "Enterprise name. Transfer if the owner is a legal entity"
                            },
                            "company_okpo": {
                              "type": "string",
                              "maxLength": 255,
                              "description": "USREOU of an enterprise. Transfer if the owner is a legal entity"
                            }
                          }
                        },
                        "description": "Information about owners of major shareholding"
                      }
                    },
                    "required": [
                      "law_okpo",
                      "law_name",
                      "law_iban",
                      "law_contacts",
                      "law_cto_info",
                      "law_owners_info",
                      "law_co_owners_info"
                    ],
                    "description": "Parameters for aggregators"
                  }
                },
                "required": [
                  "version",
                  "public_key",
                  "action",
                  "phone",
                  "email",
                  "name"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "activation_status": {
                      "type": "number",
                      "description": "Company activation status. 5 - the company is activated, 6 - the company is blocked"
                    },
                    "company_name": {
                      "type": "string",
                      "description": "Full name of the company"
                    },
                    "create_date": {
                      "type": "string",
                      "format": "date",
                      "description": "Date of creation"
                    },
                    "email": {
                      "type": "string",
                      "description": "Company e-mail"
                    },
                    "name": {
                      "type": "string",
                      "description": "Name of the company"
                    },
                    "okpo": {
                      "type": "string",
                      "description": "OKPO account"
                    },
                    "phone": {
                      "type": "string",
                      "description": "Phone"
                    },
                    "public_key": {
                      "type": "string",
                      "description": "Public key"
                    },
                    "refund_number": {
                      "type": "string",
                      "description": "Company reimbursement account"
                    },
                    "update_date": {
                      "type": "string",
                      "format": "date",
                      "description": "Update date"
                    },
                    "url": {
                      "type": "string",
                      "description": "Company URL"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/request?path=partnership.shop_create.available_mcc": {
      "post": {
        "summary": "Partner's. Company creation. Available МСС",
        "operationId": "partnership/shop_create/available_mcc",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "action": {
                    "type": "string",
                    "enum": [
                      "agent_info_mcc_codes"
                    ],
                    "default": "agent_info_mcc_codes"
                  },
                  "version": {
                    "type": "integer",
                    "enum": [
                      3
                    ],
                    "default": 3,
                    "description": "Version API"
                  },
                  "public_key": {
                    "type": "string",
                    "description": "Public key - the store identifier. You can get the key in the [store settings](https://www.liqpay.ua/en/adminbusiness)"
                  },
                  "language": {
                    "type": "string",
                    "enum": [
                      "en",
                      "uk"
                    ],
                    "default": "uk",
                    "description": "Locale in which to return the answer"
                  }
                },
                "required": [
                  "action",
                  "version",
                  "public_key"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "mcc_codes": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "number",
                            "description": "Identifier"
                          },
                          "mcc_code": {
                            "type": "number",
                            "description": "Meaning of MCC. Blank for code category, contains value for MCC"
                          },
                          "name": {
                            "type": "string",
                            "description": "Name of code or category of codes"
                          },
                          "parent_id": {
                            "type": "number",
                            "description": "Code category identifier. Blank for code categories, contains value for MCC"
                          }
                        }
                      },
                      "description": "Array with code data"
                    },
                    "result": {
                      "type": "string",
                      "enum": [
                        "ok",
                        "error"
                      ],
                      "description": "Result of the request"
                    },
                    "status": {
                      "type": "string",
                      "description": "Request execution status"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/request?path=partnership.shop_create.documents": {
      "post": {
        "summary": "Partner's. Company creation. Documents",
        "operationId": "partnership/shop_create/documents",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "action": {
                    "type": "string",
                    "enum": [
                      "agent_info_mcc_docs"
                    ],
                    "default": "agent_info_mcc_docs"
                  },
                  "version": {
                    "type": "integer",
                    "enum": [
                      3
                    ],
                    "default": 3,
                    "description": "Version API"
                  },
                  "mcc_code": {
                    "type": "number",
                    "maxLength": 4,
                    "description": "MCC Code Meaning"
                  },
                  "public_key": {
                    "type": "string",
                    "description": "Public key - the store identifier. You can get the key in the [store settings](https://www.liqpay.ua/en/adminbusiness)"
                  },
                  "language": {
                    "type": "string",
                    "enum": [
                      "en",
                      "uk"
                    ],
                    "default": "uk",
                    "description": "Locale in which to return the answer"
                  }
                },
                "required": [
                  "action",
                  "version",
                  "mcc_code",
                  "public_key"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "result": {
                      "type": "string",
                      "enum": [
                        "ok",
                        "error"
                      ],
                      "description": "Result of the request"
                    },
                    "status": {
                      "type": "string",
                      "description": "Request execution status"
                    },
                    "expected_docs": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "doc_id": {
                            "type": "number",
                            "description": "Document ID"
                          },
                          "doc_type": {
                            "type": "string",
                            "description": "Document type: required - a required document, allof - the document can be replaced with all other documents from the list, optional - an optional document"
                          },
                          "name": {
                            "type": "string",
                            "description": "Document's name"
                          },
                          "alt_docs": {
                            "type": "array",
                            "description": "An array of document identifiers that can replace the current document"
                          },
                          "description": {
                            "type": "string",
                            "description": "Description of the document"
                          }
                        }
                      },
                      "description": "An array containing the data of documents required for the received MCC"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/request?path=partnership.shop_edit": {
      "post": {
        "summary": "Partner's. Company editing",
        "operationId": "partnership/shop_edit",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "version": {
                    "type": "integer",
                    "enum": [
                      3
                    ],
                    "default": 3,
                    "description": "Version API",
                    "example": 3,
                    "examples": [
                      3
                    ]
                  },
                  "public_key": {
                    "type": "string",
                    "description": "Public key - the store identifier. You can get the key in the [store settings](https://www.liqpay.ua/en/adminbusiness)"
                  },
                  "action": {
                    "type": "string",
                    "enum": [
                      "agent_shop_edit"
                    ],
                    "default": "agent_shop_edit",
                    "example": "agent_shop_edit",
                    "examples": [
                      "agent_shop_edit"
                    ]
                  },
                  "description": {
                    "type": "string",
                    "description": "Store description",
                    "example": "site description",
                    "examples": [
                      "site description"
                    ]
                  },
                  "email": {
                    "type": "string",
                    "description": "Store email",
                    "example": "email@gmail.com",
                    "examples": [
                      "email@gmail.com"
                    ]
                  },
                  "merchant_public_key": {
                    "type": "string",
                    "description": "Public_key of agent shop",
                    "example": "i3111000000",
                    "examples": [
                      "i3111000000"
                    ]
                  },
                  "name": {
                    "type": "string",
                    "description": "Store name (uk, en)",
                    "example": "Site name",
                    "examples": [
                      "Site name"
                    ]
                  },
                  "phone": {
                    "type": "string",
                    "description": "Shop phone number",
                    "example": "+380950000001",
                    "examples": [
                      "+380950000001",
                      "380950000001"
                    ]
                  },
                  "site": {
                    "type": "string",
                    "description": "Store URL",
                    "example": "agent1.site.com",
                    "examples": [
                      "agent1.site.com"
                    ]
                  },
                  "iban": {
                    "type": "string",
                    "maxLength": 34,
                    "description": "IBAN to receive payments in this store"
                  },
                  "company": {
                    "type": "string",
                    "description": "Company name (uk, en)"
                  },
                  "okpo": {
                    "type": "string",
                    "description": "OKPO account"
                  },
                  "amount_procent_agent": {
                    "type": "number",
                    "description": "Agent fee in %"
                  },
                  "amount_static_agent": {
                    "type": "number",
                    "description": "Agent static fee"
                  },
                  "currency_static_agent": {
                    "type": "string",
                    "description": "Currency of agent static fee"
                  },
                  "can_reports": {
                    "type": "boolean",
                    "description": "Allows the owner of the main company to view the payment history of the created company, pass the value `true`"
                  },
                  "can_checkout_edit": {
                    "type": "boolean",
                    "description": "Allows the owner of the main company to edit the payment page settings of the company created, pass the value `true`"
                  },
                  "logo": {
                    "type": "string",
                    "description": "URL shop logo"
                  },
                  "public_phone": {
                    "type": "string",
                    "description": "Shop public phone number"
                  }
                },
                "required": [
                  "version",
                  "public_key",
                  "action",
                  "description",
                  "email",
                  "merchant_public_key",
                  "name",
                  "phone",
                  "site"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "private_key": {
                      "type": "string",
                      "description": "Company private_key",
                      "example": "wGsqoko5412LcD0vB215XK2wQSgLDVBrsaPIRi6",
                      "examples": [
                        "wGsqoko5412LcD0vB215XK2wQSgLDVBrsaPIRi6"
                      ]
                    },
                    "public_key": {
                      "type": "string",
                      "description": "Company public_key",
                      "example": "i000000000",
                      "examples": [
                        "i000000000"
                      ]
                    },
                    "status": {
                      "type": "string",
                      "enum": [
                        "success"
                      ],
                      "default": "success",
                      "description": "Available values:\n* `success` - Successful editing",
                      "example": "success",
                      "examples": [
                        "success"
                      ]
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/request?path=partnership.info_merchant": {
      "post": {
        "summary": "Partner's. Information about company",
        "operationId": "partnership/info_merchant",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "version": {
                    "type": "integer",
                    "enum": [
                      3
                    ],
                    "default": 3,
                    "description": "Version API",
                    "example": 3,
                    "examples": [
                      3
                    ]
                  },
                  "public_key": {
                    "type": "string",
                    "description": "Public_key of agent shop"
                  },
                  "action": {
                    "type": "string",
                    "enum": [
                      "agent_info_merchant"
                    ],
                    "default": "agent_info_merchant",
                    "example": "agent_info_merchant",
                    "examples": [
                      "agent_info_merchant"
                    ]
                  },
                  "merchant_public_key": {
                    "type": "string",
                    "description": "Public key - the store identifier. You can get the key in the [store settings](https://www.liqpay.ua/en/adminbusiness)",
                    "example": "i3111000000",
                    "examples": [
                      "i3111000000"
                    ]
                  },
                  "language": {
                    "type": "string",
                    "enum": [
                      "uk",
                      "en"
                    ],
                    "default": "uk",
                    "description": "Customer's language"
                  }
                },
                "required": [
                  "version",
                  "public_key",
                  "action",
                  "merchant_public_key"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "blocked": {
                      "type": "boolean",
                      "description": "Company block status"
                    },
                    "company_name": {
                      "type": "string",
                      "description": "Full company name"
                    },
                    "create_date": {
                      "type": "integer",
                      "format": "timestamp-ms",
                      "description": "Date of company creation",
                      "example": 1501764124764,
                      "examples": [
                        1501764124764
                      ]
                    },
                    "description": {
                      "type": "string",
                      "description": "Company description",
                      "example": "site description",
                      "examples": [
                        "site description"
                      ]
                    },
                    "email": {
                      "type": "string",
                      "description": "The company's email",
                      "example": "test@gmail.com",
                      "examples": [
                        "test@gmail.com"
                      ]
                    },
                    "logo": {
                      "type": "string",
                      "description": "Company's logo"
                    },
                    "mfo": {
                      "type": "string",
                      "description": "Company accounts MFI"
                    },
                    "name": {
                      "type": "string",
                      "description": "Company name",
                      "example": "Site name",
                      "examples": [
                        "Site name"
                      ]
                    },
                    "okpo": {
                      "type": "string",
                      "description": "Company accounts OKPO"
                    },
                    "phone": {
                      "type": "string",
                      "description": "Company phone number",
                      "example": "380950000001",
                      "examples": [
                        "380950000001"
                      ]
                    },
                    "public_key": {
                      "type": "string",
                      "description": "Shop public key",
                      "example": "i000000000",
                      "examples": [
                        "i000000000"
                      ]
                    },
                    "refund_number": {
                      "type": "string",
                      "description": "The number of the card / account / terminal of the company where the compensation was paid",
                      "example": "4731180000000001",
                      "examples": [
                        "4731180000000001"
                      ]
                    },
                    "refund_way": {
                      "type": "string",
                      "description": "The way in which the refund takes place",
                      "example": "card",
                      "examples": [
                        "card"
                      ]
                    },
                    "result": {
                      "type": "string",
                      "enum": [
                        "ok",
                        "error"
                      ],
                      "description": "The result of a request",
                      "example": "ok",
                      "examples": [
                        "ok"
                      ]
                    },
                    "status": {
                      "type": "string",
                      "enum": [
                        "activated",
                        "wait_accept"
                      ],
                      "description": "Possible values:\n* `activated` - the store is activated with refund\n* `wait_accept` - the store is activated without refund"
                    },
                    "status_description": {
                      "type": "string",
                      "description": "The description of the error (the language of the error depends on the language parameter)"
                    },
                    "comment": {
                      "type": "string",
                      "description": "Comment from the MEO operator"
                    },
                    "link": {
                      "type": "string",
                      "description": "Link to the merchant's LiqPay Business Cabinet"
                    },
                    "update_date": {
                      "type": "integer",
                      "format": "timestamp-ms",
                      "description": "Date of information update on the company",
                      "example": 1501764124764,
                      "examples": [
                        1501764124764
                      ]
                    },
                    "url": {
                      "type": "string",
                      "description": "URL of company",
                      "example": "site123.site.com",
                      "examples": [
                        "site123.site.com"
                      ]
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/request?path=partnership.info_user": {
      "post": {
        "summary": "Partner's. Information about partner",
        "operationId": "partnership/info_user",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "version": {
                    "type": "integer",
                    "enum": [
                      3
                    ],
                    "default": 3,
                    "description": "Version API",
                    "example": 3,
                    "examples": [
                      3
                    ]
                  },
                  "public_key": {
                    "type": "string",
                    "description": "Public_key of agent shop"
                  },
                  "action": {
                    "type": "string",
                    "enum": [
                      "agent_info_user"
                    ],
                    "default": "agent_info_user",
                    "example": "agent_info_user",
                    "examples": [
                      "agent_info_user"
                    ]
                  },
                  "phone": {
                    "type": "string",
                    "description": "Shop phone number",
                    "example": "+380950000001",
                    "examples": [
                      "+380950000001",
                      "380950000001"
                    ]
                  }
                },
                "required": [
                  "version",
                  "public_key",
                  "action",
                  "phone"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "result": {
                      "type": "string",
                      "enum": [
                        "ok",
                        "error"
                      ],
                      "description": "The result of a request",
                      "example": "ok",
                      "examples": [
                        "ok"
                      ]
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "blocked": {
                            "type": "boolean",
                            "description": "Company block status"
                          },
                          "create_date": {
                            "type": "integer",
                            "format": "timestamp-ms",
                            "description": "Date of company creation",
                            "example": 1491294687862,
                            "examples": [
                              1491294687862
                            ]
                          },
                          "description": {
                            "type": "string",
                            "description": "Company description",
                            "example": "site description",
                            "examples": [
                              "site description"
                            ]
                          },
                          "email": {
                            "type": "string",
                            "description": "The company's email",
                            "example": "test@gmail.com",
                            "examples": [
                              "test@gmail.com"
                            ]
                          },
                          "logo": {
                            "type": "string",
                            "description": "Company's logo"
                          },
                          "name": {
                            "type": "string",
                            "description": "Company name",
                            "example": "Shop",
                            "examples": [
                              "Shop"
                            ]
                          },
                          "public_key": {
                            "type": "string",
                            "description": "Shop public key",
                            "example": "i000000000",
                            "examples": [
                              "i000000000"
                            ]
                          },
                          "role": {
                            "type": "string",
                            "description": "The role of the user in the store who requested information",
                            "example": "undefined",
                            "examples": [
                              "undefined"
                            ]
                          },
                          "update_date": {
                            "type": "integer",
                            "format": "timestamp-ms",
                            "description": "Date of information update on the company",
                            "example": 1491294687862,
                            "examples": [
                              1491294687862
                            ]
                          },
                          "url": {
                            "type": "string",
                            "description": "URL of company",
                            "example": "http://test.com",
                            "examples": [
                              "http://test.com"
                            ]
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/p24api/pubinfo": {
      "get": {
        "summary": "Public. Exchange rates of PrivatBank",
        "operationId": "public/exchange",
        "parameters": [
          {
            "name": "exchange",
            "in": "query",
            "schema": {
              "type": "boolean",
              "enum": [
                true
              ],
              "default": true
            },
            "required": true
          },
          {
            "name": "json",
            "in": "query",
            "schema": {
              "type": "boolean",
              "enum": [
                true
              ],
              "default": true
            },
            "required": true
          },
          {
            "name": "coursid",
            "in": "query",
            "schema": {
              "type": "integer",
              "enum": [
                5,
                11
              ]
            },
            "required": true,
            "description": "Possible values:\n* `5` - Cash rate of PrivatBank (in the branches)\n* `11` - Non-cash exchange rate of PrivatBank (conversion by cards, Privat24, replenishment of deposits)\n"
          }
        ],
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "ccy": {
                        "type": "string",
                        "description": "Currency code ([reference currency codes](https://en.wikipedia.org/wiki/ISO_4217))",
                        "example": "EUR",
                        "examples": [
                          "EUR",
                          "USD"
                        ]
                      },
                      "base_ccy": {
                        "type": "string",
                        "description": "National currency code",
                        "example": "UAH",
                        "examples": [
                          "UAH"
                        ]
                      },
                      "buy": {
                        "type": "string",
                        "description": "Buying rate",
                        "example": "19.20000",
                        "examples": [
                          "19.20000",
                          "15.50000"
                        ]
                      },
                      "sale": {
                        "type": "string",
                        "description": "Sales rate",
                        "example": "20.00000",
                        "examples": [
                          "20.00000",
                          "15.85000"
                        ]
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/p24api/exchange_rates": {
      "get": {
        "summary": "Public. Exchange rates archive",
        "operationId": "public/archive",
        "parameters": [
          {
            "name": "json",
            "in": "query",
            "schema": {
              "type": "boolean",
              "enum": [
                true
              ],
              "default": true
            },
            "required": true
          },
          {
            "name": "date",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-liqpay"
            },
            "required": true,
            "description": "Exchange rate date"
          }
        ],
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "date": {
                      "type": "string",
                      "format": "date-liqpay",
                      "example": "01.12.2014",
                      "examples": [
                        "01.12.2014"
                      ]
                    },
                    "bank": {
                      "type": "string",
                      "example": "PB",
                      "examples": [
                        "PB"
                      ]
                    },
                    "baseCurrency": {
                      "type": "integer",
                      "example": 980,
                      "examples": [
                        980
                      ]
                    },
                    "baseCurrencyLit": {
                      "type": "string",
                      "example": "UAH",
                      "examples": [
                        "UAH"
                      ]
                    },
                    "exchangeRate": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "baseCurrency": {
                            "type": "string",
                            "description": "Basic currency (UAH)",
                            "example": "UAH",
                            "examples": [
                              "UAH"
                            ]
                          },
                          "currency": {
                            "type": "string",
                            "description": "Deal currency (USD, EUR, CHF, GBP, PLZ, SEK, XAU, CAD)",
                            "example": "CHF",
                            "examples": [
                              "CHF",
                              "EUR",
                              "GBP",
                              "PLZ",
                              "SEK",
                              "UAH",
                              "USD",
                              "XAU",
                              "CAD"
                            ]
                          },
                          "saleRateNB": {
                            "type": "number",
                            "description": "The sale rate of NBU",
                            "example": 15.638975,
                            "examples": [
                              15.638975,
                              18.79492,
                              23.632491,
                              4.492201,
                              2.028375,
                              1.0,
                              15.056413,
                              17747.747,
                              13.21074
                            ]
                          },
                          "purchaseRateNB": {
                            "type": "number",
                            "description": "The purchase rate of NBU",
                            "example": 15.638975,
                            "examples": [
                              15.638975,
                              18.79492,
                              23.632491,
                              4.492201,
                              2.028375,
                              1.0,
                              15.056413,
                              17747.747,
                              13.21074
                            ]
                          },
                          "saleRate": {
                            "type": "number",
                            "description": "The sale rate of PrivatBank",
                            "example": 17.0,
                            "examples": [
                              17.0,
                              20.0,
                              25.8,
                              5.0,
                              15.7,
                              15.0
                            ]
                          },
                          "purchaseRate": {
                            "type": "number",
                            "description": "Buying rate of PrivatBank",
                            "example": 15.5,
                            "examples": [
                              15.5,
                              19.2,
                              24.0,
                              4.2,
                              15.35,
                              13.0
                            ]
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/ratenbu.php": {
      "get": {
        "summary": "Public. Accounting rate of NBU",
        "operationId": "public/discount_rate",
        "parameters": [
          {
            "name": "year",
            "in": "query",
            "schema": {
              "type": "string",
              "example": "2014",
              "examples": [
                "2014"
              ]
            },
            "required": true,
            "description": "The identifier of the year from which you want to display the «NBU Accounting Rate».\n The parameter takes meanings in the format `YYYY`"
          }
        ],
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "rate_date": {
                        "type": "string",
                        "format": "date-liqpay",
                        "description": "Date of establishing «NBU Accounting Rate»",
                        "example": "17.07.2014",
                        "examples": [
                          "17.07.2014",
                          "15.04.2014"
                        ]
                      },
                      "rate_value": {
                        "type": "number",
                        "description": "The value of the «NBU Discount Rate»",
                        "example": 12.5,
                        "examples": [
                          12.5,
                          9.5
                        ]
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/request?path=callback": {
      "post": {
        "summary": "Callback",
        "operationId": "callback",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "acq_id": {
                    "type": "number",
                    "description": "Acquirer ID"
                  },
                  "action": {
                    "type": "string",
                    "enum": [
                      "pay",
                      "hold",
                      "paysplit",
                      "subscribe",
                      "auth",
                      "regular"
                    ],
                    "description": "Transaction type. Possible values:\n* `pay` - payment\n* `hold` - amount of hold on sender's account\n* `paysplit` - splitting payments\n* `subscribe` - creation of a regular payment\n* `auth` - card preauth\n* `regular` - regular payment"
                  },
                  "agent_commission": {
                    "type": "number",
                    "description": "Agent comission in payment currency"
                  },
                  "amount": {
                    "type": "number",
                    "description": "Payment amount"
                  },
                  "amount_bonus": {
                    "type": "number",
                    "description": "Payer bonus amount in payment currency debit"
                  },
                  "amount_credit": {
                    "type": "number",
                    "description": "Payment amount for credit in currency of `currency_credit`"
                  },
                  "amount_debit": {
                    "type": "number",
                    "description": "Payment amount for debit in currency of `currency_debit`"
                  },
                  "authcode_credit": {
                    "type": "string",
                    "description": "Authorization code for transaction of credit"
                  },
                  "authcode_debit": {
                    "type": "string",
                    "description": "Authorization code for transaction of debit"
                  },
                  "card_token": {
                    "type": "string",
                    "description": "Sender's card token"
                  },
                  "commission_credit": {
                    "type": "number",
                    "description": "Commission from the receiver in `currency_credit`"
                  },
                  "commission_debit": {
                    "type": "number",
                    "description": "Commission from the sender in `currency_debit`"
                  },
                  "completion_date": {
                    "type": "integer",
                    "format": "timestamp-ms",
                    "description": "Charge date"
                  },
                  "create_date": {
                    "type": "integer",
                    "format": "timestamp-ms",
                    "description": "Date of payment creation"
                  },
                  "currency": {
                    "type": "string",
                    "description": "Payment currency"
                  },
                  "currency_credit": {
                    "type": "string",
                    "description": "Transaction currency of credit"
                  },
                  "currency_debit": {
                    "type": "string",
                    "description": "Transaction currency of debit"
                  },
                  "customer": {
                    "type": "string",
                    "maxLength": 100,
                    "description": "Unique customer ID in your shop"
                  },
                  "description": {
                    "type": "string",
                    "description": "Payment description"
                  },
                  "end_date": {
                    "type": "integer",
                    "format": "timestamp-ms",
                    "description": "Date of payment edition/end"
                  },
                  "err_code": {
                    "type": "string",
                    "description": "Error code"
                  },
                  "err_description": {
                    "type": "string",
                    "description": "Error description"
                  },
                  "info": {
                    "type": "string",
                    "description": "Additional payment information"
                  },
                  "ip": {
                    "type": "string",
                    "description": "Sender's IP address"
                  },
                  "is_3ds": {
                    "type": "boolean",
                    "description": "Possible values:\n* `true` - transaction passed with 3DS\n* `false` - transaction passed without 3DS"
                  },
                  "liqpay_order_id": {
                    "type": "string",
                    "description": "Payment order_id in LiqPay system"
                  },
                  "mpi_eci": {
                    "type": "integer",
                    "enum": [
                      5,
                      6,
                      7
                    ],
                    "description": "Possible values:\n* `5` - the transaction passed with 3DS (issuer and acquirer support 3d Secure technology)\n* `6` - the issuer of the payer card does not support 3d Secure technology\n* `7` - the operation passed without 3d Secure"
                  },
                  "order_id": {
                    "type": "string",
                    "description": "Order_id payment"
                  },
                  "payment_id": {
                    "type": "number",
                    "description": "Payment id in LiqPay system"
                  },
                  "paytype": {
                    "type": "string",
                    "enum": [
                      "card",
                      "privat24",
                      "masterpass",
                      "moment_part",
                      "cash",
                      "invoice",
                      "qr"
                    ],
                    "description": "Methods of payment. Possible values:\n* `card` - card payment\n* `privat24` - with privat24 account\n* `masterpass` - with masterpass account\n* `moment_part` - installments\n* `cash` - cash\n* `invoice` - to email\n* `qr` - qr code scanning"
                  },
                  "public_key": {
                    "type": "string",
                    "description": "Shop public key"
                  },
                  "receiver_commission": {
                    "type": "number",
                    "description": "Receiver comission in payment currency"
                  },
                  "redirect_to": {
                    "type": "string",
                    "description": "The link to which a customer has to be redirected to confirm the payment with 3D-Secure"
                  },
                  "refund_date_last": {
                    "type": "integer",
                    "format": "timestamp-ms",
                    "description": "Last return date for payment"
                  },
                  "rrn_credit": {
                    "type": "string",
                    "description": "Unique transaction ID in authorization and settlement system of issuer bank `Retrieval Reference number`"
                  },
                  "rrn_debit": {
                    "type": "string",
                    "description": "Unique transaction ID in authorization and settlement system of issuer bank `Retrieval Reference number`"
                  },
                  "sender_bonus": {
                    "type": "number",
                    "description": "Sender's bonus in the payment currency"
                  },
                  "sender_card_bank": {
                    "type": "string",
                    "description": "Sender's card bank"
                  },
                  "sender_card_country": {
                    "type": "string",
                    "description": "Sender's card country. Digital [ISO 3166-1 code](https://en.wikipedia.org/wiki/ISO_3166-1)"
                  },
                  "sender_card_mask2": {
                    "type": "string",
                    "description": "Sender's card"
                  },
                  "sender_card_type": {
                    "type": "string",
                    "description": "Sender's card type MC/Visa"
                  },
                  "sender_commission": {
                    "type": "number",
                    "description": "Commission from the sender in the payment currency"
                  },
                  "sender_first_name": {
                    "type": "string",
                    "description": "The name of the sender"
                  },
                  "sender_last_name": {
                    "type": "string",
                    "description": "Sender's last name"
                  },
                  "sender_phone": {
                    "type": "string",
                    "description": "Sender's phone number"
                  },
                  "status": {
                    "type": "string",
                    "enum": [
                      "error",
                      "failure",
                      "reversed",
                      "subscribed",
                      "success",
                      "unsubscribed",
                      "3ds_verify",
                      "captcha_verify",
                      "cvv_verify",
                      "ivr_verify",
                      "password_verify",
                      "phone_verify",
                      "pin_verify",
                      "receiver_verify",
                      "sender_verify",
                      "senderapp_verify",
                      "wait_qr",
                      "wait_sender",
                      "cash_wait",
                      "hold_wait",
                      "invoice_wait",
                      "prepared",
                      "processing",
                      "wait_accept",
                      "wait_card",
                      "wait_compensation",
                      "wait_lc",
                      "wait_reserve",
                      "wait_secure"
                    ],
                    "description": "Payment status.\nAvailable values:\nFinal payment statuses\n* `error` - Failed payment. Data is incorrect\n* `failure` - Failed payment\n* `reversed` - Payment refunded\n* `subscribed` - Subscribed successfully framed\n* `success` - Successful payment\n* `unsubscribed` - Subscribed successfully deactivated\nStatuses that required payment confirmation\n* `3ds_verify` - 3DS verification is required. To finish the payment you will require a [3ds_verify](https://www.liqpay.ua/en/doc/api/confirmation/3ds)\n* `captcha_verify` - Waiting for customer to confirm with captcha\n* `cvv_verify` - Sender's card CVV is required. To finish the payment you will require a [cvv_verify](https://www.liqpay.ua/en/doc/api/confirmation/CVV)\n* `ivr_verify` - Waiting for customer to confirm with IVR\n`otp_verify` OTP confirmation is required. OTP is sent to a customer phone number. To finish the payment you will require a [otp_verify](https://www.liqpay.ua/en/doc/api/confirmation/OTP)\n* `password_verify` - Waiting for customer to confirm with [Privat24](http://privat24.ua/)\n* `phone_verify` - Waiting for customer to enter a phone number. To finish the payment you will require a `phone_verify`\n* `pin_verify` - Waiting for customer to confirm with PIN-code\n* `receiver_verify` - Receiver additional data is required. To finish the payment you will require a [receiver_verify](https://www.liqpay.ua/en/doc/api/confirmation/receiver_verify)\n* `sender_verify` - Sender's additional data is required. To finish the payment you will require a [sender_verify](https://www.liqpay.ua/en/doc/api/confirmation/sender_verify)\n* `senderapp_verify` - Waiting for customer to confirm with Privat24\n* `wait_qr` - Waiting for customer to scan QR-code\n* `wait_sender` - Waiting for customer to confirm in mob app [Privat24](http://privat24.ua/)/SENDER\nOther payment statuses\n* `cash_wait` - Waiting for payment in self-service terminal\n* `hold_wait` - Amount was successfully blocked on the sender's account\n* `invoice_wait` - Invoice is created successfully, waiting for a payment\n* `prepared` - Payment is created, waiting for customer to finish it\n* `processing` - Payment is processing\n* `wait_accept` - Money are withdrawn from client but the store is still not verified. If the store is not activated for 60 days, payment will be automatically cancelled\n* `wait_card` - Recipient didn't set the compensation method\n* `wait_compensation` - Payment is successful, it will be transferred in daily settlement\n* `wait_lc` - Protected payment. Charging is successful, waiting for receipt of goods confirmation\n* `wait_reserve` - Funds are reserved to make a refund according to a refund request\n* `wait_secure` - Payment is verified"
                  },
                  "wait_reserve_status": {
                    "type": "boolean",
                    "enum": [
                      true
                    ],
                    "default": true,
                    "description": "An additional payment status that indicates that the current payment is reserved for processing a return at your store. Possible values:\n* `true` - the payment is reserved for refund"
                  },
                  "token": {
                    "type": "string",
                    "description": "Payment token"
                  },
                  "type": {
                    "type": "string",
                    "description": "Payment type"
                  },
                  "version": {
                    "type": "integer",
                    "enum": [
                      3
                    ],
                    "default": 3,
                    "description": "Version API"
                  },
                  "err_erc": {
                    "type": "string",
                    "description": "Error code"
                  },
                  "product_category": {
                    "type": "string",
                    "description": "Product category in your shop"
                  },
                  "product_description": {
                    "type": "string",
                    "description": "Product description"
                  },
                  "product_name": {
                    "type": "string",
                    "description": "Product name in your shop"
                  },
                  "product_url": {
                    "type": "string",
                    "format": "uri",
                    "description": "Product page address"
                  },
                  "refund_amount": {
                    "type": "number",
                    "description": "Refund amount"
                  },
                  "verifycode": {
                    "type": "string",
                    "format": "boolean-yesno",
                    "enum": [
                      "Y"
                    ],
                    "default": "Y",
                    "description": "Verification code"
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}